CREATE TABLE x ( x , x ) ; 
CREATE INDEX x ON x ( x ) ; 
CREATE INDEX x ON x ( x , x ) ; 
ANALYZE ; 
SELECT * FROM x ORDER BY 10 , 10 ; 
INSERT INTO x ( x , x , x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x , x , x , x ) VALUES ( 10 , 'y' , 'y' , 'y' , 'y' , 'y' ) ; 
SELECT x , typeof ( x ) FROM x ORDER BY x ; 
INSERT INTO x VALUES ( 'y' , 'y' ) ; 
CREATE TABLE x ( x , x , x INTEGER ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 ) ; 
SELECT * FROM x WHERE x = 'y' ORDER BY x ; 
DROP TABLE IF EXISTS x ; 
CREATE TABLE x ( x TEXT UNIQUE , x ) ; 
INSERT INTO x ( x ) VALUES ( 10 ) ; 
SELECT quote ( - 'y' ) , quote ( x ) , quote ( - 'y' >= x ) FROM x ; 
SELECT * FROM x WHERE - 'y' >= x ; 
SELECT 10 < x FROM x ; 
SELECT 10 FROM x WHERE 10 < x ; 
CREATE TABLE x ( x INT PRIMARY KEY ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 0.1 ) ; 
PRAGMA x = x ; 
CREATE TABLE x ( x INT , x ) ; 
INSERT INTO x VALUES ( 10 , 'y' ) ; 
CREATE TABLE x ( x TEXT , x ) ; 
CREATE TABLE x AS SELECT * FROM x ; 
SELECT * FROM x JOIN x USING ( id ) ; 
CREATE TABLE x ( x ) ; 
INSERT INTO x VALUES ( 10 ) ; 
INSERT INTO x SELECT x + 10 FROM x ; 
INSERT INTO x SELECT x + 10 FROM x ORDER BY x LIMIT 10 ; 
SELECT x_count ( * ) FROM x ; 
SELECT x_count ( x ) FROM x ; 
CREATE TABLE x ( x INT ) ; INSERT INTO x ( x ) VALUES ( 10 ) ; 
SELECT ( SELECT sum ( x + ( SELECT x ) ) FROM x ) FROM x ; 
SELECT ( SELECT sum ( x + x ) FROM x ) FROM x ; 
CREATE TABLE x ( x INT ) ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT min ( ( SELECT count ( x ) FROM x ) ) FROM x ; 
SELECT max ( ( SELECT x FROM SELECT count ( * ) AS a FROM x AS s ) ) FROM x ; 
INSERT INTO x VALUES ( 10 , 10 ) ; 
SELECT 'y' , * FROM x ; 
INSERT INTO x SELECT x , x , x FROM x WHERE x != 'y' ; 
SELECT x , x , x FROM x ORDER BY x , x DESC , x ; 
ALTER TABLE x RENAME TO x ; 
SELECT * FROM x ; 
DELETE FROM x ; 
INSERT INTO x SELECT x , x , x FROM x ; 
ATTACH 'y' AS x ; 
CREATE TABLE x ( x PRIMARY KEY , x , x ) ; 
CREATE TABLE x . x ( x PRIMARY KEY , x , x ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 'y' ) ; 
INSERT INTO x . x VALUES ( 'y' , 'y' , 'y' ) ; 
SELECT * FROM x WHERE x = 'y' ; 
ALTER TABLE x . x RENAME TO x ; 
SELECT * FROM x . x WHERE x = 'y' ; 
CREATE TABLE x ( x , x , x ) ; 
DROP TABLE x ; 
END ; 
DROP TRIGGER x ; 
UPDATE x SET x = 'y' WHERE x = 'y' ; 
INSERT INTO x VALUES ( NULL ) ; 
SELECT x FROM x ; 
SELECT x FROM x WHERE x = 10 ; 
SELECT * FROM x 
SELECT x , x 
SELECT typeof ( x ) , x , typeof ( x ) , x FROM x ; 
CREATE TABLE x ( x INTEGER ) ; 
SELECT sum ( x ) FROM x ; 
SELECT x , sum ( x ) FROM x GROUP BY x ; 
SELECT sqlite_rename_table ( 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
ALTER TABLE x ADD COLUMN x ; 
CREATE VIEW x AS SELECT * FROM x ; 
SELECT x FROM x WHERE x GLOB 'y' ORDER BY 10 ; 
CREATE TABLE x ( x UNIQUE ) ; 
ALTER TABLE x ADD COLUMN x UNIQUE ; 
ALTER TABLE x ADD COLUMN x PRIMARY KEY ; 
INSERT INTO x VALUES ( 'y' , 0.1 , 10 ) ; 
INSERT INTO x VALUES ( 'y' , 0.1 , 10 , 'y' ) ; 
SELECT * FROM x ORDER BY x ; 
UPDATE x SET x = 10 WHERE x = 10 ; 
SELECT x FROM x ORDER BY x ; 
SELECT * FROM x WHERE x = 10 ; 
SELECT sum ( x ) , x FROM x GROUP BY x ; 
UPDATE x SET x = 10 WHERE x IS NULL AND x < 10 ; 
SELECT typeof ( x ) FROM x ; 
INSERT INTO x VALUES ( 10 , 10 , NULL ) ; 
DROP VIEW x ; 
UPDATE x SET x = x * 10 WHERE x < 10 ; 
UPDATE x SET x = x * 10 ; 
CREATE TABLE x . x ( x , x ) ; 
SELECT * FROM x LIMIT 10 ; 
SELECT x , typeof ( x ) , x , typeof ( x ) , x , typeof ( x ) FROM x LIMIT 10 ; 
DELETE FROM x WHERE x = 10 ; 
INSERT INTO x VALUES ( 'y' ) ; 
SELECT quote ( x ) , quote ( x ) , quote ( x ) FROM x LIMIT 10 ; 
DELETE FROM x WHERE x = 'y' ; 
ALTER TABLE x ADD x ; 
SELECT x FROM x WHERE x = 'y' ; 
ALTER TABLE x ADD x CHECK( x > x ) ; 
SELECT x FROM x WHERE x = 'y' AND x = 'y' ; 
ALTER TABLE x ADD x PRIMARY KEY ; 
PRAGMA x = 10 ; 
PRAGMA x ; 
CREATE TABLE x . x AS SELECT * FROM x ; 
PRAGMA x . x = 10 ; 
SELECT x FROM x . x ; 
ALTER TABLE x . x ADD COLUMN x VARCHAR(128) ; 
SELECT * FROM x . x ; 
PRAGMA x . x ; 
DROP TABLE x . x ; 
VACUUM ; 
SELECT typeof ( x ) , x FROM x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x ) ; 
ALTER TABLE x RENAME x TO x ; 
ALTER TABLE x RENAME COLUMN x TO x ; 
UPDATE x SET x = x + 10 , x = 10 WHERE x = 10 ; 
INSERT INTO x ( x , x , x ) SELECT 10 , 10 , 10 WHERE 10 ; 
SELECT x FROM x WHERE x IN ( 'y' , 'y' ) ; 
SELECT x FROM x WHERE x IN ( 'y' , 'y' , 'y' ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
UPDATE x SET x = 10 ; 
CREATE VIEW x AS SELECT x , x , x FROM x ; 
CREATE VIEW x AS SELECT x , x + x , x , x + x FROM x , x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x ) ; 
CREATE VIEW x AS SELECT x + x CONCAT coalesce ( x , x ) FROM x , x WHERE x = x GROUP BY x HAVING x > 10 ; 
CREATE VIEW x AS SELECT x FROM x UNION ALL SELECT x FROM x ; 
CREATE VIEW x AS SELECT x , x FROM x ; 
CREATE VIRTUAL TABLE x USING echo ( x1 ) ; 
CREATE VIEW x AS SELECT x , x FROM x , x ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
CREATE VIEW x ( x , x ) AS SELECT * FROM x ; 
CREATE TABLE x ( x INTEGER , x TEXT UNIQUE ) ; 
CREATE TABLE x ( x UNIQUE , x , x ) ; 
DROP TRIGGER IF EXISTS x ; 
INSERT INTO x VALUES ( 'y' , 'y' , 'y' , 'y' , 'y' , 10 , 'y' , 10 ) ,( 'y' , 'y' , 'y' , 'y' , 'y' , 10 , 'y' , 10 ) ,( 'y' , 'y' , 'y' , 'y' , 'y' , 10 , 'y' , 10 ) ,( 'y' , 'y' , 'y' , 'y' , 'y' , 10 , 'y' , 10 ) ; 
SELECT sqlite_rename_column ( 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
SELECT x AS d FROM x WHERE x = 10 ; 
CREATE VIEW x AS SELECT x AS d FROM x WHERE x = 10 ; 
CREATE UNIQUE INDEX x ON x ( x ) ; 
CREATE TABLE x . x ( x ) ; 
CREATE VIEW x ( x ) AS SELECT coalesce ( x , x ) FROM x , x WHERE x = x ; 
CREATE INDEX x ON x ( x ) WHERE x > 10 ; 
CREATE VIEW x AS SELECT x , x , x , x FROM x AS one , x ; 
INSERT INTO x VALUES ( 'y' , 'y' , 'y' , NULL , 10 ) ,( 'y' , 'y' , NULL , 'y' , 10 ) ,( 'y' , NULL , 'y' , 'y' , 10 ) ; 
CREATE TABLE x . x ( x INTEGER PRIMARY KEY , x ) ; 
INSERT INTO x . x VALUES ( 10 , 10 ) ; 
INSERT INTO x . x VALUES ( NULL , 10 ) ; 
SELECT x FROM x . x WHERE x = 'y' ; 
CREATE TRIGGER x AFTER INSERT ON x WHEN x IS NULL BEGIN SELECT 10 , 10 , 10 ; END ; 
CREATE TEMP TRIGGER x AFTER INSERT ON x . x BEGIN SELECT 10 , 10 , 10 ; END ; 
CREATE TABLE x . x ( x , x , x ) ; 
INSERT INTO x . x VALUES ( 10 , 10 , 10 ) ; 
SELECT x , x FROM x ; 
CREATE VIRTUAL TABLE x USING tcl ( tcl_command ) ; 
SELECT sqlite_rename_table ( x , 10 , 10 , x , x , x , x ) FROM x ; 
CREATE TABLE x ( x INTEGER NOT NULL PRIMARY KEY ) ; 
CREATE VIEW x AS SELECT x FROM x ; 
CREATE TABLE x ( x INTEGER NOT NULL ) ; 
CREATE VIEW x AS SELECT x AS f1 FROM x ; 
UPDATE x SET x = 'y' WHERE x = 10 ; 
SELECT x , x FROM x WHERE x IS NOT NULL ; 
CREATE TABLE x ( x PRIMARY KEY , x ) ; 
SELECT x FROM x WHERE x LIKE 'y' ; 
CREATE TABLE x ( x , x , x , x , x , x ) ; 
CREATE TABLE x ( x , x , x , x ) ; 
SELECT x , * FROM x ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 , 10 ) ; 
SELECT x , x , x FROM x UNION SELECT x , x , x FROM x ORDER BY x , x ; 
SELECT x , x , x FROM x ; 
CREATE VIEW x AS SELECT * FROM x WHERE ( x = 10 AND 10 ) OR x = 10 ; 
SELECT x ; 
BEGIN ; 
COMMIT ; 
SELECT x , x , x , x FROM x WHERE x = 'y' AND x != 'y' ; 
WITH t4 AS ( SELECT * FROM x ) SELECT 10 ; 
ANALYZE x . x ; 
ANALYZE x ; 
SELECT x , x FROM x ORDER BY x ; 
CREATE TABLE x AS SELECT x , x , x AS c , 'y' AS d FROM x ; 
CREATE INDEX x ON x ( x , x , x , x ) ; 
INSERT INTO x VALUES ( NULL , NULL , NULL ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 ) ; 
INSERT INTO x SELECT x + 10 , x + 10 , x + 10 , x + 10 FROM x ; 
SELECT DISTINCT x FROM x ORDER BY 10 ; 
INSERT INTO x ( x ) VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
INSERT INTO x SELECT * FROM x ; 
INSERT INTO x ( x ) SELECT x FROM x ; 
CREATE VIRTUAL TABLE x USING wholenumber ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
SELECT * , 'y' FROM x WHERE x BETWEEN 10 AND 10 ORDER BY x ; 
SELECT count ( x ) FROM x ; 
CREATE TABLE x ( x PRIMARY KEY ) ; 
INSERT INTO x VALUES ( 'y' , NULL , 'y' ) ; 
SELECT 10 FROM x WHERE x IN ( 10 , 10 , 10 ) ; 
ATTACH DATABASE 'y' AS x ; 
DETACH DATABASE x ; 
DETACH x ; 
UPDATE x SET x = x + 10 ; 
UPDATE x . x SET x = x + 10 ; 
SELECT x , x , x FROM x . x ; 
SELECT * FROM x WHERE x > 10 ; 
UPDATE x SET x = x + 10 WHERE x = 10 ; 
SELECT * FROM x . x UNION ALL SELECT * FROM x . x ; 
CREATE VIEW x AS SELECT x * 10 + x FROM x ; 
ATTACH printf ( 'y' , 10 ) AS x ; 
INSERT INTO x . x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ; 
CREATE TABLE x ( x TEXT NOT NULL PRIMARY KEY ) ; 
CREATE TABLE x . x ( x INTEGER , x INTEGER , x INTEGER , x ) ; 
UPDATE x . x SET x = 10 ; 
ROLLBACK ; 
CREATE VIEW x . x AS SELECT * FROM x ; 
INSERT INTO x . x VALUES ( 'y' , 'y' ) ; 
DROP VIEW x . x ; 
DROP TRIGGER x . x ; 
SELECT count ( * ) FROM x ; 
INSERT INTO x . x VALUES ( 10 , 10 , 10 , 10 , 10 ) ; 
PRAGMA x . x = x ; 
CREATE VIEW x AS SELECT x + 10 , x + 10 FROM x ; 
DELETE FROM x WHERE x = 10 AND x = 10 AND x = 10 ; 
REINDEX x ; 
CREATE INDEX x ON x ( x , x , x ) ; 
SELECT x FROM x 'y' ORDER BY x ; 
CREATE VIEW x AS SELECT x + x AS x FROM x ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
INSERT INTO x VALUES ( NULL , 10 ) ; 
UPDATE x SET x = 10 WHERE x = 'y' ; 
UPDATE x SET x = NULL WHERE x = 'y' ; 
DELETE FROM x WHERE x >= 10 ; 
INSERT INTO x SELECT NULL , x + 10 FROM x ; 
INSERT INTO x SELECT NULL , x FROM x ; 
SELECT 10 , x FROM x WHERE x = 'y' ; 
SELECT 10 , * FROM x . x ; 
SELECT * FROM x UNION ALL SELECT * FROM x ; 
INSERT INTO x SELECT x + 10 , x FROM x ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ON CONFLICT ( x ) DO UPDATE SET = x x + 10 ; 
CREATE VIEW x AS SELECT x , sum ( x ) AS m FROM x GROUP BY x ; 
CREATE INDEX x ON x ( x , x , x , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ; 
INSERT INTO x VALUES ( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ; 
SELECT * , 'y' FROM x , x WHERE x = 10 AND x = 10 ; 
SELECT * , 'y' FROM x LEFT JOIN x ON x = 10 AND x = 10 ; 
SELECT * , 'y' FROM x LEFT JOIN x ON x = 10 WHERE x = 10 ; 
SELECT * , 'y' FROM x LEFT JOIN x WHERE x = 10 AND x = 10 ; 
CREATE TABLE x ( x TEXT ) ; 
CREATE TABLE x ( x TEXT , x TEXT ) ; 
CREATE INDEX x ON x ( x , x ) WHERE x = 'y' ; 
INSERT INTO x VALUES ( 'y' , 0.1 ) ; 
SELECT ( SELECT sum ( x ) FROM x WHERE x = 'y' ) FROM x ; 
INSERT INTO x ( x ) VALUES ( 'y' ) ; 
INSERT INTO x ( x , x ) VALUES ( 'y' , 10 ) ; 
CREATE TABLE x ( x ) ; INSERT INTO x ( x ) VALUES ( 10 ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ; 
SELECT * FROM x WHERE ( x = 10 OR x = 10 ) AND x IN ( SELECT x FROM SELECT DISTINCT x FROM x WHERE x = 10 ) ; 
SELECT * , 'y' FROM x WHERE ( x = 10 OR x = 10 ) AND x = ( SELECT x FROM SELECT DISTINCT x FROM x WHERE x = 10 ) ; 
INSERT INTO x SELECT 'y' CONCAT x FROM x ; 
SELECT * FROM x WHERE x = 'y' AND x = 'y' AND x = 'y' ; 
INSERT INTO x SELECT randstr ( 10 , 10 ) , randstr ( 10 , 10 ) FROM x ; 
CREATE TABLE x ( x INT PRIMARY KEY , x TEXT ) ; 
UPDATE x SET x = 10 WHERE 10 ; 
BEGIN TRANSACTION ; 
END TRANSACTION ; 
CREATE TABLE x ( x INT , x INT , x INT ) ; 
SELECT x FROM x WHERE x = 'y' OR x = 'y' ORDER BY x ; 
SELECT * FROM x WHERE x < 10 ; 
CREATE TABLE x ( x INT UNIQUE , x , x ) ; 
SELECT md5sum ( x , x , x ) FROM x ; 
INSERT INTO x SELECT randstr ( 10 , 10 ) FROM x ; 
DELETE FROM x WHERE random () % 10 != 10 ; 
INSERT INTO x SELECT randstr ( 10 , 10 ) CONCAT x FROM x ; 
INSERT INTO x SELECT randstr ( 10 , 10 ) FROM x WHERE random () % 10 == 10 ; 
CREATE VIRTUAL TABLE x USING tcl ( vtab_command ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 10 ) ; 
INSERT INTO x VALUES ( 10 , 10 , 'y' ) ; 
SELECT * FROM x WHERE x = AND x BETWEEN AND AND x IN ( 10 , 10 , 10 , 10 ) ; 
CREATE VIRTUAL TABLE x USING tcl ( vtab_cmd t1 {a b} ) ; 
CREATE VIRTUAL TABLE x USING tcl ( vtab_cmd t2 {c d} ) ; 
CREATE VIRTUAL TABLE x USING tcl ( vtab_cmd t3 {e f} ) ; 
CREATE VIRTUAL TABLE x USING tcl ( vtab_cmd 0 ) ; 
SELECT * FROM x WHERE x LIKE 'y' ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' ) ; 
CREATE TABLE x ( x INTEGER , x TEXT ) ; 
CREATE TABLE x ( x INT , x TEXT ) ; 
CREATE TABLE x ( x INT , x INT , x TEXT ) ; 
SELECT * FROM x LEFT JOIN x ON x = x WHERE x IS NULL ; 
CREATE TABLE x ( x INT , x INT , x INT , x INT ) ; 
CREATE TABLE x ( x TEXT , x TEXT , x TEXT ) ; 
SELECT x FROM x WHERE x == 'y' ; 
INSERT INTO x ( x , x , x ) VALUES ( 'y' , 'y' , 'y' ) ; 
UPDATE x SET x = x CONCAT x ; 
SELECT x , length ( x ) , x FROM x ; 
UPDATE x SET x = zeroblob ( 10 ) ; 
UPDATE x SET x = zeroblob ( 10 ) WHERE x = 10 ; 
SELECT * FROM x UNION SELECT * FROM x ; 
UPDATE x SET x = 'y' ; 
ROLLBACK TO x ; 
UPDATE x SET x = upper ( x ) ; 
INSERT INTO x SELECT x + 10 , x + 10 , x + 10 FROM x ; 
INSERT INTO x VALUES ( 'y' , 'y' , NULL ) ; 
INSERT INTO x VALUES ( 0.1 , 0.1 , 0.1 ) ; 
INSERT INTO x VALUES ( NULL , NULL , NULL , NULL , NULL ) ; 
INSERT INTO x VALUES ( 'y' , NULL , NULL , NULL , NULL ) ; 
INSERT INTO x VALUES ( 10 , NULL ) ; 
CREATE TABLE x ( x VARCHAR(10) , x INTEGER ) ; 
CREATE TABLE x ( x VARCHAR(15) , x FLOAT ) ; 
SELECT CAST ( 'y' AS INTEGER ) ; 
INSERT INTO x VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ; 
SELECT 'y' - 10 ; 
SELECT 10 - 10 ; 
SELECT - 'y' ; 
SELECT 'y' + 10 ; 
DELETE FROM x WHERE x IS NULL OR x != 10 ; 
UPDATE x SET x = 10 WHERE x == 10 ; 
INSERT INTO x VALUES ( 10 , 0.1 , 'y' ) ; 
INSERT INTO x VALUES ( 0.1 , NULL , NULL ) ; 
INSERT INTO x VALUES ( NULL , 10 , NULL ) ; 
INSERT INTO x VALUES ( NULL , NULL , 0.1 ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 10 ) ; 
INSERT INTO x VALUES ( 'y' , 10 , 10 ) ; 
UPDATE x SET x = 10 , x = 10 ; 
INSERT OR IGNORE INTO x VALUES ( 10 , 0.1 ) ; 
INSERT INTO x VALUES ( 10 , 0.1 ) ; 
INSERT OR ROLLBACK INTO x VALUES ( 10 , 0.1 ) ; 
INSERT OR IGNORE INTO x VALUES ( 10 , 10 ) ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ; 
UPDATE x SET x = x * 10 WHERE x = 10 ; 
CREATE VIEW x ( x ) AS SELECT x FROM x ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 'y' ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER ) ; 
SELECT count ( * ) , x FROM x WHERE x = 10 AND x <= 10 GROUP BY x ORDER BY 10 ; 
SELECT count ( * ) , x FROM x WHERE x = 10 AND x = 10 GROUP BY x ORDER BY 10 ; 
SELECT count ( * ) , x FROM x WHERE x = 10 AND x BETWEEN 10 AND 10 GROUP BY x ORDER BY 10 ; 
SELECT count ( * ) , min ( x ) , max ( x ) FROM x WHERE x = 10 ; 
SELECT x FROM x WHERE x IN ( 10 , 10 ) ORDER BY x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT NOT NULL , x INTEGER ) ; 
SELECT * FROM x , x WHERE x = x AND x = 10 AND x = 10 ; 
INSERT INTO x VALUES ( NULL , NULL ) ; 
SELECT x FROM x ORDER BY 10 ; 
INSERT INTO x VALUES ( 'y' , 10 ) ; 
SELECT * FROM x ORDER BY 10 ; 
SELECT x AS c1 , x AS c2 FROM x ORDER BY x ; 
SELECT x + 10 FROM x ORDER BY 10 ; 
SELECT x CONCAT 'y' FROM x ORDER BY 10 ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 'y' ) ; 
SELECT x FROM x WHERE x = 'y' ORDER BY x ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ; 
SELECT x FROM x WHERE x > 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE x > 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE x < 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE x < 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE x >= 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE x >= 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE x <= 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE x <= 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE x BETWEEN 'y' AND 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE x BETWEEN 'y' AND 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE x IN ( 'y' , 'y' ) ORDER BY 10 , x ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x WHERE x IN ( 'y' , 'y' ) ) ; 
SELECT x FROM x WHERE NOT x > 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE NOT x > 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE NOT x < 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE NOT x < 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE NOT x = 'y' ; 
SELECT x FROM x WHERE NOT x >= 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE NOT x >= 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE NOT x <= 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE NOT x <= 'y' ORDER BY 10 , x ; 
SELECT x FROM x WHERE NOT CASE x WHEN 'y' THEN 10 ELSE 10 END ; 
SELECT x FROM x WHERE NOT x IN ( 'y' , 'y' ) ; 
SELECT x FROM x WHERE NOT x IN ( SELECT x FROM x WHERE x IN ( 'y' , 'y' ) ) ; 
SELECT x > 'y' FROM x ; 
SELECT x < 'y' FROM x ; 
SELECT x = 'y' FROM x ; 
SELECT x <= 'y' FROM x ; 
SELECT x >= 'y' FROM x ; 
SELECT x BETWEEN 'y' AND 'y' FROM x ; 
SELECT CASE x WHEN 'y' THEN 10 ELSE 10 END FROM x ; 
SELECT x IN ( 'y' , 'y' ) FROM x ; 
SELECT x IN ( SELECT x FROM x WHERE x IN ( 'y' , 'y' ) ) FROM x ; 
SELECT x FROM x , x WHERE x = x ; 
SELECT x FROM x JOIN x USING ( b ) ; 
SELECT x FROM x NATURAL JOIN x ; 
SELECT x FROM x LEFT OUTER JOIN x USING ( b ) ORDER BY x ; 
SELECT x , x FROM x LEFT OUTER JOIN x USING ( b ) ; 
SELECT count ( * ) FROM x GROUP BY x ; 
SELECT * FROM x GROUP BY x ; 
SELECT DISTINCT x FROM x ; 
SELECT x FROM x UNION SELECT x FROM x ; 
SELECT x FROM x EXCEPT SELECT x FROM x ; 
SELECT x FROM x INTERSECT SELECT x FROM x ; 
SELECT x FROM x UNION ALL SELECT x FROM x ; 
SELECT x FROM x UNION ALL SELECT x FROM x ORDER BY 10 ; 
DELETE FROM x WHERE 10 ; 
INSERT INTO x VALUES ( 'y' , NULL ) ; 
SELECT * FROM x , x WHERE x = x ; 
SELECT x FROM x WHERE x IN ( 'y' , 'y' ) ORDER BY x ; 
SELECT * FROM x NOT INDEXED NATURAL JOIN x NOT INDEXED ; 
SELECT * FROM x NATURAL JOIN x ; 
INSERT INTO x SELECT upper ( x ) FROM x ; 
SELECT min ( x ) FROM x ; 
SELECT max ( x ) FROM x ; 
SELECT max ( x , x ) FROM x ; 
SELECT max ( x , 'y' ) FROM x ; 
SELECT max ( 'y' , x ) FROM x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ) ; 
SELECT DISTINCT x , x FROM x ; 
SELECT x , x FROM x UNION SELECT x , x FROM x ; 
SELECT x FROM x EXCEPT SELECT x FROM x WHERE x != 'y' ; 
SELECT x , x FROM x EXCEPT SELECT x , x FROM x ; 
SELECT x , x FROM x EXCEPT SELECT x , x FROM x WHERE x != 'y' ; 
SELECT x FROM x INTERSECT SELECT x FROM x WHERE x != 'y' ; 
SELECT x , x FROM x INTERSECT SELECT x , x FROM x ; 
SELECT x FROM x INTERSECT SELECT x FROM x ORDER BY 10 ; 
SELECT x , count ( * ) FROM x GROUP BY x ; 
SELECT x , x , count ( * ) FROM x GROUP BY x , x ORDER BY x , x ; 
PRAGMA x = 'y' ; 
SELECT * FROM x WHERE x < 'y' ; 
SELECT x AS x FROM x WHERE x = 'y' ; 
; 
SELECT * FROM x , x , x WHERE x = x AND x = x AND x = 10 ; 
INSERT INTO x ( x ) VALUES ( 10 ) ,( 10 ) ,( 10 ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT * , 'y' FROM x , x , x WHERE x = x AND x = x AND x = 10 ; 
SELECT * , 'y' FROM x , x , x WHERE x = x AND x = x AND 10 = x ; 
INSERT INTO x VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ; 
CREATE TABLE x ( x NOT NULL , x INTEGER PRIMARY KEY , x ) ; 
SELECT x , x , x , x FROM x , x ; 
SELECT x , x , x , x , * FROM x , x , x ; 
SELECT x , x FROM x , x ; 
SELECT * FROM x , x , x ; 
SELECT x , * FROM x ORDER BY 10 ; 
CREATE TABLE x AS SELECT x FROM SELECT x AS Bbb FROM x ; 
SELECT x FROM x 'y' ; 
SELECT ( SELECT avg ( x ) UNION SELECT min ( x ) OVER( ) ) FROM x ; 
CREATE TABLE x AS SELECT x FROM x ; 
PRAGMA x ( x ) ; 
CREATE TABLE x AS SELECT x FROM x GROUP BY 10 ; 
INSERT OR IGNORE INTO x VALUES ( 10 , 10 , 10 ) ; 
INSERT OR REPLACE INTO x VALUES ( 10 , 10 , 10 ) ; 
REPLACE INTO x VALUES ( 10 , 10 , 10 ) ; 
INSERT OR FAIL INTO x VALUES ( 10 , 10 , 10 ) ; 
INSERT OR ABORT INTO x VALUES ( 10 , 10 , 10 ) ; 
INSERT OR ROLLBACK INTO x VALUES ( 10 , 10 , 10 ) ; 
INSERT OR IGNORE INTO x VALUES ( 10 , 10 , NULL ) ; 
INSERT OR REPLACE INTO x VALUES ( 10 , 10 , NULL ) ; 
INSERT OR FAIL INTO x VALUES ( 10 , 10 , NULL ) ; 
INSERT OR ABORT INTO x VALUES ( 10 , 10 , NULL ) ; 
INSERT OR ROLLBACK INTO x VALUES ( 10 , 10 , NULL ) ; 
CREATE TABLE x ( x UNIQUE , x ) ; 
SELECT count ( * ) , min ( x ) , max ( x ) FROM x ; 
INSERT OR REPLACE INTO x VALUES ( 10 , 10 ) ; 
INSERT OR IGNORE INTO x SELECT * FROM x ; 
INSERT OR IGNORE INTO x SELECT x + 10 , x + 10 FROM x ; 
CREATE TABLE x ( x INTEGER UNIQUE ON CONFLICT IGNORE , x INTEGER UNIQUE ON CONFLICT FAIL , x INTEGER UNIQUE ON CONFLICT REPLACE , x INTEGER UNIQUE ON CONFLICT ABORT , x INTEGER UNIQUE ON CONFLICT ROLLBACK ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 ) ; 
INSERT OR ROLLBACK INTO x VALUES ( 10 , 10 ) ; 
INSERT OR ROLLBACK INTO x VALUES ( 10 ) ; 
INSERT INTO x SELECT 10 , 10 , 10 FROM x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ; 
CREATE TABLE x ( x CHECK( x != 10 ) ) ; 
REPLACE INTO x VALUES ( 10 ) ; 
CREATE TABLE x ( x TEXT PRIMARY KEY NOT NULL , x TEXT NOT NULL , x INTEGER ) ; 
CREATE UNIQUE INDEX x ON x ( x , x ) ; 
REPLACE INTO x ( x , x , x ) VALUES ( 'y' , 'y' , 10 ) ; 
SELECT x , x FROM x INDEXED BY x ; 
SELECT x , x , x FROM x NOT INDEXED ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ON CONFLICT REPLACE , x UNIQUE ON CONFLICT IGNORE , x UNIQUE ON CONFLICT FAIL ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
SELECT x , x , x FROM x ORDER BY x ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ; 
CREATE TABLE x ( x INT PRIMARY KEY ON CONFLICT REPLACE , x UNIQUE ON CONFLICT IGNORE , x UNIQUE ON CONFLICT FAIL ) ; 
CREATE TABLE x ( x UNIQUE ON CONFLICT IGNORE , x INT PRIMARY KEY ON CONFLICT REPLACE , x UNIQUE ON CONFLICT FAIL ) ; 
CREATE TABLE x ( x UNIQUE ON CONFLICT FAIL , x INT PRIMARY KEY ON CONFLICT REPLACE , x UNIQUE ON CONFLICT IGNORE ) ; 
CREATE TABLE x ( x UNIQUE ON CONFLICT REPLACE , x INTEGER PRIMARY KEY ON CONFLICT IGNORE , x UNIQUE ON CONFLICT FAIL ) ; 
CREATE TABLE x ( x UNIQUE ON CONFLICT REPLACE , x INT PRIMARY KEY ON CONFLICT IGNORE , x UNIQUE ON CONFLICT FAIL ) ; 
CREATE TABLE x ( x UNIQUE ON CONFLICT REPLACE , x UNIQUE ON CONFLICT IGNORE , x INTEGER PRIMARY KEY ON CONFLICT FAIL ) ; 
REPLACE INTO x VALUES ( NULL , 'y' ) ,( 10 , 'y' ) ; 
CREATE TABLE x ( x UNIQUE , x UNIQUE ) ; 
UPDATE x SET x = 'y' , x = 'y' CONCAT substr ( x , 10 , 10 ) WHERE x = 'y' ; 
BEGIN EXCLUSIVE ; 
UPDATE x SET x = NULL , x = NULL WHERE x = 'y' ; 
INSERT INTO x ( x ) SELECT x + 10 FROM x ; 
INSERT INTO x SELECT x , x * x FROM x ; 
INSERT INTO x SELECT randomblob ( 10 ) FROM x ; 
INSERT OR IGNORE INTO x SELECT x * 10 , x FROM x ; 
CREATE TABLE x AS SELECT x , 10 AS y FROM x WHERE x % 10 != 10 ORDER BY x ; 
INSERT INTO x SELECT str ( x + 10 ) FROM x ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 10 , 'y' , 'y' , 'y' ) ; 
SELECT x FROM x WHERE x > 'y' ; 
DELETE FROM x WHERE x IN ( 10 , 10 ) ; 
SELECT sum ( x + length ( x ) ) FROM x WHERE x IN ( 10 , 10 , 10 ) AND x IS NULL ; 
CREATE TABLE x ( x , x , x , x INTEGER PRIMARY KEY ) ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ; 
SELECT * FROM x WHERE x <= 'y' ORDER BY x DESC ; 
DELETE FROM x WHERE x IN ( SELECT x FROM x ) ; 
SELECT CAST ( ( SELECT x FROM x WHERE 10 = x ) AS INT ) FROM x WHERE 10 = x ; 
CREATE VIEW x AS SELECT 10 , 10 ; 
CREATE TRIGGER x AFTER INSERT ON x BEGIN SELECT 10 ; END ; 
SELECT x , x , x , 'y' FROM x ; 
UPDATE x SET x = 'y' , x = 'y' WHERE x = 'y' ; 
UPDATE x SET x = 'y' , x = 'y' , x = 'y' WHERE x = 'y' ; 
SELECT * FROM x , x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x NOT NULL ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x , x , x , x , x ) ; 
SELECT * FROM x WHERE likelihood ( x = , 0.1 ) AND x BETWEEN AND ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
CREATE INDEX x ON x ( x , x , x , x , x , x , x , x , x , x ) ; 
SELECT x FROM SELECT count ( * ) AS a FROM x WHERE x == 10 ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 'y' ) ; 
CREATE VIEW x ( x , x ) AS SELECT x , 10 FROM x UNION ALL SELECT x , 10 FROM x ; 
SELECT count ( * ) FROM x WHERE x != 10 ; 
CREATE INDEX x ON x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
SELECT * FROM x ORDER BY x , x ; 
UPDATE x SET x = randstr ( 10 , 10 ) ; 
INSERT INTO x . x SELECT * FROM x . x ; 
UPDATE x . x SET x = randstr ( 10 , 10 ) WHERE x >= 10 ; 
UPDATE x SET x = randstr ( 10 , 10 ) WHERE x >= 10 ; 
UPDATE x . x SET x = 'y' WHERE x = 10 ; 
SELECT x FROM x . x WHERE x = 10 ; 
UPDATE x SET x = randomblob ( 10 ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
SELECT * , 'y' FROM x ; 
SELECT sqlite_compileoption_used ( 'y' ) ; 
SELECT sqlite_compileoption_used ( x ) ; 
SELECT sqlite_compileoption_used () ; 
SELECT sqlite_compileoption_used ( NULL ) ; 
SELECT sqlite_compileoption_used ( 'y' , 10 ) ; 
SELECT sqlite_compileoption_used ( 10 ) ; 
SELECT sqlite_compileoption_used ( 0.1 ) ; 
SELECT sqlite_compileoption_get () ; 
SELECT sqlite_compileoption_get ( 10 , 10 ) ; 
SELECT sqlite_compileoption_used ( sqlite_compileoption_get ( 10 ) ) ; 
SELECT sqlite_compileoption_get ( 10 ) ; 
INSERT INTO x VALUES ( 0.1 ) ; 
INSERT INTO x ( x , x ) VALUES ( 'y' , 'y' ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 'y' ) ,( 10 , 'y' ) ; 
INSERT INTO x ( x ) VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ; 
CREATE INDEX x ON x ( x ) WHERE datetime ( x , x ) IS NOT NULL ; 
INSERT INTO x ( x ) VALUES ( 0.1 ) ; 
INSERT INTO x ( x , x ) VALUES ( 0.1 , 'y' ) ; 
INSERT INTO x ( x , x ) VALUES ( 'y' , 0.1 ) ; 
CREATE TABLE x ( x , x AS( x + julianday ( 'y' ) ) ) ; 
SELECT x , quote ( substr ( x , 10 , 10 ) ) FROM x 'y' ORDER BY x ; 
SELECT x , quote ( substr ( x , 10 , 10 ) ) FROM x WHERE x = 10 ; 
SELECT x , quote ( substr ( x , 10 , 10 ) ) FROM x 'y' ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 'y' , 10 ) ,( 10 , 'y' , 10 ) ; 
INSERT INTO x ( x ) SELECT x FROM x WHERE x = 10 ; 
UPDATE x SET x = ( SELECT x FROM x ) WHERE x = 10 ; 
DELETE FROM x WHERE x < 10 ; 
CREATE TABLE x ( x INT UNIQUE , x INT ) ; 
SELECT * FROM x WHERE x = 'y' AND x = 'y' ; 
DELETE FROM x WHERE x = 'y' AND x = 'y' ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INT ) ; 
DELETE FROM x WHERE x = 'y' OR x = 'y' ; 
DELETE FROM x WHERE x = 10 OR x > 10 ; 
INSERT INTO x ( x , x , x ) SELECT x + 10 , 10 , x FROM x ; 
INSERT INTO x ( x , x , x ) SELECT x + 10 , 10 , x FROM x WHERE x = 10 ; 
DELETE FROM x WHERE EXISTS ( SELECT 10 FROM x AS v WHERE x = x + 10 ) ; 
DELETE FROM x WHERE x = 10 OR x = 10 ; 
UPDATE x SET x = ( SELECT x FROM x WHERE x = 'y' ) WHERE x = 'y' ; 
DELETE FROM x WHERE x IN ( 10 , 10 , 10 ) ; 
INSERT INTO x SELECT x + 10 , x + 10 FROM x ; 
SELECT x FROM x WHERE x > 10 AND x < 10 ; 
SELECT x FROM x WHERE x >= 10 AND x < 10 ; 
SELECT x FROM x WHERE x > 10 AND x <= 10 ; 
SELECT x FROM x WHERE x >= 10 AND x <= 10 ; 
INSERT INTO x VALUES ( 10 , NULL , NULL , 0.1 ) ; 
SELECT x FROM x WHERE x >= 10 ORDER BY x ; 
SELECT x FROM x WHERE x > 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x > 'y' ; 
SELECT x FROM x WHERE x = 10 AND x >= 'y' ; 
SELECT x FROM x WHERE x = 10 AND x < 'y' ; 
SELECT x FROM x WHERE x = 10 AND x <= 'y' ; 
SELECT x CONCAT x CONCAT x CONCAT x FROM x ORDER BY x , x , x , x ; 
SELECT x CONCAT x CONCAT x CONCAT x FROM x ORDER BY x DESC , x ASC , x DESC , x ASC ; 
SELECT x CONCAT x CONCAT x CONCAT x FROM x ORDER BY x ASC , x DESC , x ASC , x DESC ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , NULL , NULL , NULL , NULL ) ; 
INSERT INTO x VALUES ( 10 , 0.1 , 0.1 , 0.1 , 0.1 ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 'y' , 'y' ) ; 
SELECT x FROM x ORDER BY x DESC ; 
SELECT x FROM x WHERE x > 10 ; 
SELECT x FROM x WHERE x IN ( 10 , 10 ) AND x > 10 AND x < 'y' ; 
CREATE TABLE x AS SELECT x AS a , x AS b FROM x ; 
CREATE TABLE x ( x PRIMARY KEY NOT NULL , x NOT NULL ) ; 
CREATE TABLE x ( x , x NOT NULL , x NOT NULL , x NOT NULL ) ; 
SELECT ( SELECT DISTINCT x FROM x AS i ) FROM x AS o ORDER BY x ; 
SELECT quote ( x ) FROM x ORDER BY 10 ; 
INSERT INTO x ( x ) VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT DISTINCT x FROM x ORDER BY x ASC ; 
SELECT DISTINCT x FROM x ORDER BY x DESC ; 
SELECT DISTINCT x FROM x ORDER BY x ; 
SELECT ( SELECT 'y' UNION SELECT DISTINCT max ( x ) ORDER BY 10 ) FROM x ; 
SELECT * , 'y' FROM x ORDER BY x , x ; 
CREATE TABLE x ( x TEXT UNIQUE NOT NULL ) ; 
SELECT * , 'y' FROM x ORDER BY 10 , 10 , 10 , 10 , 10 ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
SELECT DISTINCT x , x , x FROM x WHERE x = 10 AND x = 10 ; 
SELECT DISTINCT x , x , x , x FROM x WHERE x = 10 AND x = 10 ; 
SELECT DISTINCT x , x , x , x , x FROM x WHERE x = 10 AND x = 10 ; 
SELECT DISTINCT x , x , x , x , x , x FROM x WHERE x = 10 AND x = 10 ; 
CREATE TABLE x ( x INT , x INT ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT DISTINCT x , x FROM x , x ; 
SELECT DISTINCT x , x + 10 FROM x ; 
SELECT DISTINCT x , x , x FROM x ; 
SELECT DISTINCT x , x , x FROM x WHERE x = 10 ; 
INSERT INTO x VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ; 
SELECT DISTINCT x FROM x , x WHERE x = x AND x != 10 ; 
SELECT DISTINCT x FROM x , x WHERE x = x AND x != 10 ORDER BY x DESC ; 
SELECT DISTINCT x FROM x , x WHERE x = x ; 
INSERT INTO x ( x ) VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT DISTINCT x , x , x FROM x CROSS JOIN x ORDER BY x ; 
INSERT INTO x ( x ) VALUES ( NULL ) ,( NULL ) ,( NULL ) ,( NULL ) ,( NULL ) ,( NULL ) ,( NULL ) ,( NULL ) ,( NULL ) ,( NULL ) ,( NULL ) ; 
SELECT group_concat ( DISTINCT x , x ) FROM x ; 
SELECT * FROM x WHERE x IN ( 10 , 10 ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 'y' , 'y' , 'y' , 'y' ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x UNIQUE ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT , x INTEGER ) ; 
INSERT INTO x VALUES ( 10 , 'y' , NULL ) ; 
CREATE TABLE x ( x TEXT , x INTEGER PRIMARY KEY ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT , x TEXT ) ; 
INSERT INTO x VALUES ( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 10 , 10 ) ; 
INSERT INTO x VALUES ( 'y' , 'y' ) ,( 'y' , 'y' ) ,( 'y' , 'y' ) ; 
DELETE FROM x WHERE x IN ( 'y' , 'y' ) ; 
SELECT my_changes ( 'y' ) ; 
INSERT INTO x VALUES ( 'y' ) ,( 'y' ) ; 
UPDATE x SET x = my_changes ( 'y' ) ; 
UPDATE x SET x = changes () ; 
SELECT 'y' ; 
UPDATE x SET x = x + 10 WHERE x % 10 ; 
CREATE TABLE x ( x FLOAT , x INTEGER ) ; 
INSERT INTO x VALUES ( 'y' , 10 , 'y' ) ; 
SELECT quote ( x ) , quote ( x ) , quote ( x ) FROM x ORDER BY x DESC LIMIT 10 ; 
SELECT quote ( x ) , quote ( x ) FROM x ORDER BY x DESC LIMIT 10 ; 
SELECT quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) FROM x ORDER BY x DESC LIMIT 10 ; 
SELECT quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) FROM x ; 
SELECT quote ( x ) , quote ( x ) FROM x ; 
SELECT quote ( x ) , quote ( x ) , quote ( x ) FROM x ; 
SELECT x , x , x FROM x ORDER BY x DESC LIMIT 10 ; 
INSERT INTO x VALUES ( 'y' , 'y' , 'y' , 'y' ) ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
INSERT INTO x VALUES ( 0.1 , 'y' ) ; 
CREATE TABLE x ( x , x INTEGER PRIMARY KEY , x ) ; 
INSERT INTO x VALUES ( 10 , NULL , 10 ) ; 
UPDATE x SET x = NULL WHERE x = 10 ; 
CREATE TABLE x ( x , x INT PRIMARY KEY NOT NULL , x ) ; 
INSERT INTO x VALUES ( 0.1 , 0.1 ) ; 
CREATE TABLE x ( x TEXT , x INTEGER CHECK( x > 10 ) ) ; 
CREATE TABLE x ( x CHECK( x CONCAT x ) , x ) ; 
CREATE TABLE x ( x PRIMARY KEY ON CONFLICT ABORT , x ) ; 
CREATE TABLE x ( x PRIMARY KEY ON CONFLICT ROLLBACK , x ) ; 
CREATE TABLE x ( x PRIMARY KEY ON CONFLICT IGNORE , x ) ; 
CREATE TABLE x ( x PRIMARY KEY ON CONFLICT FAIL , x ) ; 
CREATE TABLE x ( x PRIMARY KEY ON CONFLICT REPLACE , x ) ; 
CREATE TABLE x ( x , x NOT NULL ON CONFLICT ABORT ) ; 
CREATE TABLE x ( x , x NOT NULL ON CONFLICT ROLLBACK ) ; 
CREATE TABLE x ( x , x NOT NULL ON CONFLICT IGNORE ) ; 
CREATE TABLE x ( x , x NOT NULL ON CONFLICT FAIL ) ; 
CREATE TABLE x ( x , x NOT NULL ON CONFLICT REPLACE ) ; 
CREATE TABLE x ( x , x NOT NULL ) ; 
INSERT INTO x SELECT ( ( x % 10 ) * x + 10 ) , 'y' FROM x ; 
CREATE TABLE x ( x , x INTEGER PRIMARY KEY ) ; 
CREATE TABLE x . x ( x , x ) ; INSERT INTO x . x VALUES ( 10 , 10 ) ; 
DELETE FROM x . x WHERE x > 10 ; 
SELECT count ( * ) FROM x . x UNION ALL SELECT count ( * ) FROM x . x ; 
SELECT count ( * ) FROM x . x ; 
CREATE VIEW x AS SELECT * FROM x AS x , x AS y ; 
SELECT CASE 10 WHEN 10 THEN 'y' WHEN 10 THEN 'y' ELSE 'y' END ; 
INSERT INTO x VALUES ( 'y' , 'y' , 10 , 0.1 ) ; 
SELECT CASE NULL WHEN 'y' THEN 'y' WHEN 'y' THEN 'y' ELSE 'y' END ; 
INSERT INTO x VALUES ( 10 , 10 , 'y' , 10 , 'y' , 'y' ) ; 
SELECT typeof ( x ) , x , typeof ( x ) , x , typeof ( x ) , x FROM x ; 
SELECT CASE WHEN NULL THEN 'y' ELSE 'y' END ; 
SELECT CASE WHEN 0.1 THEN 'y' ELSE 'y' END ; 
SELECT CASE WHEN 10 THEN 'y' ELSE 'y' END ; 
SELECT CASE WHEN 'y' THEN 'y' ELSE 'y' END ; 
CREATE TABLE x ( x , x , x , x , x ) ; 
INSERT INTO x SELECT * FROM x WHERE x = 'y' ; 
INSERT INTO x SELECT x FROM x ; 
INSERT INTO x . x SELECT x FROM x . x ; 
INSERT INTO x VALUES ( NULL , 0.1 ) ; 
INSERT INTO x VALUES ( 10 , NULL , 0.1 ) ; 
INSERT INTO x VALUES ( 'y' , 10 , 'y' , 'y' ) ; 
INSERT INTO x VALUES ( 'y' , 0.1 , 0.1 , NULL ) ; 
INSERT INTO x VALUES ( 'y' , 10 , 'y' , 0.1 ) ; 
INSERT INTO x VALUES ( 'y' , NULL , 0.1 , NULL ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 0.1 ) ; 
INSERT INTO x VALUES ( 10 , 10 , 0.1 , NULL ) ; 
INSERT INTO x VALUES ( 10 , NULL , 'y' , 'y' ) ; 
INSERT INTO x VALUES ( 10 , NULL , 0.1 , NULL ) ; 
INSERT INTO x VALUES ( 10 , 0.1 , 0.1 ) ; 
INSERT INTO x VALUES ( 0.1 , 0.1 , 'y' ) ; 
INSERT INTO x VALUES ( NULL , 10 , 'y' ) ; 
INSERT INTO x VALUES ( 0.1 , 10 ) ; 
CREATE TABLE x ( x PRIMARY KEY , x TEXT ) ; 
CREATE TABLE x ( x TEXT , x INTEGER , x ) ; 
INSERT INTO x VALUES ( 10 , 0.1 , NULL ) ; 
INSERT INTO x VALUES ( 'y' , 10 , 0.1 ) ; 
INSERT INTO x VALUES ( 'y' , 10 , NULL ) ; 
CREATE TABLE x ( x , x TEXT ) ; 
INSERT INTO x SELECT * FROM x WHERE x < 10 ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ; 
INSERT OR REPLACE INTO x VALUES ( 'y' , 'y' ) ; 
CREATE TABLE x ( x , x UNIQUE ) ; 
INSERT INTO x . x VALUES ( 10 , 'y' ) ; 
DELETE FROM x . x ; 
INSERT INTO x . x VALUES ( NULL , 'y' ) ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ; 
SELECT 'y' , x FROM x . x WHERE x = 'y' ; 
SELECT 'y' , x FROM x WHERE x = 'y' ; 
CREATE TABLE x ( x PRIMARY KEY , x UNIQUE ) ; 
INSERT INTO x SELECT x + 10 , randomblob ( 10 ) FROM x ; 
DELETE FROM x WHERE x % 10 ; 
INSERT INTO x SELECT x , x FROM x WHERE x % 10 ; 
UPDATE x SET x = randomblob ( 10 ) WHERE ( x % 10 ) == 10 ; 
VACUUM INTO 'file_name' ; 
SELECT x , x FROM x . x ; 
UPDATE x SET x = x , x = random () ; 
SELECT count ( * ) FROM x , x , x , x , x , x , x ; 
SELECT count ( * ) FROM x , x LEFT JOIN x ; 
SELECT count ( * ) FROM x , x LEFT JOIN x , x ; 
SELECT * FROM x WHERE x IN ( 'y' , 'y' ) ; 
SELECT 10 FROM x . x LIMIT 10 ; 
CREATE TABLE x ( x INT , x INT , x CHAR(100) ) ; 
SELECT count ( * ) , max ( x ) FROM x ; 
INSERT INTO x SELECT x , x + 10 FROM x WHERE x < 10 ; 
SELECT x , test_eval ( 'y' CONCAT x ) , x FROM x ; 
UPDATE x SET x = 10 , x = 10 , x = 10 ; 
CREATE TABLE x ( x UNIQUE , x UNIQUE , x UNIQUE ) ; 
INSERT INTO x ( x , x ) SELECT randstr ( 10 , 10 ) , 10 FROM x ; 
UPDATE x SET x = x , x = 10 ; 
INSERT INTO x ( x ) SELECT randstr ( 10 , 10 ) FROM x ; 
SELECT 10 ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( NULL ) ,( 0.1 ) ,( 'y' ) ,( 'y' ) ; 
INSERT INTO x SELECT randomblob ( 10 ) , randomblob ( 10 ) FROM x ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) FROM x ; 
CREATE VIEW x AS SELECT sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) , sum ( x ) FILTER( WHEN x > 10 ) FROM x ; 
SELECT x , max ( x ) FILTER( WHEN x = 'y' ) FROM x ; 
SELECT x , x , max ( x ) FILTER( WHEN x = 'y' ) FROM x GROUP BY x ; 
SELECT avg ( x ) FILTER( WHEN x != 10 ) AS h FROM x GROUP BY x ORDER BY x ; 
SELECT avg ( x ) FILTER( WHEN x != 10 ) AS h FROM x GROUP BY x ORDER BY ( x + 0.1 ) ; 
SELECT x , avg ( x ) FILTER( WHEN x != 10 ) AS h FROM x GROUP BY x ORDER BY avg ( x ) ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , NULL ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , NULL ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , NULL ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT x / 10 , sum ( x ) FILTER( WHEN x % 10 = 10 ) , sum ( x ) FILTER( WHEN x % 10 = 10 ) , sum ( x ) FILTER( WHEN x % 10 = 10 ) , sum ( x ) FILTER( WHEN x % 10 = 10 ) , sum ( x ) FILTER( WHEN x % 10 = 10 ) FROM x GROUP BY ( x / 10 ) ORDER BY 10 ; 
CREATE TABLE x ( x TEXT PRIMARY KEY , x TEXT ) ; 
SELECT 10 , x FROM x ; 
INSERT INTO x VALUES ( 10 , NULL ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
INSERT OR REPLACE INTO x ( x , x , x ) VALUES ( 10 , NULL , 'y' ) ; 
INSERT OR REPLACE INTO x ( x , x , x ) VALUES ( 10 , 10 , 'y' ) ; 
CREATE UNIQUE INDEX x ON x ( x ) WHERE x < 10 ; 
SELECT x , typeof ( x ) FROM x ; 
CREATE TABLE x ( x INT UNIQUE ) ; 
CREATE TABLE x ( x TEXT PRIMARY KEY ) ; 
CREATE VIEW x AS SELECT x AS y FROM x ; 
INSERT INTO x VALUES ( 10 , 10 , 'y' , 'y' , 'y' ) ; 
CREATE TABLE x ( x , x PRIMARY KEY ) ; 
REPLACE INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ; 
CREATE TABLE x . x ( x PRIMARY KEY ) ; 
UPDATE x SET x = x + 10 , x = x + 10 ; 
CREATE TABLE x ( x , x PRIMARY KEY , x ) ; 
INSERT INTO x VALUES ( 10 , NULL , NULL ) ; 
INSERT INTO x VALUES ( NULL , 10 , 10 , 10 ) ; 
INSERT INTO x VALUES ( NULL , 'y' , 10 , 'y' ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 10 , 'y' ) ; 
UPDATE x SET x = 10 , x = 'y' WHERE x = 10 ; 
INSERT INTO x VALUES ( 'y' , 10 , 'y' , NULL ) ; 
INSERT INTO x VALUES ( 'y' , 10 , 'y' , 10 ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 10 , NULL ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 10 , 10 ) ; 
INSERT INTO x VALUES ( NULL , 'y' ) ; 
INSERT OR FAIL INTO x VALUES ( 10 ) ,( 10 ) ; 
INSERT OR REPLACE INTO x VALUES ( 10 , 'y' ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 'y' , NULL ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x , x ) ; 
SELECT sum ( x ) , count ( x ) , round ( avg ( x ) , 10 ) , min ( x ) , max ( x ) , count ( * ) FROM x ; 
SELECT max ( 'y' CONCAT x CONCAT 'y' ) FROM x ; 
SELECT min ( 'y' CONCAT x CONCAT 'y' ) FROM x ; 
SELECT typeof ( random () ) ; 
SELECT randomblob ( 10 ) IS NOT NULL ; 
SELECT typeof ( randomblob ( 10 ) ) ; 
SELECT testfunc ( NULL , NULL ) ; 
SELECT testfunc ( 'y' , 'y' , 'y' , 10 ) ; 
SELECT testfunc ( 'y' , 'y' , 'y' , NULL ) ; 
SELECT testfunc ( 'y' , 'y' , 'y' , 0.1 ) ; 
SELECT testfunc ( 'y' , 'y' , 'y' , 10 , 'y' , 'y' , 'y' , NULL , 'y' , 'y' , 'y' , 0.1 , 'y' , 'y' , 'y' , 10 , 'y' , 'y' , 'y' , NULL , 'y' , 'y' , 'y' , 0.1 ) ; 
SELECT sqlite_version ( * ) ; 
SELECT test_destructor ( 'y' ) , test_destructor_count () ; 
SELECT test_destructor_count () ; 
SELECT min ( test_destructor ( x ) ) , max ( test_destructor ( x ) ) FROM x ; 
SELECT test_auxdata ( 'y' ) ; 
SELECT test_auxdata ( 'y' ) FROM x ; 
SELECT test_auxdata ( 'y' , 10 ) FROM x ; 
SELECT test_auxdata ( 'y' , x ) FROM x ; 
SELECT test_auxdata ( 'y' CONCAT 'y' , x ) FROM x ; 
SELECT testfunc1 ( 10 , 10 , 10 ) ; 
SELECT sum ( x ) , total ( x ) FROM x ; 
SELECT sum ( x ) FROM SELECT 10 AS x UNION ALL SELECT 10 AS x ; 
SELECT abs ( 10 ) ; 
SELECT 'y' MATCH 'y' ; 
SELECT typeof ( group_concat ( x , 'y' ) ) FROM SELECT 'y' AS x UNION ALL SELECT 'y' ; 
SELECT nullx_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789 ( 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
SELECT nullx_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789 ( 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
SELECT nullx_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_12345678a ( 10 ) ; 
SELECT nullx_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789_123456789a ( 10 ) ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x ) ; 
SELECT typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) FROM x ; 
SELECT length ( x ) , length ( x ) , length ( x ) , length ( x ) FROM x ; 
SELECT quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) FROM x ; 
SELECT test_frombind ( 10 , 10 , , 10 ) ; 
SELECT test_frombind ( 10 , ( ) , 10 , + 10 ) ; 
CREATE VIEW x ( x ) AS SELECT testdirectonly ( 10 ) ; 
SELECT * FROM SELECT testdirectonly ( 10 ) AS v33 ; 
SELECT likelihood ( 10 , 0.1 ) ; 
SELECT likelihood ( 0.1 , 0.1 ) ; 
SELECT likelihood ( NULL , 0.1 ) ; 
SELECT likelihood ( 'y' , 0.1 ) ; 
SELECT likelihood ( 10 , 0.1 ) , likelihood ( 10 , 0.1 ) ; 
SELECT likelihood ( 10 , 0.1 + 0.1 ) ; 
SELECT unlikely ( 10 ) ; 
SELECT unlikely ( 0.1 ) ; 
SELECT unlikely ( NULL ) ; 
SELECT unlikely ( 'y' ) ; 
SELECT likely ( CAST ( 10 AS INT ) ) == 'y' ; 
SELECT unlikely ( CAST ( 10 AS INT ) ) == 'y' ; 
SELECT likelihood ( CAST ( 10 AS INT ) , 0.1 ) == 'y' ; 
SELECT likely ( 10 ) ; 
SELECT likely ( 0.1 ) ; 
SELECT likely ( NULL ) ; 
SELECT likely ( 'y' ) ; 
SELECT tointeger ( NULL ) ; 
SELECT tointeger ( 'y' ) ; 
SELECT tointeger ( 10 ) ; 
SELECT tointeger ( 10 - 10 ) ; 
SELECT tointeger ( 10 + 10 ) ; 
SELECT toreal ( NULL ) ; 
SELECT toreal ( 'y' ) ; 
SELECT toreal ( 10 ) ; 
SELECT toreal ( 10 - 10 ) ; 
SELECT toreal ( 10 + 10 ) ; 
SELECT toreal ( tointeger ( 10 ) - 10 ) ; 
SELECT toreal ( tointeger ( 10 ) ) ; 
SELECT toreal ( tointeger ( 10 ) + 10 ) ; 
CREATE TABLE x ( x INTEGER CHECK( tointeger ( x ) IS NOT NULL ) ) ; 
INSERT INTO x ( x ) VALUES ( NULL ) ; 
SELECT tointeger ( toreal ( 'y' ) ) ; 
SELECT tointeger ( toreal ( 10 ) ) ; 
SELECT tointeger ( toreal ( 10 - 10 ) ) ; 
SELECT tointeger ( toreal ( 10 + 10 ) ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 10 ) ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
CREATE TABLE x ( x AS( TYPEOF ( x ) ) , x ) ; 
CREATE TABLE x ( x AS( typeof ( x ) ) , x ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 'y' , 0.1 ) ,( 10 , 'y' , NULL ) ; 
SELECT x , x , x , 'y' FROM x ORDER BY x ; 
SELECT x FROM x WHERE x LIKE 'y' OR x = 'y' ORDER BY x ; 
CREATE INDEX x ON x ( x ) WHERE x BETWEEN 10 AND 10 ; 
SELECT x FROM x WHERE x = 'y' AND x BETWEEN 10 AND 10 ; 
UPDATE x SET x = x + 10 WHERE x < 10 ; 
SELECT x , x , 'y' FROM x ORDER BY x ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' ) ,( 10 , 10 , 10 ) ; 
UPDATE x SET x = x , x = x ; 
UPDATE x SET x = x , x = x + 10 ; 
REPLACE INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
CREATE TABLE x ( x NOT NULL AS( x ) , x ) ; 
REPLACE INTO x ( x ) VALUES ( NULL ) ; 
CREATE TABLE x ( x GENERATED ALWAYS AS( 10 ) , x UNIQUE , x UNIQUE ) ; 
SELECT quote ( 10 = x OR x BETWEEN x AND 10 ) FROM x ; 
SELECT 10 FROM x WHERE 10 = x OR x BETWEEN x AND 10 ; 
CREATE TABLE x ( x , x AS( x + x ) , x AS( x ) CHECK( x ) ) ; 
UPDATE x SET x = NULL ; 
INSERT INTO x VALUES ( 'y' , 'y' ) ,( 'y' , 'y' ) ; 
SELECT typeof ( x ) , x , typeof ( x ) , x , 'y' FROM x ORDER BY x ; 
UPDATE x SET x = 'y' WHERE x = 10 OR x = 10 ; 
UPDATE x SET x = x CONCAT 'y' WHERE x = x ; 
DELETE FROM x WHERE x = x ; 
INSERT INTO x . x SELECT * FROM x ; 
DELETE FROM x WHERE x > 10 ; 
SELECT * FROM x INTERSECT SELECT * FROM x ; 
SELECT * FROM x EXCEPT SELECT * FROM x ; 
REPLACE INTO x VALUES ( 10 , 'y' ) ; 
SELECT ieee754 ( 10 , 10 ) IS NULL ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x , x NOT NULL ) ; 
SELECT x FROM x WHERE x IS NOT NULL ; 
SELECT x , x , x , x FROM x EXCEPT SELECT x , x , x , x FROM x ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 10 , 'y' , 10 , 10 , NULL ) ; 
UPDATE x SET x = 10 WHERE x IN ( 10 , 10 , 10 ) ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x ) ; 
SELECT x FROM x WHERE x IN ( 10 ) ; 
SELECT * FROM x WHERE x IN ( 10 ) ; 
SELECT * FROM x WHERE x IN ( 'y' ) ; 
SELECT * FROM x WHERE x IN ( SELECT x , x FROM x UNION ALL SELECT x , x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x , x FROM x UNION SELECT x , x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x , x FROM x EXCEPT SELECT x , x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x , x FROM x INTERSECT SELECT x , x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x , x FROM x UNION ALL SELECT x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x , x FROM x UNION SELECT x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x , x FROM x EXCEPT SELECT x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x , x FROM x INTERSECT SELECT x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x FROM x UNION ALL SELECT x , x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x FROM x UNION SELECT x , x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x FROM x EXCEPT SELECT x , x FROM x ) ; 
SELECT * FROM x WHERE x IN ( SELECT x FROM x INTERSECT SELECT x , x FROM x ) ; 
INSERT INTO x VALUES ( NULL , 10 , 10 ) ; 
SELECT x IN ( SELECT x FROM x AS inside WHERE x BETWEEN x + 10 AND x + 10 ) FROM x AS outside ORDER BY x ; 
SELECT * FROM x WHERE x IN ( SELECT x FROM x ) ; 
SELECT 10 WHERE ( SELECT 10 , 10 ) OR ( 10 IN ( 10 , 10 ) ) ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT x FROM x AS a JOIN x AS b ON x = x WHERE x IN ( 10 , 10 , 10 ) ; 
SELECT x , x IN ( 10 , 10 , 10 ) FROM x ORDER BY x ; 
SELECT CASE WHEN x NOT IN ( 10 , 10 , 10 ) THEN 'y' ELSE 'y' END FROM x ; 
SELECT CASE WHEN x NOT IN ( NULL , 10 , 10 ) THEN 'y' ELSE 'y' END FROM x ; 
SELECT CASE WHEN x NOT IN ( 10 , 10 , 10 ) OR x = 10 THEN 'y' ELSE 'y' END FROM x ; 
SELECT CASE WHEN x NOT IN ( NULL , 10 , 10 ) OR x = 10 THEN 'y' ELSE 'y' END FROM x ; 
SELECT x FROM x WHERE x NOT IN ( 10 , NULL , 10 ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT , x INT ) ; 
INSERT INTO x VALUES ( 10 , 'y' ) ,( 10 , 'y' ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 10 ) ,( 10 , 'y' , 10 ) ,( 10 , 'y' , 10 ) ; 
INSERT INTO x ( x ) VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT * FROM x WHERE x IN ( SELECT x FROM x WHERE ( x % 10 ) == 10 ) ORDER BY x DESC , x ; 
SELECT 10 IN ( 'y' ) ; 
SELECT 10 IN ( CAST ( 'y' AS TEXT ) ) ; 
SELECT * FROM x WHERE 'y' IN ( x ) ; 
SELECT 10 FROM x WHERE x IN ( 'y' ) ; 
SELECT x IN ( 'y' ) FROM x ; 
SELECT x IN ( 'y' , 10 , 10 ) FROM x ; 
INSERT INTO x ( x , x ) VALUES ( 10 , NULL ) ON CONFLICT ( x , x , x ) ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x WHERE x IN ( 10 , 10 ) ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER , x INTEGER , x VARCHAR(255) ) ; 
DELETE FROM x WHERE x IN ( SELECT x FROM x WHERE x LIKE 'y' CONCAT 'y' ) ; 
SELECT * FROM x WHERE x IN ( 'y' , 'y' , 'y' ) ; 
SELECT x FROM x WHERE x IN ( 10 , 10 ) ; 
SELECT x FROM x WHERE x IN ( 'y' ) ; 
SELECT * FROM x WHERE x = 10 AND x IN ( 10 ) ; 
SELECT * FROM x WHERE x IN ( 10 ) AND x = 10 ; 
SELECT * FROM x WHERE x IN ( 10 ) AND x IN ( 10 ) ; 
SELECT * FROM x WHERE x = 10 AND x NOT IN ( 10 ) ; 
SELECT * FROM x WHERE x NOT IN ( 10 ) AND x = 10 ; 
SELECT * FROM x WHERE x NOT IN ( 10 ) AND x NOT IN ( 10 ) ; 
SELECT * FROM x WHERE x NOT IN ( 10 , 10 , 10 ) ; 
SELECT * FROM x WHERE x NOT IN ( 10 ) ; 
SELECT x FROM x WHERE x = x ORDER BY x ; 
SELECT x FROM x WHERE ( x CONCAT 'y' ) = x ORDER BY x ; 
SELECT x FROM x WHERE ( x CONCAT 'y' ) = ( x CONCAT 'y' ) ORDER BY x ; 
SELECT x FROM x WHERE x IN ( x ) ORDER BY x ; 
SELECT x FROM x WHERE ( x CONCAT 'y' ) IN ( x ) ORDER BY x ; 
SELECT x FROM x WHERE x = x ; 
SELECT x FROM x WHERE x IN ( x ) ; 
SELECT 10 FROM x WHERE 'y' IN ( x ) ; 
SELECT * FROM x , x WHERE x = 10 AND x IN ( x ) ; 
CREATE TABLE x ( x INTEGER UNIQUE ) ; 
CREATE TABLE x ( x TEXT UNIQUE ) ; 
CREATE TABLE x ( x INTEGER , x INTEGER , x TEXT , x TEXT ) ; 
INSERT INTO x VALUES ( 10 , 10 , 'y' , 'y' ) ,( 10 , 10 , 'y' , 'y' ) ,( 10 , 10 , 'y' , 'y' ) ,( 10 , 10 , 'y' , 'y' ) ,( 10 , 10 , 'y' , 'y' ) ,( 10 , 10 , 'y' , 'y' ) ; 
SELECT count ( * ) FROM x WHERE x IN ( SELECT DISTINCT x FROM x LIMIT 10 ) ; 
SELECT count ( * ) FROM x WHERE x IN ( SELECT x FROM x LIMIT 10 ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x VARCHAR(500) ) ; 
CREATE VIEW x ( x ) AS SELECT LOWER ( CAST ( 'y' AS TEXT ) ) FROM x ; 
SELECT lower ( 'y' ) FROM x WHERE x NOT IN ( 10 , 10 , lower ( 'y' ) ) ; 
SELECT lower ( 'y' ) FROM x WHERE x != lower ( 'y' ) ; 
CREATE TABLE x ( x INT UNIQUE , x TEXT ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 0.1 , NULL ) ; 
PRAGMA x ( 10 ) ; 
CREATE TABLE x ( x INTEGER UNIQUE , x TEXT ) ; 
INSERT INTO x SELECT x , x FROM x ; 
UPDATE x SET x = ( SELECT x FROM x WHERE x = x ) ; 
INSERT INTO x SELECT x CONCAT x , x CONCAT x , x CONCAT x FROM x ; 
UPDATE x SET x = x , x = x , x = x ; 
PRAGMA x ( 'y' ) ; 
SELECT x FROM x WHERE x != 'y' ORDER BY x ; 
SELECT x FROM x WHERE x = 10 ORDER BY x ; 
SELECT x FROM x WHERE x = x AND x = x ; 
INSERT INTO x VALUES ( 'y' , NULL , 10 ) ; 
INSERT INTO x VALUES ( NULL , 'y' , 10 ) ; 
SELECT x FROM x ORDER BY x , x ; 
SELECT x FROM x WHERE x >= 'y' ; 
SELECT x FROM x WHERE x >= 10 ; 
SELECT x FROM x WHERE x < 'y' ; 
SELECT x FROM x WHERE x <= 'y' ; 
SELECT x FROM x WHERE typeof ( x ) IN ( 'y' , 'y' ) ORDER BY x ; 
CREATE TABLE x ( x UNIQUE PRIMARY KEY ) ; 
SELECT count ( * ) FROM x WHERE x = 'y' AND x = 'y' ; 
CREATE TRIGGER x BEFORE INSERT ON x BEGIN SELECT 10 ; END ; 
CREATE TABLE x ( x UNIQUE PRIMARY KEY ON CONFLICT ROLLBACK ) ; 
INSERT INTO x ( x , x ) VALUES ( 'y' , 10 ) ,( 'y' , 10 ) ; 
SELECT x , x , 'y' FROM x ; 
INSERT INTO x ( x , x ) VALUES ( 'y' , 'y' ) ,( 'y' , 'y' ) ; 
INSERT OR IGNORE INTO x ( x ) VALUES ( 0.1 ) ,( 10 ) ; 
CREATE INDEX x ON x ( x ) WHERE x IS NOT NULL ; 
SELECT count ( x ) , count ( x ) FROM x ; 
CREATE INDEX x ON x ( x , x ) WHERE x IS NOT NULL ; 
CREATE INDEX x ON x ( x , x ) WHERE EXISTS ( SELECT * FROM x ) ; 
CREATE INDEX x ON x ( x , x ) WHERE x != random () ; 
CREATE INDEX x ON x ( x , x ) WHERE x NOT LIKE 'y' ; 
UPDATE x SET x = x ; 
UPDATE x SET x = NULL WHERE x % 10 != 10 ; 
UPDATE x SET x = CASE WHEN x % 10 != 10 THEN x END ; 
DELETE FROM x WHERE x BETWEEN 10 AND 10 ; 
INSERT INTO x ( x , x ) SELECT x , x FROM x WHERE x < 10 ; 
UPDATE x SET x = NULL WHERE x % 10 == 10 ; 
SELECT count ( * ) FROM x WHERE x IS NOT NULL ; 
CREATE INDEX x ON x ( x ) WHERE x < 10 OR x > 10 ; 
SELECT x FROM x WHERE x = 10 AND x < 10 ; 
SELECT x FROM x WHERE x = 10 AND x > 10 ; 
INSERT INTO x SELECT x , x FROM x WHERE x < 10 ; 
UPDATE x SET x = 10 WHERE x % 10 != 10 ; 
CREATE UNIQUE INDEX x ON x ( x ) WHERE x != 10 ; 
SELECT count ( * ) FROM x WHERE x = 10 ; 
SELECT count ( * ) FROM x WHERE x BETWEEN 10 AND 10 ; 
SELECT x + 10 FROM x WHERE x = 'y' ; 
CREATE INDEX x ON x ( x ) WHERE x = 10 ; 
SELECT * FROM x LEFT JOIN x ON ( x = 10 ) ORDER BY x ; 
SELECT * FROM x JOIN x ON ( x = 10 ) ORDER BY x ; 
CREATE INDEX x ON x ( x ) WHERE x = 'y' ; 
CREATE INDEX x ON x ( x , x ) WHERE x IN ( 10 , 10 , 10 ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( NULL , 10 , 10 ) ; 
UPDATE x SET x = x WHERE x IN ( 10 , 10 , 10 ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
CREATE TABLE x ( x , x , x , x , x INTEGER PRIMARY KEY ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 , 10 ) ; 
CREATE INDEX x ON x ( x ) WHERE x = 10 AND x = 10 AND x = 10 ; 
SELECT x FROM x WHERE x = 10 AND x = 10 AND x = 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND 10 = x AND x = 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x = 10 ORDER BY x DESC ; 
CREATE INDEX x ON x ( x ) WHERE x != 10 ; 
SELECT 'y' , * FROM x WHERE x IN ( SELECT x FROM x ) ; 
SELECT * FROM x WHERE x OR 10 ; 
INSERT INTO x ( x , x ) VALUES ( NULL , 'y' ) ; 
SELECT * FROM x WHERE CASE x WHEN 10 THEN 10 ELSE 10 END ; 
SELECT x <= x , x >= x FROM x ; 
SELECT 10 FROM x WHERE x >= x ; 
SELECT 10 FROM x WHERE x <= x ; 
SELECT COUNT ( * ) FROM x WHERE x GLOB x ; 
INSERT INTO x ( x , x , x ) VALUES ( 'y' , 10 , 10 ) ,( 'y' , 10 , 10 ) ,( 'y' , 10 , 10 ) ,( 'y' , 10 , 10 ) ; 
SELECT * FROM SELECT * FROM x WHERE x = 10 AND x = 'y' , x WHERE x = 'y' ; 
SELECT * FROM x WHERE x = 10 ORDER BY x , x LIMIT 10 ; 
SELECT x , x , x FROM x INDEXED BY x WHERE x = 10 AND x = 10 AND x = 10 ; 
SELECT x , x , x FROM x INDEXED BY x WHERE x = 10 AND x = 10 AND x = 'y' ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x TEXT ) ; 
SELECT * FROM x INDEXED BY x ORDER BY 10 ; 
SELECT x , x , 'y' FROM x WHERE substr ( x , 10 , 10 ) == 'y' ORDER BY x , x ; 
SELECT x , x , 'y' FROM x WHERE 'y' == substr ( x , 10 , 10 ) ORDER BY x , x ; 
SELECT x FROM x WHERE x = 10 AND substr ( x , 10 , 10 ) = 'y' ORDER BY x ; 
SELECT x , substr ( x , x , 10 ) , 'y' FROM x ORDER BY 10 ; 
UPDATE x SET x = length ( x ) ; 
SELECT length ( x ) FROM x ORDER BY length ( x ) ; 
SELECT length ( x ) FROM x ORDER BY length ( x ) DESC ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 10 , 'y' , 10 , 10 ) ,( 10 , 'y' , 10 , 10 ) ,( 10 , 'y' , 10 , 10 ) ,( 10 , 'y' , 10 , 10 ) ,( 10 , 'y' , 10 , 10 ) ,( 10 , 'y' , 10 , 10 ) ; 
CREATE TABLE x ( x , x , x ) ; INSERT INTO x VALUES ( 10 , 10 , 10 ) ; 
INSERT INTO x SELECT * FROM x WHERE x = 10 ; 
INSERT INTO x ( x ) SELECT printf ( 'y' , x ) FROM x ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ,( 'y' , 'y' , 'y' ) ,( 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 10 , NULL , NULL , NULL , NULL ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
UPDATE x SET x = 10 WHERE ( x IN ( 10 , 10 ) ) = 10 ; 
INSERT INTO x VALUES ( NULL ) ,( 10 ) ; 
SELECT 'y' , typeof ( x ) , x FROM x WHERE x < 10 ; 
SELECT 'y' , typeof ( x ) , x FROM x WHERE x + 10 < 10 ; 
SELECT x + x , x + x FROM x ORDER BY x + x , x + x ; 
SELECT 10 IN ( SELECT 10 ) FROM x ; 
SELECT 10 IN ( SELECT 10 UNION ALL SELECT 10 ) FROM x ; 
SELECT abs ( 10 + 10 ) IN ( SELECT 10 UNION ALL SELECT 10 ) FROM x ; 
CREATE TABLE x ( x INT PRIMARY KEY , x INT UNIQUE ) ; 
REPLACE INTO x ( x , x ) VALUES ( 10 , 10 ) ; 
REPLACE INTO x VALUES ( 10 , 10 ) ; 
REPLACE INTO x SELECT 10 , 10 ; 
CREATE TABLE x ( x INTEGER , x ) ; 
INSERT INTO x VALUES ( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ; 
SELECT x + 10 , quote ( x + 10 ) FROM x ORDER BY 10 ; 
UPDATE x SET x = printf ( 'y' , x , x ) ; 
CREATE TABLE x ( x INTEGER , x INTEGER ) ; 
SELECT * FROM x WHERE abs ( x ) = 10 OR abs ( x ) = 10 ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 0.1 ) ,( 10 , 10 ) ; 
SELECT x , x FROM x WHERE x IS NULL ; 
INSERT INTO x SELECT x FROM x WHERE x = 10 ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x UNIQUE ) ; 
INSERT INTO x SELECT max ( x ) FROM x ; 
INSERT INTO x ( x , x ) SELECT nullif ( x * 10 + 10 , 10 ) , x + 10 FROM x ; 
INSERT INTO x SELECT nullif ( x * 10 + 10 , 10 ) , x + 10 FROM x ; 
INSERT INTO x VALUES ( 10 , 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 , 10 ) ; 
CREATE TABLE x AS SELECT 'y' AS x ; 
CREATE TABLE x ( x , x , x , x , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x , x , x , x , x ) SELECT * FROM x ; 
INSERT INTO x ( x , x , x ) SELECT 'y' , 10 , 'y' ; 
REPLACE INTO x SELECT x , 10 FROM x ; 
REPLACE INTO x SELECT x , x FROM x ; 
SELECT x , length ( x ) FROM x ; 
CREATE TABLE x ( x , x UNIQUE , x UNIQUE ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
SELECT * , 'y' FROM x ORDER BY x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INT , x INT , x INT ) ; 
CREATE UNIQUE INDEX x ON x ( x ) WHERE x <= x ; 
INSERT INTO x SELECT x , count ( * ) FROM x GROUP BY x ; 
INSERT INTO x SELECT x , count () FROM x GROUP BY x ; 
INSERT INTO x ( x , x ) SELECT * FROM x ; 
INSERT INTO x ( x , x , x ) SELECT x , 'y' , x FROM x ; 
INSERT INTO x SELECT x + ( SELECT max ( x ) FROM x ) , x FROM x ; 
UPDATE x SET x = 'y' CONCAT x CONCAT 'y' CONCAT x CONCAT 'y' ; 
INSERT INTO x SELECT x + ( SELECT max ( x ) + 10 FROM x ) , x FROM x ; 
DELETE FROM x WHERE x != 10 ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 , 'y' , 'y' ) ; 
INSERT INTO x SELECT DISTINCT NULL , x , x , x FROM x LEFT OUTER JOIN x ON x == x AND x == x AND x == x WHERE x IS NULL ; 
INSERT INTO x SELECT x , 10 FROM x WHERE x = 10 ; 
INSERT INTO x SELECT ( SELECT x FROM x ) , 10 ; 
INSERT INTO x ( x ) SELECT 10 UNION ALL SELECT 10 ORDER BY 10 ; 
INSERT INTO x SELECT x , x + 10 FROM x ; 
SELECT 'y' , x , x FROM x UNION ALL SELECT 'y' , x , x FROM x ORDER BY x ; 
SELECT 'y' , x , x FROM x UNION ALL SELECT 'y' , x , x FROM x ORDER BY x , x ; 
INSERT INTO x ( x ) SELECT 10 FROM x LIMIT 10 ; 
UPDATE x SET x = randstr ( 10 , 10 ) WHERE ( x % 10 ) == 10 ; 
INSERT INTO x SELECT randstr ( 10 , 10 ) , randstr ( 10 , 10 ) , x FROM x ; 
INSERT INTO x SELECT 10 , 10 ; 
INSERT INTO x SELECT * FROM x LIMIT 10 ; 
INSERT INTO x SELECT DISTINCT * FROM x ; 
CREATE TABLE x ( x CHECK( x != 'y' ) ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ) ; INSERT INTO x VALUES ( 10 ) ; 
CREATE TABLE x ( x INT ) ; INSERT INTO x VALUES ( 10 ) ; 
DELETE FROM x ; DELETE FROM x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ON CONFLICT REPLACE , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ON CONFLICT IGNORE , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ON CONFLICT FAIL , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ON CONFLICT ABORT , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ON CONFLICT ROLLBACK , x ) ; 
INSERT INTO x SELECT * FROM x UNION ALL SELECT * FROM x WHERE EXISTS ( SELECT * FROM x WHERE x = x ) ; 
SELECT coalesce ( instr ( 'y' , NULL ) , 10 ) ; 
SELECT coalesce ( instr ( NULL , NULL ) , 10 ) ; 
SELECT instr ( x , x ) FROM x ; 
INSERT INTO x SELECT x + 10 , randstr ( 10 , 10 ) FROM x ; 
INSERT INTO x SELECT x + 10 , x CONCAT 'y' CONCAT x FROM x ; 
UPDATE x SET x = substr ( x , 10 , 10 ) ; 
SELECT md5sum ( x CONCAT x ) FROM x ; 
INSERT INTO x SELECT round ( x / 10 ) , randstr ( 10 , 10 ) , randstr ( 10 , 10 ) FROM x ; 
SELECT max ( min ( x , x ) ) , min ( max ( x , x ) ) , x FROM x GROUP BY x ORDER BY x ; 
SELECT * FROM x WHERE x == 10 ; 
INSERT INTO x VALUES ( 0.1 , 'y' , 'y' ) ; 
SELECT * FROM x WHERE x == 'y' ; 
SELECT * FROM x WHERE x > 'y' ; 
SELECT * FROM x WHERE x > 10 AND x < 10 ; 
SELECT * FROM x WHERE x >= 'y' AND x < 'y' ; 
SELECT * FROM x WHERE x == 'y' AND x > 10 ; 
SELECT * FROM x WHERE 10 < x ; 
SELECT * FROM x WHERE 10 < x AND 10 >= x ; 
SELECT * FROM x WHERE x < 10 AND x > 10 ; 
SELECT * FROM x WHERE x >= 10 ; 
SELECT x , x , x FROM x WHERE x == 'y' ; 
INSERT INTO x SELECT NULL , x , x FROM x ; 
SELECT x FROM x WHERE x = 0.1 + 0.1 ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER , x TEXT ) ; 
SELECT * FROM x WHERE x < x ; 
SELECT * FROM x WHERE x = x ; 
SELECT x FROM x WHERE x < 10 ; 
DELETE FROM x WHERE x = 10 OR x < 10 ; 
DELETE FROM x WHERE abs ( x ) IS NULL OR abs ( x ) < 10 ; 
UPDATE x SET x = 'y' WHERE abs ( x ) = 10 ; 
SELECT intreal ( 10 ) ; 
SELECT intreal ( 10 ) = 10 , 10 = intreal ( 10 ) ; 
SELECT intreal ( 10 ) = 0.1 , 0.1 = intreal ( 10 ) ; 
SELECT typeof ( intreal ( 10 ) ) ; 
SELECT 'y' CONCAT intreal ( 10 ) CONCAT 'y' ; 
SELECT max ( 0.1 , intreal ( 10 ) , 0.1 ) , max ( 10 , intreal ( 10 ) , 10 ) ; 
SELECT max ( 0.1 , intreal ( 10 ) , intreal ( 10 ) , 0.1 ) , max ( 10 , intreal ( 10 ) , intreal ( 10 ) , 10 ) ; 
INSERT INTO x ( x ) VALUES ( 10 ) ,( 10 ) ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , NULL ) ; 
SELECT x FROM x WHERE x IS NULL ; 
SELECT x FROM x WHERE 10 ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , NULL , NULL ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , NULL ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , NULL , 10 ) ; 
SELECT x , x , 'y' FROM x , x ON x = x ; 
SELECT * FROM x AS x NATURAL JOIN x ; 
SELECT * FROM x NATURAL JOIN x AS y ; 
SELECT * FROM x AS x INNER JOIN x USING ( b , c ) ; 
SELECT * FROM x INNER JOIN x AS y USING ( b , c ) ; 
SELECT * FROM x AS x INNER JOIN x AS y USING ( b , c ) ; 
SELECT * FROM x INNER JOIN x USING ( b ) ; 
SELECT * FROM x INNER JOIN x USING ( c ) ; 
SELECT * FROM x INNER JOIN x USING ( c , b ) ; 
SELECT * FROM x CROSS JOIN x USING ( b , c ) ; 
SELECT * FROM x INNER JOIN x USING ( b , c ) ; 
SELECT * FROM x NATURAL JOIN x NATURAL JOIN x ; 
SELECT * FROM x NATURAL JOIN x USING ( b ) ; 
SELECT * FROM x JOIN x ON x = x USING ( b ) ; 
SELECT * FROM x JOIN x USING ( a ) ; 
SELECT * FROM x JOIN x USING ( d ) ; 
SELECT * FROM x JOIN x ON x = x ; 
SELECT * FROM x LEFT x JOIN x ; 
SELECT * FROM x NATURAL AWK SED JOIN x ; 
SELECT * FROM x , x WHERE x < x ; 
SELECT * FROM x , x WHERE x > x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x , x INTEGER ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , NULL ) ; 
SELECT coalesce ( x , 10 ) FROM x LEFT JOIN x ON x = x ; 
CREATE VIEW x AS SELECT x , x FROM x , x WHERE x = x ; 
SELECT * FROM x LEFT JOIN x ON ( x = x ) ; 
SELECT * FROM x LEFT JOIN SELECT x , x FROM x , x WHERE x = x ON ( x = x ) ; 
SELECT * FROM x LEFT JOIN SELECT 10 , x , x FROM x AS sub1 ON x = x ; 
CREATE VIEW x AS SELECT * FROM x WHERE x > 10 ; 
SELECT * FROM x LEFT JOIN x ; 
SELECT * FROM x LEFT JOIN SELECT * FROM x ; 
SELECT * FROM x LEFT JOIN x , x WHERE x = x ; 
SELECT * FROM SELECT 10 LEFT JOIN SELECT x + 10 FROM x GROUP BY 10 ; 
CREATE VIEW x AS SELECT x , 10 AS b FROM x ; 
SELECT * , 'y' FROM x LEFT JOIN x ON x = x WHERE x = 10 ; 
SELECT * , 'y' FROM x LEFT JOIN x ON x = x WHERE x + 10 = x ; 
SELECT * , 'y' FROM x LEFT JOIN x ON x = x ORDER BY x ; 
SELECT * , 'y' FROM x LEFT JOIN x WHERE NOT ( 'y' = 'y' AND x = 10 ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT * FROM x LEFT JOIN SELECT abs ( 10 ) AS y FROM x ON x WHERE NOT ( x = 'y' ) ; 
CREATE VIEW x AS SELECT x FROM x LEFT JOIN x ; 
CREATE VIEW x ( x ) AS SELECT x FROM x LEFT JOIN x ; 
SELECT * FROM x LEFT JOIN x WHERE NULL IN ( x ) ; 
SELECT * FROM x LEFT JOIN x ON ( x = x ) JOIN x ON ( x = coalesce ( x , 10 ) ) ; 
SELECT * FROM x JOIN x ON ( x = x ) JOIN x ON ( x = x ) ; 
SELECT x , x FROM x LEFT JOIN x ON ( x = x ) LEFT JOIN x ON ( x = x ) ; 
SELECT x , x FROM x LEFT JOIN x ON ( x = x ) LEFT JOIN x ON ( x = x + 10 ) ; 
SELECT DISTINCT x , x FROM x LEFT JOIN x LEFT JOIN x ON ( x = x + 10 ) ; 
SELECT x , x FROM x LEFT JOIN x LEFT JOIN x ON ( x = x + 10 ) ; 
SELECT x FROM x LEFT JOIN x USING ( a ) ; 
SELECT x FROM x LEFT JOIN x ON ( x = x AND x = x AND x = x ) ; 
CREATE TABLE x ( x , x ) ; INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
CREATE TABLE x ( x , x ) ; INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ; 
CREATE TABLE x ( x ) ; INSERT INTO x VALUES ( 10 ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER , x INTEGER ) ; 
CREATE TABLE x ( x NOT NULL ) ; 
SELECT * FROM x LEFT JOIN x LEFT JOIN x ON x = x ; 
CREATE TABLE x ( x TEXT NOT NULL , x TEXT ) ; 
CREATE TABLE x ( x TEXT NOT NULL , x TEXT NOT NULL ) ; 
SELECT * FROM x LEFT JOIN x JOIN x WHERE x = x ; 
SELECT count ( x ) FROM x LEFT JOIN x ON x GROUP BY x ; 
SELECT count ( x ) FROM SELECT * FROM x LEFT JOIN x ON x GROUP BY x ; 
SELECT * FROM x LEFT JOIN x ON x = 10 OR x = 10 WHERE x IS NULL ; 
SELECT ifnull ( x , 'y' ) FROM x LEFT JOIN x ON ( x = x ) ; 
SELECT * FROM x , x WHERE ( x >= 10 OR x < 10 ) AND x IN ( 10 , x ) ORDER BY 10 ; 
SELECT * FROM x LEFT JOIN x USING ( a ) LEFT JOIN x USING ( a ) ; 
SELECT x , x FROM x LEFT JOIN x ON x = x LEFT JOIN x ON x = x ; 
SELECT * FROM x JOIN x USING ( y ) JOIN x USING ( x ) ; 
SELECT * FROM x JOIN x NATURAL JOIN x ; 
SELECT * FROM x JOIN x USING ( y ) NATURAL JOIN x ; 
SELECT * FROM x NATURAL JOIN x JOIN x USING ( x , z ) ; 
SELECT * FROM x NATURAL JOIN x JOIN x USING ( x ) ; 
SELECT * FROM x NATURAL JOIN x JOIN x USING ( z ) ; 
INSERT INTO x SELECT x + 10 , x CONCAT x FROM x ; 
INSERT INTO x SELECT a_string ( 10 ) , a_string ( 10 ) FROM x ; 
CREATE TABLE x . x ( x INTEGER ) ; 
INSERT INTO x . x VALUES ( 10 ) ; 
INSERT OR IGNORE INTO x . x SELECT * FROM x . x ; 
INSERT INTO x SELECT randomblob ( 10 ) , randomblob ( 10 ) , randomblob ( 10 ) FROM x ; 
SELECT last_insert_rowid () ; 
UPDATE x SET x = x + 10 , x = 10 + last_insert_rowid () ; 
UPDATE x SET x = 10 + last_insert_rowid () ; 
DROP TABLE x ; DROP TABLE x ; DROP TRIGGER x ; 
UPDATE x SET x = last_insert_rowid () WHERE x = 10 ; 
SELECT changes () , total_changes () ; 
UPDATE x SET x = x + changes () WHERE x = 10 ; 
SELECT count () FROM x WHERE x = 10 ; 
SELECT changes () ; 
DROP TABLE x ; DROP TABLE x ; DROP TABLE x ; 
DELETE FROM x WHERE x IS NOT NULL ; 
SELECT total_changes () ; 
SELECT x FROM x WHERE x LIKE 'y' ORDER BY 10 ; 
SELECT x FROM x WHERE x MATCH 'y' ORDER BY 10 ; 
INSERT INTO x SELECT * FROM x ORDER BY x ; 
SELECT x FROM x WHERE x LIKE 'y' ORDER BY x ; 
INSERT INTO x ( x , x ) VALUES ( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ; 
INSERT INTO x ( x ) VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ; 
SELECT quote ( x ) FROM x WHERE x LIKE 'y' ORDER BY x ; 
SELECT quote ( x ) FROM x WHERE x LIKE 'y' ORDER BY x DESC ; 
SELECT quote ( x ) FROM x WHERE x LIKE 'y' ORDER BY x ASC ; 
INSERT INTO x ( x ) VALUES ( 'y' ) ,( 10 ) ,( 10 ) ; 
SELECT x FROM x WHERE x GLOB 'y' ; 
SELECT * FROM x WHERE ( x LIKE 'y' ) ; 
SELECT * FROM x WHERE x GLOB 'y' ; 
SELECT x GLOB 'y' FROM x ; 
CREATE TABLE x ( x TEXT , x , x , x ) ; 
CREATE VIEW x AS SELECT * FROM x LIMIT 10 ; 
SELECT count ( * ) FROM SELECT * FROM x ; 
CREATE TABLE x AS SELECT * FROM x LIMIT 10 ; 
SELECT x FROM SELECT x * 10 + x AS z FROM x ORDER BY x LIMIT 10 ORDER BY x LIMIT 10 ; 
INSERT INTO x SELECT x FROM x ORDER BY x LIMIT 10 OFFSET 10 ; 
INSERT INTO x SELECT x + ( SELECT max ( x ) FROM x ) FROM x ; 
SELECT x FROM x ORDER BY x DESC LIMIT 10 OFFSET 10 ; 
INSERT INTO x SELECT x - x , x + x FROM x WHERE x BETWEEN 10 AND 10 ORDER BY x LIMIT 10 ; 
INSERT INTO x SELECT x - x , x + x FROM x WHERE x BETWEEN 10 AND 10 ORDER BY x DESC LIMIT 10 ; 
INSERT INTO x SELECT x - x , x + x FROM x WHERE x ORDER BY x DESC LIMIT 10 ; 
SELECT * FROM x ORDER BY x LIMIT 10 ; 
SELECT * FROM x ORDER BY x DESC , x DESC LIMIT 10 ; 
SELECT count ( * ) , sum ( x ) , sum ( x ) , min ( x ) , max ( x ) , min ( x ) , max ( x ) FROM x ; 
SELECT * FROM x LIMIT 10 OFFSET 10 ; 
SELECT x FROM x UNION ALL SELECT x FROM x LIMIT 10 ; 
SELECT x FROM x UNION ALL SELECT x FROM x LIMIT 10 OFFSET 10 ; 
SELECT x FROM x UNION ALL SELECT x FROM x ORDER BY 10 LIMIT 10 OFFSET 10 ; 
SELECT x FROM x UNION SELECT x + 10 FROM x LIMIT 10 OFFSET 10 ; 
SELECT x FROM x UNION SELECT x + 10 FROM x ORDER BY 10 DESC LIMIT 10 OFFSET 10 ; 
SELECT x + 10 FROM x EXCEPT SELECT x FROM x LIMIT 10 ; 
SELECT x + 10 FROM x EXCEPT SELECT x FROM x ORDER BY 10 DESC LIMIT 10 ; 
SELECT x + 10 FROM x INTERSECT SELECT x FROM x LIMIT 10 ; 
SELECT x + 10 FROM x INTERSECT SELECT x FROM x LIMIT 10 OFFSET 10 ; 
SELECT x + 10 FROM x INTERSECT SELECT x FROM x ORDER BY 10 DESC LIMIT 10 OFFSET 10 ; 
SELECT DISTINCT CAST ( round ( x / 10 ) AS INTEGER ) FROM x LIMIT 10 ; 
SELECT DISTINCT CAST ( round ( x / 10 ) AS INTEGER ) FROM x LIMIT 10 OFFSET 10 ; 
SELECT * FROM SELECT * FROM x LIMIT 10 ; 
SELECT x , x , 'y' FROM x WHERE x IN ( 10 , 10 , 10 , 10 , 10 ) ORDER BY x LIMIT 10 ; 
INSERT INTO x ( x , x ) VALUES ( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ; 
SELECT x , x , 'y' FROM x , x WHERE x = 'y' AND x = x ORDER BY x LIMIT 10 ; 
SELECT x , x , 'y' FROM x WHERE x IN ( 10 , 10 , 10 , 10 , 10 ) ORDER BY x DESC LIMIT 10 ; 
SELECT * , 'y' FROM x , x WHERE x = x ORDER BY x LIMIT 10 ; 
SELECT * , 'y' FROM x LEFT JOIN x ON x = x ORDER BY x LIMIT 10 ; 
SELECT * , 'y' FROM x WHERE x = 10 AND ( x = 10 OR x = 10 ) ORDER BY x DESC ; 
SELECT * , 'y' FROM x WHERE x = 10 AND ( x = 10 OR x = 10 ) ORDER BY x DESC LIMIT 10 ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT * , 'y' FROM x WHERE x IN ( 10 , 10 , 10 ) ORDER BY x DESC LIMIT 10 ; 
SELECT x FROM x WHERE x IN ( 10 , 10 , 10 , 10 , 10 ) ORDER BY x DESC LIMIT 10 ; 
SELECT x FROM x WHERE x IN ( 10 , 10 , 10 , 10 , 10 ) ORDER BY x LIMIT 10 ; 
CREATE TABLE x ( x INT PRIMARY KEY , x ) ; 
CREATE TABLE x ( x , x ) ; INSERT INTO x VALUES ( 10 , 10 ) ; 
SELECT x FROM x , x WHERE x = x AND x <= x ORDER BY x DESC ; 
INSERT INTO x ( x , x , x ) VALUES ( 'y' , 10 , 'y' ) ,( 'y' , 10 , 'y' ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 'y' ) ,( 'y' , 'y' , 'y' ) ,( 'y' , 'y' , 'y' ) ; 
CREATE TABLE x ( x , x , x , x VARCHAR(100) ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 'y' , 10 , 'y' ) ; 
INSERT INTO x SELECT tx_exec ( 'y' ) ; 
UPDATE x SET x = tx_exec ( 'y' ) ; 
SELECT x * 10 FROM x ORDER BY x * 10 ; 
SELECT x FROM x WHERE x = 'y' ORDER BY 10 ; 
SELECT x FROM x UNION SELECT x FROM x ORDER BY 10 ; 
SELECT * FROM x ORDER BY x DESC ; 
INSERT INTO x SELECT x FROM x WHERE x BETWEEN 10 AND 10 ; 
SELECT count ( * ) FROM SELECT DISTINCT x FROM x ; 
CREATE VIRTUAL TABLE x USING rtree ( id , a , b , c , d ) ; 
SELECT x , count ( x ) , count ( * ) FROM SELECT NULL AS x , x + 10 AS y FROM x UNION SELECT * FROM x GROUP BY x ORDER BY x ; 
CREATE TABLE x ( x INTEGER UNIQUE NOT NULL ) ; 
SELECT coalesce ( min ( x ) , 10 ) FROM x ; 
SELECT coalesce ( max ( x ) , 10 ) FROM x ; 
SELECT coalesce ( max ( x ) , 10 ) FROM x WHERE x < 10 ; 
SELECT * FROM SELECT max ( x ) FROM x ; 
SELECT * FROM SELECT min ( x ) FROM x ; 
SELECT min ( x ) , max ( x ) FROM x ; 
SELECT ( SELECT min ( x ) FROM x ) , ( SELECT max ( x ) FROM x ) ; 
SELECT min ( x ) FROM x WHERE x = 10 ; 
SELECT max ( x ) FROM x WHERE x = 10 ; 
SELECT min ( x ) FROM x WHERE x = 10 AND x >= 0.1 ; 
SELECT max ( x ) FROM x WHERE x = 10 AND x >= 0.1 ; 
INSERT INTO x SELECT x , x , x * x FROM x ; 
INSERT INTO x SELECT x , x , x * x + 10 FROM x ; 
SELECT min ( x ) FROM x WHERE x = 10 AND x = 10 ; 
SELECT max ( x ) FROM x WHERE x = 10 AND x = 10 ; 
SELECT min ( x ) FROM x WHERE x = 10 AND x = 10 AND x = 10 ; 
SELECT max ( x ) FROM x WHERE x = 10 AND x = 10 AND x = 10 ; 
SELECT * FROM x ORDER BY x , x , x ; 
SELECT min ( x ) , count ( x ) FROM x WHERE x = 'y' ; 
SELECT min ( x ) FROM x WHERE x = 'y' AND x > 'y' ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
SELECT max ( x + x ) FROM x ; 
SELECT x , max ( x + x ) FROM x ; 
SELECT x , min ( x + x ) FROM x ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , NULL , 10 ) ,( 10 , 10 , NULL ) ; 
SELECT min ( x ) , x FROM x ; 
SELECT min ( x ) , x FROM x WHERE x < 10 ; 
SELECT MIN ( x ) , x FROM x WHERE x ISNULL ; 
SELECT MIN ( x ) FROM x WHERE x = 10 ; 
SELECT min ( x ) , x , x FROM x WHERE x = 'y' ; 
SELECT x , MIN ( x ) FROM x ; 
CREATE TABLE x ( x TEXT , x TEXT , x TEXT , x TEXT ) ; 
UPDATE x SET x = x CONCAT x CONCAT x CONCAT x ; 
SELECT * ; 
CREATE TABLE x ( x UNIQUE NOT NULL , x UNIQUE NOT NULL ) ; 
CREATE TABLE x ( x INT UNIQUE , x TEXT UNIQUE ) ; 
INSERT OR IGNORE INTO x VALUES ( 0.1 , 'y' ) ; 
INSERT OR IGNORE INTO x VALUES ( 'y' , 10 ) ; 
CREATE TABLE x ( x INTEGER , x TEXT , x ) ; 
INSERT INTO x VALUES ( 0.1 , 10 , 10 ) ; 
INSERT INTO x VALUES ( 10 , 0.1 , 10 ) ; 
INSERT INTO x VALUES ( 0.1 , 0.1 , 10 ) ; 
SELECT DISTINCT x , x FROM x ORDER BY x ; 
SELECT min ( x ) , max ( x ) , count ( x ) FROM x GROUP BY x ORDER BY 10 ; 
CREATE TABLE x AS SELECT x ; 
CREATE TABLE x AS SELECT 10 ; 
UPDATE x SET x = x + 10 WHERE x = 10 OR x = 10 ; 
CREATE TABLE x AS SELECT * FROM x UNION ALL SELECT 10 ; 
REPLACE INTO x ( x ) VALUES ( 'y' ) ; 
SELECT x , quote ( x ) FROM x ; 
UPDATE x SET x = 10 , x = 10 , x = 10 , x = 10 , x = 10 , x = 10 ; 
CREATE UNIQUE INDEX x ON x ( x ) WHERE x = 10 ; 
SELECT x , * FROM SELECT * FROM x , x ; 
CREATE VIEW x AS SELECT * FROM x , x ; 
SELECT x FROM x WHERE x <= 10 ; 
SELECT x FROM x WHERE x < 10 ORDER BY 10 ; 
CREATE VIEW x AS SELECT x AS p , x AS q FROM x AS x1 , x AS x2 WHERE x = x ; 
SELECT * FROM x WHERE x >= 10 ORDER BY x ; 
SELECT * FROM x WHERE x > 10 ORDER BY x ; 
SELECT * FROM x WHERE x >= 10 AND x < 10 ORDER BY x DESC ; 
SELECT * FROM x WHERE x >= 10 AND x <= 10 ORDER BY x DESC ; 
INSERT INTO x ( x ) SELECT x CONCAT 'y' FROM x ; 
SELECT count ( x ) FROM x WHERE x IN ( SELECT x FROM x ) ; 
SELECT count ( x ) FROM x WHERE x IN ( SELECT x FROM x ORDER BY x + 10 ) ; 
SELECT x AS c , x , x FROM x LEFT JOIN SELECT x , max ( x ) + 10 AS c FROM x GROUP BY x USING ( c ) ; 
SELECT * FROM SELECT x AS c , x , x FROM x LEFT JOIN SELECT x , max ( x ) + 10 AS c FROM x GROUP BY x USING ( c ) ; 
CREATE TABLE x ( x INTEGER NOT NULL , x TEXT ) ; 
SELECT x , max ( x ) FROM x GROUP BY 10 , 10 ORDER BY 10 , 10 ; 
SELECT * FROM x , SELECT x FROM x AS x WHERE x = x ; 
CREATE TABLE x AS SELECT * FROM x , x ; 
SELECT x FROM x LEFT JOIN x ON ( x = x ) ; 
UPDATE x SET x = 10 WHERE x AND ( SELECT x FROM x WHERE x ) ; 
INSERT OR IGNORE INTO x SELECT x * 10 FROM x ; 
INSERT OR IGNORE INTO x SELECT x + 10 FROM x ; 
INSERT OR IGNORE INTO x SELECT - x FROM x ; 
SELECT * FROM x WHERE x >= ( SELECT x FROM x ) UNION ALL SELECT * FROM x LIMIT ( SELECT x FROM x ) ; 
SELECT quote ( eval ( 'y' , 'y' ) ) ; 
SELECT quote ( eval ( 'y' ) ) ; 
SELECT eval ( 'y' , 'y' ) ; 
SELECT x , coalesce ( x , eval ( 'y' ) ) , x 
INSERT INTO x VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ,( 10 , NULL , 10 ) ; 
SELECT eval ( 'y' ) ; 
SELECT x , x , eval ( printf ( 'y' , x + x , x + x ) ) FROM x , x ; 
CREATE TABLE x ( x PRIMARY KEY , x UNIQUE , x ) ; 
INSERT OR IGNORE INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ; 
INSERT OR REPLACE INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ; 
INSERT OR ABORT INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 10 , NULL , 10 , 10 , 10 ) ; 
INSERT OR IGNORE INTO x ( x , x , x , x , x ) VALUES ( 10 , NULL , 10 , 10 , 10 ) ; 
INSERT OR REPLACE INTO x ( x , x , x , x , x ) VALUES ( 10 , NULL , 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , NULL , 10 , 10 ) ; 
INSERT OR IGNORE INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , NULL , 10 , 10 ) ; 
INSERT OR REPLACE INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , NULL , 10 , 10 ) ; 
INSERT OR ABORT INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , NULL , 10 , 10 ) ; 
INSERT OR ABORT INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , 10 , NULL , 10 ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 , NULL ) ; 
INSERT OR REPLACE INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , 10 , NULL , 10 ) ; 
UPDATE x SET x = NULL , x = x , x = x ; 
CREATE TABLE x ( x NOT NULL UNIQUE ) ; 
CREATE TABLE x ( x UNIQUE NOT NULL ) ; 
CREATE TABLE x ( x PRIMARY KEY NOT NULL ) ; 
CREATE TABLE x ( x NOT NULL PRIMARY KEY ) ; 
CREATE TABLE x ( x PRIMARY KEY UNIQUE NOT NULL ) ; 
CREATE TABLE x ( x UNIQUE PRIMARY KEY NOT NULL ) ; 
SELECT ifnull ( x + x , 10 ) FROM x ; 
SELECT ifnull ( x * x , 10 ) FROM x ; 
SELECT ifnull ( CASE WHEN x != 10 THEN 10 ELSE 10 END , 10 ) FROM x ; 
SELECT ifnull ( CASE WHEN NOT x != 10 THEN 10 ELSE 10 END , 10 ) FROM x ; 
SELECT ifnull ( CASE WHEN x != 10 AND x != 10 THEN 10 ELSE 10 END , 10 ) FROM x ; 
SELECT ifnull ( CASE WHEN NOT ( x != 10 AND x != 10 ) THEN 10 ELSE 10 END , 10 ) FROM x ; 
SELECT ifnull ( CASE WHEN x != 10 OR x != 10 THEN 10 ELSE 10 END , 10 ) FROM x ; 
SELECT ifnull ( CASE WHEN NOT ( x != 10 OR x != 10 ) THEN 10 ELSE 10 END , 10 ) FROM x ; 
SELECT ifnull ( CASE x WHEN x THEN 10 ELSE 10 END , 10 ) FROM x ; 
SELECT count ( * ) , count ( x ) , count ( x ) , sum ( x ) , sum ( x ) , avg ( x ) , avg ( x ) , min ( x ) , max ( x ) FROM x ; 
SELECT x FROM x WHERE x < 10 AND x = 10 ; 
SELECT x FROM x WHERE NOT ( x < 10 AND x = 10 ) ; 
SELECT x FROM x UNION SELECT x FROM x ORDER BY x ; 
CREATE TABLE x ( x , x UNIQUE ON CONFLICT IGNORE ) ; 
SELECT x FROM x WHERE x = NULL ; 
SELECT x FROM x WHERE x IN ( 10 , NULL ) ; 
SELECT x FROM x WHERE x < 10 ORDER BY x ; 
SELECT x FROM x WHERE x != 10 ORDER BY x ; 
INSERT INTO x VALUES ( 10 , NULL , 'y' ) ; 
INSERT INTO x VALUES ( NULL , 'y' , 'y' ) ; 
SELECT * FROM x WHERE x = 10 AND x IS NULL ; 
SELECT * FROM x WHERE x IS NULL AND x = 'y' ; 
INSERT INTO x VALUES ( NULL ) ,( 10 ) ,( 10 ) ,( 10 ) ,( NULL ) ; 
CREATE VIRTUAL TABLE x USING echo ( tx ) ; 
SELECT * FROM x ORDER BY x NULLS FIRST ; 
SELECT * FROM x ORDER BY x NULLS LAST ; 
SELECT x , x FROM x WHERE x = 10 ORDER BY x NULLS LAST , x ; 
SELECT * FROM x WHERE x = 10 AND x = 10 ORDER BY x NULLS LAST ; 
SELECT * FROM x WHERE x = 10 AND x = 10 ORDER BY x DESC NULLS FIRST ; 
SELECT * FROM x ORDER BY x DESC NULLS FIRST ; 
DELETE FROM x WHERE x NOT IN ( 10 , 10 ) ; 
INSERT INTO x VALUES ( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ; 
SELECT count ( * ) FROM x , x ; 
SELECT ( SELECT 'y' FROM SELECT 'y' ORDER BY 'y' ASC , 'y' DESC GROUP BY 10 HAVING length ( x ) ) FROM x ; 
SELECT ( SELECT x CONCAT x FROM x , x ORDER BY x , x ) ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT x , x , 'y' FROM x ORDER BY x , x LIMIT 10 ; 
SELECT x , x FROM x , x ORDER BY 10 , 10 ; 
SELECT x , x FROM x CROSS JOIN x ORDER BY 10 , 10 ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x , x , x , x ) ; 
SELECT x , x , x FROM x ORDER BY x , x , x ; 
SELECT x , x , x FROM x ORDER BY x DESC , x , x ; 
SELECT x FROM x ORDER BY x , x LIMIT 10 OFFSET 10 ; 
SELECT x FROM x ORDER BY x DESC , x LIMIT 10 OFFSET 10 ; 
SELECT x FROM x ORDER BY x , x DESC LIMIT 10 OFFSET 10 ; 
SELECT x FROM x ORDER BY x , x , x , x , x ; 
SELECT x FROM x ORDER BY x , x , x , x , x DESC ; 
SELECT x FROM x ORDER BY x , x , x , x DESC , x ; 
SELECT x FROM x ORDER BY x , x , x DESC , x , x ; 
SELECT x FROM x ORDER BY x , x DESC , x , x , x ; 
SELECT x FROM x ORDER BY x DESC , x , x , x , x ; 
SELECT x FROM x ORDER BY x DESC , x DESC , x , x , x LIMIT 10 ; 
SELECT x FROM x ORDER BY x , x , x , x , x DESC LIMIT 10 OFFSET 10 ; 
SELECT x , x , sum ( x ) FROM x GROUP BY x , x ORDER BY x , x ; 
SELECT x , x , sum ( x ) FROM x GROUP BY x , x ORDER BY x DESC , x DESC ; 
SELECT x , x , sum ( x ) FROM x GROUP BY x , x ORDER BY x , x DESC ; 
SELECT x , x , sum ( x ) FROM x GROUP BY x , x ORDER BY x DESC , x ; 
SELECT x , x , sum ( x ) FROM x GROUP BY x , x ORDER BY x , x DESC NULLS FIRST ; 
SELECT x , x , sum ( x ) FROM x GROUP BY x , x ORDER BY x DESC , x NULLS LAST ; 
SELECT sum ( length ( x ) ) FROM x ; 
CREATE TABLE x ( x CHECK( x < 10 ) , x CHECK( x < 10 ) ) ; 
INSERT INTO x SELECT NULL , a_string ( 10 ) FROM x ; 
UPDATE x SET x = NULL WHERE x > 10 ; 
SELECT count ( * ) FROM x WHERE x < 10 ; 
RELEASE x ; 
CREATE TABLE x . x ( x UNIQUE , x UNIQUE ) ; 
REPLACE INTO x SELECT * FROM x ; 
INSERT INTO x SELECT * FROM x WHERE x <= 10 ; 
UPDATE x SET x = a_string ( 10 ) ; 
INSERT INTO x SELECT a_string ( ( SELECT 10 + max ( x ) FROM x ) ) FROM x ; 
INSERT INTO x ( x , x , x ) SELECT x + 10 , x , x FROM x ; 
INSERT INTO x SELECT a_string ( 10 ) , a_string ( 10 ) , a_string ( 10 ) FROM x ; 
UPDATE x SET x = a_string ( 10 ) WHERE x > 10 ; 
SELECT COALESCE ( max ( x ) , 10 ) FROM x ; 
INSERT INTO x SELECT x CONCAT x FROM x ; 
DELETE FROM x WHERE x % 10 != 10 ; 
INSERT INTO x VALUES ( 'y' , NULL ) ,( 'y' , 'y' ) ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( NULL , 10 ) ,( NULL , 10 ) ; 
PRAGMA x . x ( x ) ; 
INSERT INTO x ( x ) SELECT x CONCAT x CONCAT x CONCAT x FROM x ; 
INSERT INTO x SELECT x + 10 , randomblob ( 10 ) , x + 10 , randomblob ( 10 ) FROM x ; 
CREATE TABLE x . x ( x INTEGER PRIMARY KEY , x , x , x ) ; 
INSERT INTO x VALUES ( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ; 
SELECT printf ( 'y' ) ; 
SELECT printf ( 'y' , 10 , 10 , 10 ) ; 
SELECT printf ( 'y' , 10 , 'y' , 10 ) ; 
SELECT printf ( 'y' , 0.1 ) ; 
SELECT printf ( 'y' , 10 , 0.1 ) ; 
SELECT printf ( 'y' , 10 , 10 , 0.1 ) ; 
SELECT printf ( 'y' , 0.1 , 'y' ) ; 
SELECT printf ( 'y' , 10 ) ; 
SELECT printf ( 'y' , 10 , 'y' ) ; 
SELECT printf ( 'y' , 'y' ) ; 
SELECT printf ( 'y' , x , x , x ) FROM x ORDER BY x ; 
SELECT printf ( 'y' , x , x ) FROM x ORDER BY x ; 
SELECT printf ( 'y' , x ) FROM x ORDER BY x ; 
SELECT printf ( 'y' , 'y' , 'y' ) ; 
SELECT printf ( 'y' , 10 , 10 ) ; 
CREATE TABLE x ( x , x , x CHECK( x != x ) ) ; 
CREATE INDEX x ON x ( x ) WHERE x = x ; 
INSERT INTO x VALUES ( 10 , 'y' , 0.1 ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 'y' , 0.1 ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 'y' , 10 ) ; 
CREATE TABLE x ( x INTEGER , x INTEGER , x INTEGER , x INTEGER , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , NULL , 10 , 10 , 10 ) ; 
INSERT INTO x VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ; 
REINDEX x . x ; 
SELECT x FROM x WHERE x IS NULL ORDER BY 10 ; 
SELECT x FROM x WHERE x IS NULL AND x IN ( 10 , 10 , 10 , 10 , 10 ) ; 
SELECT sum ( x ) , sum ( length ( x ) ) FROM x ; 
UPDATE x SET x = randomblob ( 10 ) WHERE x = 10 ; 
SELECT 10 AS y FROM x , x ORDER BY x ; 
SELECT 10 AS yy FROM x , x ORDER BY x ; 
SELECT x AS y FROM x ORDER BY x ; 
SELECT x AS yy FROM x ORDER BY x ; 
SELECT x AS yy FROM x ORDER BY 10 ; 
SELECT 'y' , substr ( x , 10 ) AS m FROM x ORDER BY x ; 
SELECT 'y' , substr ( x , 10 ) AS m FROM x ORDER BY lower ( x ) ; 
CREATE TABLE x ( x CHAR(2) ) ; 
SELECT count ( * ) , substr ( x , 10 , 10 ) AS m FROM x GROUP BY x ORDER BY 10 , 10 ; 
SELECT count ( * ) , substr ( x , 10 , 10 ) AS mx FROM x GROUP BY x ORDER BY 10 , 10 ; 
SELECT min ( x ) FROM x GROUP BY lower ( x ) ; 
SELECT min ( x ) AS name FROM x GROUP BY lower ( x ) ; 
SELECT 10 AS x WHERE ( SELECT x AS y WHERE 10 > x ) ; 
CREATE TABLE x ( x UNIQUE ON CONFLICT ROLLBACK ) ; 
SELECT x FROM x WHERE ( x % 10 ) == 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE ( x % 10 ) == 10 ORDER BY x ASC ; 
SELECT x FROM x WHERE x = 'y' OR x = 'y' OR x = 'y' ; 
SELECT x , * FROM x WHERE x > 10 ; 
SELECT x FROM x WHERE x NOT IN ( 10 , 10 , 10 , 10 , 10 ) ; 
SELECT x FROM x WHERE x NOT IN ( 10 , 10 , 10 , 10 , 10 ) ORDER BY x ; 
INSERT INTO x ( x , x ) SELECT - x , x FROM x ; 
SELECT count ( * ) FROM x WHERE x == 'y' ; 
SELECT x , x , addrow ( x + 10 ) , 'y' FROM x LIMIT 10 ; 
SELECT * FROM x WHERE x < 'y' ORDER BY x ASC ; 
SELECT * FROM x WHERE x < 'y' ORDER BY x DESC ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , NULL ) ; 
CREATE TABLE x ( x ) ; INSERT INTO x ( x ) VALUES ( 'y' ) ; 
CREATE TABLE x ( x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT ) ; 
CREATE INDEX x ON x ( x , x , x , x , x ) ; 
UPDATE x SET x = ( SELECT * FROM SELECT x , 10 ) < 10 ; 
UPDATE x SET x = NULL WHERE x < ( SELECT * FROM SELECT x , 10 ) ; 
DELETE FROM x WHERE x < ( SELECT * FROM SELECT x , 10 ) ; 
UPDATE x SET x = x WHERE x = 10 ; 
SELECT ( SELECT 10 , 10 UNION SELECT 10 , 10 ORDER BY 10 ) IN ( SELECT 10 , 10 ) ; 
SELECT ( SELECT 10 , 10 UNION SELECT 10 , 10 ORDER BY 10 DESC ) IN ( SELECT 10 , 10 ) ; 
CREATE TABLE x ( x INTEGER , x INTEGER , x INTEGER , x INTEGER ) ; 
INSERT INTO x VALUES ( NULL , NULL , 10 ) ; 
CREATE TABLE x ( x TEXT , x INTEGER ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , NULL , 10 ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , NULL ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 10 , 'y' , 'y' , 10 , 10 ) ; 
CREATE TABLE x ( x TEXT PRIMARY KEY , x INT ) ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 10 , 'y' , 10 , 10 ) ; 
SELECT x FROM x WHERE x = ( SELECT x FROM x WHERE x = x ) ; 
SELECT x FROM x WHERE x IN ( SELECT 10 + x FROM x ) ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
CREATE VIRTUAL TABLE x USING echo ( t1 ) ; 
ROLLBACK TO SAVEPOINT x ; 
ROLLBACK TRANSACTION TO x ; 
ROLLBACK TRANSACTION TO SAVEPOINT x ; 
UPDATE x SET x = x CONCAT randstr ( 10 , 10 ) ; 
INSERT OR ROLLBACK INTO x VALUES ( 10 , 'y' ) ; 
UPDATE x SET x = randstr ( 10 , 10 ) WHERE random () % 10 ; 
INSERT INTO x SELECT x FROM x WHERE random () % 10 ; 
DELETE FROM x WHERE random () % 10 ; 
INSERT INTO x SELECT randstr ( 10 , 10 ) FROM x WHERE ( random () % 10 == 10 ) ; 
UPDATE x SET x = 'y' , x = 'y' ; 
SELECT * FROM x ORDER BY 10 , 10 DESC ; 
SELECT * FROM x ORDER BY 10 DESC , x ; 
SELECT * FROM x ORDER BY x DESC , 10 ; 
SELECT x , x FROM x AS x , x AS y ; 
SELECT x FROM x , x ; 
SELECT x FROM x AS x , x ; 
SELECT 10 , 10 UNION SELECT * FROM x ; 
SELECT * FROM x WHERE x = ( SELECT 10 ) ; 
SELECT x FROM SELECT x AS x , x AS y FROM x UNION SELECT x , x FROM x ORDER BY x , x ORDER BY x ; 
INSERT INTO x SELECT x + ( SELECT max ( x ) FROM x ) , x + ( SELECT max ( x ) FROM x ) , x + ( SELECT max ( x ) FROM x ) FROM x ; 
SELECT count ( ( SELECT x FROM x WHERE x = NULL AND x >= x ) ) FROM x AS upper ; 
SELECT * FROM x WHERE x <= 10 ; 
SELECT 10 IN ( SELECT x FROM x ) ; 
SELECT * FROM x , SELECT * FROM x WHERE x = 10 ORDER BY x , x ; 
SELECT * FROM x , SELECT * FROM x WHERE x = 10 ORDER BY x , x LIMIT 10 ; 
SELECT * FROM x , SELECT * FROM x WHERE x = 10 UNION ALL SELECT * FROM x WHERE x = 10 ORDER BY x , x LIMIT 10 ; 
SELECT * FROM x , x WHERE max ( x , x ) > 10 ; 
SELECT * FROM x CROSS JOIN x WHERE x ; 
SELECT * FROM x CROSS JOIN x WHERE NOT x ; 
SELECT * FROM x , x WHERE min ( x , x ) ; 
SELECT * FROM x , x WHERE NOT min ( x , x ) ; 
SELECT x , count ( * ) FROM x GROUP BY 10 ORDER BY x ; 
SELECT x , min ( x ) FROM x GROUP BY x ORDER BY x DESC ; 
SELECT x , min ( x ) FROM x GROUP BY x ORDER BY 10 ; 
SELECT x , min ( x ) FROM x GROUP BY x ORDER BY 10 DESC ; 
SELECT x , min ( x ) FROM x GROUP BY x ORDER BY x ; 
SELECT x , sum ( x ) FROM x WHERE x = 10 GROUP BY x ; 
SELECT x , sum ( x ) FROM x WHERE x = 10 ; 
SELECT typeof ( sum ( x ) ) FROM x ; 
SELECT typeof ( sum ( x ) ) FROM x GROUP BY x ; 
SELECT DISTINCT * FROM x WHERE ( x IS NULL ) ; 
SELECT 10 AS x ORDER BY ( SELECT x ORDER BY 10 ) ; 
SELECT * FROM SELECT NULL , 10 UNION ALL SELECT NULL , 10 ; 
SELECT DISTINCT * FROM SELECT NULL , 10 UNION ALL SELECT NULL , 10 ; 
SELECT DISTINCT * FROM SELECT 10 , 10 UNION ALL SELECT 10 , 10 ; 
CREATE TABLE x ( x TEXT , x FLOAT , x TEXT ) ; 
SELECT * FROM SELECT 10 , SELECT 10 ON likely ( 10 OR 10 ) OR 10 ; 
SELECT x FROM x GROUP BY x ; 
SELECT x FROM x WHERE x > 10 GROUP BY x ; 
SELECT x , x FROM x GROUP BY x , x ; 
SELECT x , x FROM x GROUP BY x ; 
SELECT x , count ( x ) FROM x , x WHERE x = x GROUP BY x ORDER BY x ; 
SELECT x , count ( x ) FROM x , x WHERE x < x GROUP BY x ORDER BY x ; 
SELECT x , count ( x ) FROM x , x WHERE x = x GROUP BY x ORDER BY 10 ; 
SELECT x , count ( x ) FROM x , x GROUP BY x ORDER BY 10 ; 
SELECT x , count ( * ) FROM x , x GROUP BY x ORDER BY 10 ; 
SELECT x FROM SELECT x FROM x LIMIT 10 OFFSET 10 ; 
SELECT x FROM SELECT x FROM x LIMIT 10 ; 
SELECT x FROM SELECT x FROM x LIMIT 10 LIMIT 10 ; 
SELECT * FROM SELECT * FROM x , x ; 
CREATE TABLE x ( x INT , x VARCHAR(8) ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ,( 10 , 'y' ) ; 
SELECT x , x , ( SELECT x FROM x WHERE x = x ) , 'y' FROM SELECT count ( * ) AS cnt , x AS xyz FROM x GROUP BY 10 ORDER BY x , x ; 
SELECT x , x , lower ( ( SELECT x FROM x WHERE x = x ) ) , 'y' FROM SELECT count ( * ) AS cnt , x AS xyz FROM x GROUP BY 10 ORDER BY x , x ; 
SELECT x , x , 'y' FROM SELECT count ( * ) AS cnt , x AS xyz FROM x GROUP BY 10 WHERE ( SELECT x FROM x WHERE x = x ) != 'y' ORDER BY x , x ; 
SELECT x , x , 'y' FROM SELECT count ( * ) AS cnt , x AS xyz FROM x GROUP BY 10 ORDER BY lower ( ( SELECT x FROM x WHERE x = x ) ) ; 
SELECT ( SELECT x FROM x WHERE x = x ) FROM SELECT count ( * ) AS cnt FROM x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT NULL ) ; 
CREATE VIEW x AS SELECT * FROM x UNION SELECT * FROM x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INT , x ) ; 
SELECT 10 IN ( SELECT x , x FROM x ) ; 
SELECT 10 IN ( SELECT * FROM x ) ; 
SELECT 10 IN ( SELECT x , x FROM x UNION SELECT x , x FROM x ) ; 
SELECT 10 IN ( SELECT * FROM x UNION SELECT * FROM x ) ; 
SELECT ( CASE WHEN x = 10 THEN 'y' ELSE x / 10 END ) AS t FROM x GROUP BY x ; 
CREATE TABLE x ( x TEXT , x INT ) ; 
SELECT typeof ( x ) , x FROM x GROUP BY x HAVING x < x ; 
SELECT lower ( ( SELECT x FROM x UNION ALL SELECT x FROM x ORDER BY 10 ) ) ; 
SELECT lower ( ( SELECT x FROM x INTERSECT SELECT x FROM x ORDER BY 10 ) ) ; 
SELECT lower ( ( SELECT x FROM x EXCEPT SELECT x FROM x ORDER BY 10 ) ) ; 
SELECT * FROM SELECT x FROM x UNION SELECT x FROM x WHERE x = x ; 
SELECT DISTINCT * FROM SELECT x FROM x UNION ALL SELECT x FROM x ORDER BY 10 ; 
SELECT x , count ( * ) FROM SELECT x FROM x UNION ALL SELECT x FROM x GROUP BY x ORDER BY 10 ; 
SELECT x , count ( * ) FROM SELECT x FROM x UNION ALL SELECT x FROM x GROUP BY x HAVING count ( * ) > 10 ; 
SELECT x , count ( ( NOT ( x IS NULL ) ) AND ( NOT ( x IS NULL ) ) ) FROM x WHERE ( CASE WHEN x != 'y' THEN 10 ELSE 10 END ) GROUP BY 10 ; 
SELECT x , max ( x CONCAT x ) FROM x WHERE ( x CONCAT x CONCAT x ) != 'y' GROUP BY x ; 
CREATE VIEW x AS SELECT x FROM x ORDER BY 10 ; 
CREATE TABLE x AS SELECT x FROM x UNION ALL SELECT x FROM x ; 
SELECT count ( * ) , max ( length ( x ) ) FROM x ; 
CREATE VIEW x AS SELECT * FROM x , x WHERE x = x GROUP BY x ORDER BY x ; 
INSERT INTO x ( x ) SELECT NULL FROM x ; 
UPDATE x SET x = x , x = 'y' ; 
CREATE VIEW x AS SELECT x , roman ( x ) FROM x ; 
SELECT count ( * ) , sum ( x ) FROM x ; 
CREATE TABLE x ( x TEXT , x INT , x INT , x INT ) ; 
INSERT INTO x VALUES ( 'y' , 10 , 10 , 10 ) ; 
SELECT x , x , x , x , 'y' FROM x WHERE x = 10 ORDER BY x ; 
SELECT x , x , x , x , 'y' FROM x WHERE x != 10 AND x = 10 ORDER BY x DESC ; 
SELECT x , x , x , x , 'y' FROM x WHERE x = 10 ORDER BY x , x , x ; 
SELECT x , x , x , x , 'y' FROM x WHERE x IN ( 10 , 10 ) ORDER BY x , x , x ; 
SELECT x , x , x , x , 'y' FROM x WHERE x BETWEEN 10 AND 10 ORDER BY x , x , x ; 
SELECT x , x , x , x , 'y' FROM x WHERE x IN ( 10 , 10 ) AND x BETWEEN 10 AND 10 ORDER BY x , x ; 
SELECT x , x , x , x , 'y' FROM x WHERE x != 10 AND x = 10 ORDER BY x ; 
CREATE INDEX x ON x ( x , x , x , x , x , x , x , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT , x INTEGER , x INTEGER , x INTEGER , x INTEGER , x INTEGER ) ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x VARCHAR(300) ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , NULL ) ; 
SELECT DISTINCT quote ( x ) , quote ( x ) , quote ( x ) , quote ( x ) , 'y' FROM x WHERE x = 10 ; 
INSERT INTO x ( x , x , x ) SELECT x , x , x FROM x ; 
SELECT x FROM x WHERE x = 10 AND x = 10 ; 
INSERT INTO x VALUES ( 10 , 'y' , 10 , 'y' , 0.1 ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 10 , 'y' , 10 ) ; 
UPDATE x SET x = 'y' CONCAT - x ; 
UPDATE x SET x = 'y' WHERE x == 'y' ; 
SELECT x FROM x ORDER BY substr ( x , 10 , 10 ) ; 
SELECT x FROM x ORDER BY substr ( x , 10 , 10 ) + 0.1 ; 
SELECT x FROM x ORDER BY substr ( x , 10 , 10 ) DESC ; 
SELECT x FROM x ORDER BY substr ( x , 10 , 10 ) + 0.1 DESC ; 
SELECT x , x FROM x ORDER BY x DESC ; 
SELECT x CONCAT 'y' FROM x ORDER BY 10 DESC ; 
SELECT x + 10 FROM x ORDER BY 10 DESC ; 
SELECT x FROM x ORDER BY 10 DESC ; 
SELECT substr ( x , 10 , 10 ) FROM x ORDER BY 10 ; 
SELECT x FROM x ORDER BY x , x DESC ; 
SELECT x FROM x ORDER BY x DESC , x ; 
SELECT x FROM x ORDER BY x DESC , x DESC ; 
CREATE TABLE x ( x INTEGER , x VARCHAR(30) ) ; 
SELECT x FROM x WHERE x <= 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x < 10 ORDER BY x DESC ; 
SELECT x FROM x , x WHERE x = 10 ORDER BY x , x ; 
CREATE UNIQUE INDEX x ON x ( x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 'y' ) ; 
SELECT * FROM x LEFT JOIN x ON ( x = x ) ORDER BY x ; 
SELECT next_char ( 'y' , 'y' , 'y' ) ; 
SELECT next_char ( 'y' , 'y' , 'y' , NULL , 'y' ) ; 
SELECT next_char ( 'y' , 'y' , 'y' , NULL , NULL ) ; 
SELECT x , x , x FROM x WHERE x MATCH 'y' ORDER BY x LIMIT 10 ; 
CREATE VIRTUAL TABLE x USING spellfix1 ; 
SELECT x , x FROM x WHERE x MATCH 'y' LIMIT 10 ; 
SELECT x , x FROM x WHERE x = 10 ; 
SELECT x , x FROM x WHERE x = 10 AND x MATCH 'y' ; 
INSERT OR REPLACE INTO x ( x , x ) VALUES ( 10 , 'y' ) ; 
INSERT OR ABORT INTO x ( x , x ) VALUES ( 10 , 'y' ) ; 
INSERT OR ROLLBACK INTO x ( x , x ) VALUES ( 10 , 'y' ) ; 
INSERT OR FAIL INTO x ( x , x ) VALUES ( 10 , 'y' ) ; 
INSERT OR IGNORE INTO x ( x , x ) VALUES ( 10 , 'y' ) ; 
SELECT count ( * ) FROM x WHERE x MATCH 'y' AND x <= 10 ; 
SELECT x , x , x FROM x WHERE x MATCH 'y' AND x <= 10 ORDER BY x , x ; 
SELECT spellfix1_scriptcode ( 'y' ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ; 
SELECT editdist3 ( 'y' ) ; 
SELECT editdist3 ( 'y' , 'y' ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ,( 10 , 'y' , 'y' , 10 ) ; 
INSERT INTO x VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ; 
SELECT * FROM x WHERE x = 10 ORDER BY x ; 
UPDATE x SET x = x CONCAT hex ( randomblob ( 10 ) ) ; 
SELECT * , 'y' FROM x WHERE x = 10 ORDER BY x ; 
SELECT x , quote ( x ) , x , quote ( x ) , x , x , x , x , 'y' FROM x 'y' , 10 ; 
SELECT * FROM x 'y' ; 
SELECT * FROM x 10 ; 
SELECT x , x FROM x ORDER BY 10 ; 
SELECT x , x , x FROM x WHERE x LIKE 'y' AND NOT x ; 
SELECT count ( * ) FROM x WHERE NOT x ; 
SELECT count ( * ) FROM x WHERE x > 10 ; 
SELECT * FROM x WHERE NOT x ; 
SELECT x , x FROM x , x WHERE x = ( SELECT x ) ; 
SELECT count ( * ) FROM x WHERE x > ( SELECT count ( * ) FROM x ) ; 
SELECT ( x * 10 ) > x FROM x , x WHERE x = x ; 
SELECT x FROM x WHERE ( SELECT ( x * 10 ) > x FROM x WHERE x = x ) ; 
SELECT ( SELECT x ) , x FROM x ; 
SELECT * FROM SELECT ( SELECT x ) , x FROM x ; 
SELECT * FROM SELECT ( SELECT sum ( x ) FROM x ) ; 
CREATE TABLE x ( x INT , x TEXT PRIMARY KEY ) ; 
SELECT ( SELECT 10 ) ; 
SELECT x IN ( 0.1 , 10 ) FROM x ; 
CREATE VIEW x AS SELECT x FROM x WHERE x > 10 ; 
SELECT * FROM x WHERE EXISTS ( SELECT * FROM x WHERE x = x ) ; 
SELECT * FROM x WHERE EXISTS ( SELECT 10 ) ; 
SELECT ( SELECT x ) FROM x ; 
SELECT x , ( SELECT x ) FROM x GROUP BY x ; 
SELECT x , ( SELECT x FROM x WHERE x = x ) FROM x GROUP BY x ; 
SELECT max ( x ) , ( SELECT x FROM x WHERE x = x ) FROM x ; 
SELECT x , ( SELECT ( SELECT x FROM x WHERE x = x ) ) FROM x GROUP BY x ; 
SELECT x , ( SELECT count ( * ) FROM x WHERE x = x ) FROM x ; 
CREATE TABLE x ( x ) ; INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 10 ) ; 
CREATE TABLE x ( x ) ; INSERT INTO x VALUES ( 10 ) ,( 10 ) ; 
SELECT max ( ( SELECT avg ( x ) FROM x ) ) FROM x ; 
SELECT max ( ( SELECT count ( x ) FROM x ) ) FROM x ; 
SELECT max ( ( SELECT count () FROM x ) ) FROM x ; 
SELECT max ( ( SELECT x FROM SELECT count ( x ) AS a FROM x ) ) FROM x ; 
SELECT ( SELECT x FROM x ) ; 
SELECT ( SELECT 10 FROM SELECT * FROM x ) AS x WHERE x ; 
SELECT ( SELECT 10 FROM SELECT * FROM SELECT 10 ) AS x WHERE x ; 
SELECT x FROM SELECT x , x FROM SELECT * FROM x UNION ALL SELECT * FROM x WHERE x = 10 ORDER BY x ; 
SELECT x FROM SELECT 'y' , x FROM SELECT x FROM x UNION ALL SELECT x FROM x ORDER BY x ; 
SELECT x , x FROM SELECT x , x FROM SELECT * FROM x UNION ALL SELECT * FROM x ORDER BY x ; 
SELECT ( SELECT x FROM x WHERE x = x ORDER BY x , x ) FROM x ; 
SELECT 10 IN ( SELECT x FROM x ORDER BY x DESC ) ; 
INSERT INTO x SELECT x FROM x UNION ALL SELECT x FROM x ; 
SELECT sum ( x ) FROM SELECT x FROM x ORDER BY x LIMIT 10 ; 
SELECT sum ( x ) FROM SELECT x FROM x ORDER BY x DESC LIMIT 10 ; 
SELECT ( SELECT x FROM x ORDER BY x ) ; 
SELECT ( SELECT x FROM x ORDER BY x DESC ) ; 
SELECT ( SELECT x FROM x ORDER BY x LIMIT 10 ) ; 
SELECT ( SELECT x FROM x ORDER BY x DESC LIMIT 10 ) ; 
SELECT ( SELECT x FROM x ORDER BY x LIMIT 10 OFFSET 10 ) ; 
SELECT ( SELECT x FROM x ORDER BY x DESC LIMIT 10 OFFSET 10 ) ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x ORDER BY x DESC LIMIT 10 OFFSET 10 ) ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x ORDER BY x ) ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x ORDER BY x LIMIT 10 ) ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x ORDER BY x DESC LIMIT 10 ) ; 
SELECT test_getsubtype ( test_setsubtype ( 'y' , 10 ) ) ; 
SELECT typeof ( test_setsubtype ( 'y' , 10 ) ) ; 
SELECT test_setsubtype ( 'y' , 10 ) ; 
CREATE TABLE x . x ( x INTEGER PRIMARY KEY , x TEXT ) ; 
INSERT INTO x . x SELECT * FROM x WHERE x BETWEEN 10 AND 10 ; 
INSERT INTO x VALUES ( 'y' , 'y' , 10 , 10 ) ; 
SELECT * FROM x WHERE x BETWEEN 10 AND 10 ; 
INSERT INTO x . x VALUES ( 10 , NULL ) ; 
SELECT x FROM x WHERE x BETWEEN 10 AND 10 ORDER BY x ; 
SELECT x FROM x WHERE ( x % 10 ) = 10 ; 
SELECT * , 'y' FROM x WHERE x = 10 AND x = 10 AND x = 10 ; 
SELECT * , 'y' FROM x LIMIT 10 ; 
CREATE VIRTUAL TABLE x USING generate_series ; 
SELECT * FROM x 10 , 10 , 10 ; 
SELECT * FROM x 10 , 10 ; 
SELECT * FROM x 10 , 10 WHERE x = 10 ; 
SELECT * FROM x 10 , 10 , 10 , 10 ; 
SELECT * FROM x 10 , 10 , 10 ORDER BY x DESC ; 
SELECT x , * FROM x 10 , 10 , 10 ORDER BY x DESC ; 
CREATE VIEW x ( x ) AS SELECT x FROM x 10 , 10 ; 
SELECT * FROM x 10 ORDER BY x ; 
SELECT DISTINCT x FROM x 10 , x , x ORDER BY 10 ; 
SELECT typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) FROM x LIMIT 10 ; 
SELECT typeof ( x + x ) , typeof ( x CONCAT x ) , typeof ( x + x ) , typeof ( x CONCAT x ) FROM x LIMIT 10 ; 
CREATE TABLE x AS SELECT x , x , x AS i , ( SELECT x FROM x ) AS j FROM x ; 
SELECT x , x , x FROM x WHERE x = 10 ; 
INSERT INTO x SELECT x * 10 , x * 10 FROM x ; 
INSERT INTO x SELECT x * 10 + 10 , x * 10 + 10 FROM x ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , NULL ) ,( 10 , 'y' ) ; 
SELECT quote ( add_i ( 10 , 10 ) ) ; 
SELECT quote ( add_r ( 10 , 10 ) ) ; 
SELECT quote ( add_t ( 10 , 10 ) ) ; 
SELECT quote ( add_b ( 10 , 10 ) ) ; 
SELECT quote ( add_a ( 10 , 10 ) ) ; 
SELECT quote ( add_i ( 0.1 , 0.1 ) ) ; 
SELECT quote ( add_r ( 0.1 , 0.1 ) ) ; 
SELECT quote ( add_t ( 0.1 , 0.1 ) ) ; 
SELECT quote ( add_b ( 0.1 , 0.1 ) ) ; 
SELECT quote ( add_a ( 0.1 , 0.1 ) ) ; 
SELECT quote ( ret_i ( 0.1 ) ) ; 
SELECT quote ( ret_r ( 0.1 ) ) ; 
SELECT quote ( ret_t ( 0.1 ) ) ; 
SELECT quote ( ret_b ( 0.1 ) ) ; 
SELECT quote ( ret_a ( 0.1 ) ) ; 
SELECT quote ( ret_i ( 'y' ) ) ; 
SELECT quote ( ret_r ( 'y' ) ) ; 
SELECT quote ( ret_t ( 'y' ) ) ; 
SELECT quote ( ret_b ( 'y' ) ) ; 
SELECT quote ( ret_a ( 'y' ) ) ; 
UPDATE x SET x = int2str ( 10 ) ; 
SELECT x = int2str ( 10 ) FROM x ; 
UPDATE x SET x = int2str ( x + 10 ) ; 
DELETE FROM x WHERE ( random () % 10 ) == 10 ; 
CREATE TEMP TRIGGER x BEFORE INSERT ON x BEGIN SELECT 10 , 10 , 10 ; END ; 
SELECT x , x , x , x FROM x . x ; 
SELECT * FROM SELECT x FROM x LIMIT 10 UNION ALL SELECT 10 ; 
CREATE VIEW x ( x , x ) AS SELECT DISTINCT x , 'y' FROM x ; 
SELECT count ( * ) FROM x WHERE x >= x ; 
SELECT count ( * ) FROM x WHERE NOT NOT ( x >= x ) ; 
SELECT count ( * ) FROM x WHERE ( ( x >= x ) OR 10 + 10 ) ; 
INSERT INTO x SELECT NULL , x CONCAT x FROM x ; 
CREATE TABLE x ( x INT PRIMARY KEY , x , x ) ; 
SELECT ( SELECT 10 FROM SELECT 10 FROM x WHERE x = 10 OR x = 'y' WHERE x = 'y' OR x IN ( SELECT x = ( 'y' IN ( SELECT 'y' ) ) ) ) FROM x ; 
CREATE TABLE x ( x TEXT UNIQUE , x TEXT UNIQUE , x ) ; 
SELECT * FROM x WHERE ( x = 'y' OR x = 'y' ) AND x IS NOT NULL ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT x FROM x WHERE x IN ( 10 , 10 , 10 ) ORDER BY x ASC ; 
SELECT x FROM x WHERE x IN ( 10 , 10 , 10 ) ORDER BY x DESC ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT x , x FROM x WHERE x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x ASC , x ASC ; 
SELECT x , x FROM x WHERE x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x ASC , x DESC ; 
SELECT x , x FROM x WHERE x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x DESC , x ASC ; 
SELECT x , x FROM x WHERE x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x DESC , x DESC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x , x ASC , x ASC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x ASC , x ASC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x , x ASC , x DESC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x ASC , x DESC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x , x DESC , x ASC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x DESC , x ASC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x , x DESC , x DESC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( 10 , 10 , 10 ) ORDER BY x DESC , x DESC ; 
SELECT x , x FROM x WHERE x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x ASC , x ASC ; 
SELECT x , x FROM x WHERE x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x ASC , x DESC ; 
SELECT x , x FROM x WHERE x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x DESC , x ASC ; 
SELECT x , x FROM x WHERE x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x DESC , x DESC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x , x ASC , x ASC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x ASC , x ASC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x , x ASC , x DESC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x ASC , x DESC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x , x DESC , x ASC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x DESC , x ASC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x , x DESC , x DESC ; 
SELECT x , x , x FROM x , x WHERE x = 10 AND x = 10 AND x IN ( SELECT x FROM x ) ORDER BY x DESC , x DESC ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x ) ORDER BY x ASC ; 
SELECT x FROM x WHERE x IN ( SELECT x FROM x ) ORDER BY x DESC ; 
SELECT 'y' , x , ( SELECT count ( * ) FROM x JOIN SELECT DISTINCT x AS p FROM x AS x ON x = x ) FROM x ; 
SELECT ( SELECT x FROM SELECT * FROM x WHERE x = x ORDER BY x LIMIT 10 OFFSET 10 WHERE x = x ) FROM x AS out ; 
CREATE TABLE x ( x VARCHAR(1) PRIMARY KEY , x INTEGER NOT NULL ) ; 
SELECT DISTINCT x FROM SELECT x , x FROM x ORDER BY x , x LIMIT 10 AS test ; 
SELECT x FROM x JOIN x ON x = x AS x JOIN x ON x = x AS y ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 'y' ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x VARCHAR(36) , x INTEGER ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x VARCHAR(36) ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 , 10 ) ; 
SELECT x / 10 , x / 10 FROM x ; 
SELECT x / 10 , x / 10 FROM SELECT * FROM x ; 
SELECT x / 10 , x / 10 FROM SELECT * FROM x LIMIT 10 OFFSET 10 ; 
SELECT x / 10 , x / 10 FROM SELECT * FROM x LIMIT 10 OFFSET 10 LIMIT 10 OFFSET 10 ; 
SELECT x / 10 , x / 10 FROM x AS a , x AS b WHERE x = x LIMIT 10 OFFSET 10 ; 
SELECT x FROM x WHERE x IN ( 0.1 ) ; 
SELECT x FROM x WHERE 10 IN ( x ) ; 
SELECT x FROM x WHERE 0.1 IN ( x ) ; 
SELECT x FROM x WHERE 'y' IN ( x ) ; 
SELECT x , x FROM x WHERE x IN ( 10 ) ; 
SELECT x , x FROM x WHERE x IN ( 0.1 ) ; 
SELECT x , x FROM x WHERE x IN ( 'y' ) ; 
SELECT x , x FROM x WHERE 10 IN ( x ) ; 
SELECT x , x FROM x WHERE 0.1 IN ( x ) ; 
SELECT x , x FROM x WHERE 'y' IN ( x ) ; 
SELECT * FROM x WHERE x = AND x = AND x = AND x = AND x = ; 
DELETE FROM x WHERE x = 10 AND x = 10 AND x = 10 AND x = 10 AND x = 10 AND x = 10 ; 
SELECT x == x FROM SELECT x , 'y' AS xyz FROM x , x ; 
SELECT 'y' == x FROM SELECT x , 'y' AS xyz FROM x , x ; 
SELECT SUM ( x ) FROM SELECT x BETWEEN x AND x AS count FROM x ; 
SELECT x BETWEEN x AND x AS count FROM x ; 
SELECT typeof ( x ) , typeof ( x ) FROM x WHERE 10 = x + 10 AND x == 'y' ; 
SELECT typeof ( x ) , typeof ( x ) FROM x WHERE 10 = x * 10 AND x == 'y' ; 
SELECT typeof ( x ) , typeof ( x ) FROM x WHERE 10 = x / 10 AND x == 'y' ; 
SELECT typeof ( x ) , typeof ( x ) FROM x WHERE 10 = x % 10 AND x == 'y' ; 
SELECT 10 + 0.1 ; 
SELECT 'y' / 'y' ; 
SELECT 'y' + 'y' ; 
SELECT 'y' - 'y' ; 
SELECT 'y' / 'y' , 'y' / 'y' , 'y' / 'y' ; 
INSERT INTO x SELECT x , CASE x WHEN 'y' THEN NULL ELSE x END FROM x ; 
INSERT INTO x SELECT x , coalesce ( x , x ) FROM x ; 
SELECT x , x BETWEEN 'y' AND 'y' FROM x ORDER BY x ; 
SELECT * FROM x GROUP BY x ORDER BY x ; 
SELECT * FROM x GROUP BY x ORDER BY x ASC ; 
SELECT * FROM x GROUP BY x ORDER BY x DESC ; 
SELECT DISTINCT x AS x , x AS y FROM x , x ; 
SELECT count ( * ) FROM x , x GROUP BY x , x ; 
SELECT x , force_rollback () , EXISTS ( SELECT 10 FROM x WHERE x = x ) FROM x ; 
SELECT ins () AS x FROM x UNION ALL SELECT ins () AS x FROM x ; 
SELECT count ( CASE WHEN x = 'y' THEN 10 END ) , count ( CASE WHEN x = 'y' THEN 10 END ) FROM x ; 
INSERT INTO x SELECT randomblob ( 10 ) , randomblob ( 10 ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 10 , 10 , 0.1 , 10 , 10 ) ; 
INSERT INTO x VALUES ( NULL , 'y' , 'y' , 'y' ) ; 
CREATE TABLE x ( x INTEGER , x INTEGER , x INTEGER ) ; 
CREATE TABLE x ( x INTEGER , x INTEGER NOT NULL , x INTEGER NOT NULL , x INTEGER , x INTEGER , x INTEGER ) ; 
CREATE VIEW x AS SELECT * FROM x ORDER BY x ; 
SELECT * FROM x UNION ALL SELECT * FROM x ORDER BY 10 ; 
SELECT count ( * ) , sum ( x ) , sum ( x ) FROM x ; 
SELECT x FROM x WHERE max ( x ) < 10 GROUP BY x ; 
SELECT typeof ( x ) , typeof ( x ) FROM x ; 
SELECT * FROM x LEFT JOIN x ON x = x OR x = x ; 
SELECT * FROM x LEFT JOIN x ON x IN ( x , x ) ; 
SELECT * FROM x LEFT JOIN x ON x BETWEEN x AND x ; 
SELECT * FROM x LEFT JOIN x ON x GLOB 'y' WHERE x = 10 ; 
UPDATE x SET x = x CONCAT 'y' WHERE x % 10 == 10 ; 
UPDATE x SET x = CASE WHEN x < 10 THEN substr ( x , 10 , 10 ) ELSE 'y' END ; 
SELECT tkt2213func ( tkt2213func ( 'y' ) ) ; 
SELECT avg ( x ) , typeof ( avg ( x ) ) FROM x ; 
SELECT sum ( x ) , typeof ( sum ( x ) ) FROM x ; 
SELECT x , sum ( x ) , typeof ( sum ( x ) ) FROM x GROUP BY x ORDER BY x ; 
SELECT x , typeof ( x ) FROM x WHERE x = 10 ; 
SELECT count ( * ) FROM x WHERE x < 'y' ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x UNIQUE , x ) ; 
SELECT count ( * ) FROM x WHERE x IS NOT NULL 
SELECT x , x , x FROM x UNION ALL SELECT x , x , x FROM x ORDER BY 10 ; 
SELECT x , CAST ( x AS TEXT ) , x FROM x UNION ALL SELECT x , x , x FROM x ORDER BY 10 ; 
SELECT x , x , x FROM x UNION ALL SELECT x , x , x FROM x ORDER BY x ; 
SELECT x , CAST ( x AS TEXT ) AS x , x FROM x UNION ALL SELECT x , x , x FROM x ORDER BY x ; 
SELECT x , CAST ( x AS TEXT ) AS x , x FROM x UNION ALL SELECT x , x , x FROM x ORDER BY CAST ( x AS TEXT ) ; 
SELECT x , x , x FROM x UNION ALL SELECT x AS x , x , x FROM x ORDER BY x ; 
SELECT x AS b , CAST ( x AS TEXT ) AS a , x FROM x UNION ALL SELECT x , x , x FROM x ORDER BY x ; 
SELECT x , x , x FROM x UNION ALL SELECT x AS b , CAST ( x AS TEXT ) AS a , x FROM x ORDER BY x ; 
SELECT x AS b FROM x ORDER BY x ; 
SELECT * FROM x ORDER BY 10 , 10 , 10 ; 
SELECT * FROM x ORDER BY 10 , 10 , 10 , 10 ; 
SELECT * FROM x ORDER BY 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ; 
SELECT * FROM x ORDER BY 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ; 
SELECT * FROM x ORDER BY 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ; 
SELECT * FROM x ORDER BY 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ; 
SELECT * FROM x ORDER BY 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ; 
SELECT group_concat ( x ) FROM SELECT x FROM x ORDER BY x DESC ; 
SELECT group_concat ( x ) FROM SELECT x FROM x ORDER BY x ; 
SELECT group_concat ( x ) FROM SELECT x FROM x ; 
SELECT execsql ( x ) FROM x WHERE x = 10 ; 
CREATE VIRTUAL TABLE x USING echo ( t2 ) ; 
CREATE VIRTUAL TABLE x USING echo ( r1 ) ; 
CREATE VIRTUAL TABLE x USING echo ( r2 ) ; 
SELECT x , x FROM x AS l , x AS r WHERE x < x ; 
CREATE VIEW x AS SELECT x AS x , x + 10 AS y FROM x ; 
SELECT * , ( SELECT x FROM SELECT x AS z FROM x WHERE x = x + 10 ) FROM x ; 
SELECT x FROM SELECT x FROM x ORDER BY x LIMIT 10 WHERE x = 10 ; 
SELECT count ( * ) FROM SELECT x FROM x ORDER BY x LIMIT 10 WHERE x = 10 ; 
SELECT x FROM SELECT x FROM x ORDER BY x WHERE x = 10 ; 
SELECT count ( * ) FROM SELECT x FROM x ORDER BY x WHERE x = 10 ; 
SELECT x FROM SELECT x FROM x WHERE x = 10 ; 
SELECT count ( * ) FROM SELECT x FROM x WHERE x = 10 ; 
SELECT * FROM SELECT * FROM x WHERE 10 = x AS x ; 
SELECT * FROM x , x , x WHERE x = 10 AND x = x AND x = x ; 
CREATE TABLE x ( x INTEGER , x TEXT , x TEXT ) ; 
SELECT x FROM x WHERE x = 'y' LIMIT 10 ; 
SELECT x FROM x WHERE x = x LIMIT 10 ; 
SELECT x FROM x WHERE x = 10 LIMIT 10 ; 
CREATE TABLE x ( x INTEGER NOT NULL , x INTEGER ) ; 
SELECT x , CASE WHEN x = 10 THEN 'y' ELSE x END AS col1 FROM x ; 
SELECT DISTINCT x , CASE WHEN x = 10 THEN 'y' ELSE x END AS col1 FROM x ; 
SELECT DISTINCT x , CASE WHEN x = 'y' THEN 'y' ELSE x END AS col1 FROM x ; 
CREATE TABLE x ( x VARCHAR(80) , x VARCHAR(80) , x VARCHAR(80) , x VARCHAR(80) , x INTEGER , x VARCHAR(80) , x VARCHAR(80) , x VARCHAR(80) , x VARCHAR(80) , x VARCHAR(80) , x VARCHAR(80) ) ; 
UPDATE x SET x = x WHERE x = x AND x > x AND x <= x ; 
INSERT INTO x ( x , x ) SELECT x , x FROM x ; 
INSERT INTO x SELECT x + 10 , f1 ( x ) FROM x ; 
INSERT INTO x SELECT x + 10 , sql ( x == 10 , 'y' ) FROM x ; 
INSERT INTO x VALUES ( 10 , 10 , 'y' , 10 ) ; 
SELECT * FROM x JOIN x USING ( b ) ; 
CREATE TABLE x ( x INTEGER NOT NULL , x CHAR(25) NOT NULL , x INTEGER NOT NULL , x VARCHAR(152) ) ; 
CREATE TABLE x ( x INTEGER NOT NULL , x CHAR(25) NOT NULL , x VARCHAR(152) ) ; 
SELECT 10 , 10 , 10 ; 
SELECT sql ( 'y' ) ; 
SELECT * FROM x WHERE x = x AND x = x AND x = 'y' ; 
CREATE TABLE x ( x INTEGER , x INTEGER , x TEXT ) ; 
SELECT * FROM x WHERE x = x AND x = x AND x = 10 ; 
CREATE TABLE x ( x INTEGER UNIQUE , x ) ; 
SELECT 'y' FROM x LEFT JOIN x ON x = x JOIN x ON x = x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER , x DOUBLE , x DOUBLE , x TEXT , x TEXT , x TEXT , x INTEGER ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 'y' , 'y' , 10 , 10 , 'y' , 10 , 10 , NULL ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 'y' , 'y' , NULL , NULL , NULL , NULL , NULL , 'y' ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER , x TEXT , x INTEGER , x TEXT , x TEXT ) ; 
INSERT INTO x VALUES ( 10 , 10 , 'y' , NULL , NULL , 'y' ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , NULL , NULL , NULL , NULL , NULL , NULL ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x VARCHAR(24) , x VARCHAR(24) , x TEXT , x TEXT , x TEXT , x VARCHAR(24) , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x TEXT , x INTEGER ) ; 
INSERT INTO x VALUES ( 10 , 10 , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , NULL , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , NULL , NULL , NULL , 10 ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER , x TEXT , x TEXT , x TEXT ) ; 
SELECT * FROM x WHERE x >= 'y' AND x < 'y' AND x = x ; 
SELECT * FROM x WHERE x = x AND x = 'y' ; 
CREATE TABLE x ( x TEXT , x INTEGER , x TEXT ) ; 
SELECT count ( * ) FROM x WHERE x = 'y' ; 
UPDATE x SET x = 'y' CONCAT x WHERE x = 10 OR x = 10 ; 
CREATE TABLE x . x ( x , x , x , x ) ; 
CREATE TRIGGER x BEFORE UPDATE ON x BEGIN SELECT 10 ; END ; 
CREATE TABLE x ( x TEXT PRIMARY KEY , x ) ; 
UPDATE x SET x = x , x = x + 10 WHERE x = 10 ; 
CREATE TRIGGER x BEFORE UPDATE ON x BEGIN SELECT x ; END ; 
UPDATE x SET x = CASE WHEN x = 10 THEN x ELSE x + 10 END WHERE x = 10 ; 
CREATE TEMP TRIGGER x AFTER INSERT ON x BEGIN UPDATE x SET x = x + 10 ; END ; 
CREATE TABLE x ( x , x , x UNIQUE ) ; 
CREATE UNIQUE INDEX x ON x ( x ) WHERE x ; 
REPLACE INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ; 
DELETE FROM x ; END ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x , x , x , x , x , x , x ) ; 
CREATE VIEW x AS SELECT x , x , x , x FROM x , x ; 
UPDATE x SET x = 10 , x = 10 * 10 WHERE x = 10 ; 
UPDATE x SET x = x + 10 , x = x + 10 , x = x + 10 ; 
CREATE VIEW x ( x , x , x , x ) AS SELECT * FROM x ; 
UPDATE x SET x = x WHERE x = x ; 
UPDATE x SET x = counter ( 10 ) ; 
CREATE TRIGGER x AFTER UPDATE ON x BEGIN SELECT 10 ; END ; 
CREATE TRIGGER x AFTER DELETE ON x BEGIN SELECT 10 ; END ; 
CREATE TRIGGER x BEFORE DELETE ON x BEGIN SELECT 10 ; END ; 
CREATE VIEW x AS SELECT x , x AS c FROM x WHERE x > 'y' ; 
CREATE VIEW x AS SELECT DISTINCT x , x FROM x ; 
CREATE VIEW x AS SELECT x , x FROM x EXCEPT SELECT 10 , 'y' ; 
CREATE VIEW x AS SELECT sum ( x ) AS a , max ( x ) AS b FROM x GROUP BY x HAVING x > 'y' ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INT NOT NULL ) ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' , 'y' ) ; 
SELECT * FROM x ORDER BY x DESC LIMIT 10 ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x UNIQUE , x , x , x ) ; 
CREATE TRIGGER x AFTER UPDATE ON x BEGIN UPDATE x SET x = x + 10 ; END ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 0.1 , 0.1 , 0.1 , 0.1 ) ; 
INSERT INTO x ( x , x , x , x ) VALUES ( NULL , 0.1 , 0.1 , 0.1 ) ; 
UPDATE x SET x = 'y' , x = 'y' , x = 'y' ; 
UPDATE x SET x = 'y' , x = 10 ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 , 10 ) ; 
SELECT x , x , x IS NULL , x IS NULL FROM x ; 
END 
INSERT INTO x SELECT x * 10 + x FROM x WHERE x IN ( 10 , 10 , 10 , 10 ) ; 
SELECT typeof ( x ) , typeof ( x ) , typeof ( x ) , typeof ( x ) FROM x ; 
CREATE TABLE x ( x FLOAT ) ; 
SELECT x ISNULL FROM x ; 
INSERT INTO x VALUES ( NULL , NULL , NULL , NULL , NULL , NULL , NULL , NULL ) ; 
SELECT * FROM x WHERE x IN ( 10 , 10 , 10 ) ; 
INSERT INTO x VALUES ( NULL , 'y' , 10 , 10 ) ; 
CREATE VIRTUAL TABLE x USING unionvtab ( VALUES(NULL, 't1', 1, 100) ) ; 
CREATE VIRTUAL TABLE x . x USING unionvtab ( VALUES('', 't1', 1, 100) ) ; 
CREATE TABLE x . x ( x , x , x INTEGER PRIMARY KEY ) ; 
CREATE TABLE x ( x , x , x INTEGER PRIMARY KEY ) ; 
CREATE TABLE x ( x INT PRIMARY KEY , x INT UNIQUE , x TEXT ) ; 
SELECT * FROM x ORDER BY x , x , x , x ; 
DELETE FROM x WHERE x <= 10 ; 
UPDATE x SET x = 10 , x = 10 WHERE x = 10 ; 
UPDATE x SET x = 10 , x = 10 , x = 10 WHERE x = 10 ; 
UPDATE x SET x = x + 10 WHERE x IN ( SELECT x FROM x ) ; 
SELECT count ( * ) FROM x WHERE x = x ; 
SELECT count ( * ) FROM x WHERE x = x + 10 ; 
UPDATE x SET x = printf ( x , x ) WHERE x IS NULL ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY ON CONFLICT REPLACE , x UNIQUE ) ; 
UPDATE x SET x = x + 10 WHERE x > 10 ; 
UPDATE x SET x = x + 10 WHERE x = 'y' ; 
UPDATE x SET x = x + 10 WHERE x > 10 OR x > 10 ; 
CREATE UNIQUE INDEX x ON x ( x ) WHERE x IS NOT NULL ; 
INSERT INTO x ( x ) VALUES ( NULL ) ,( NULL ) ; 
SELECT quote ( x ) , quote ( x ) , 'y' FROM x ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ON CONFLICT DO NOTHING ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ON CONFLICT DO NOTHING ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ON CONFLICT ( x ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ON CONFLICT ( x COLLATE x ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ON CONFLICT ( x + x ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ON CONFLICT ( x + x ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ON CONFLICT ( x ) ; 
CREATE UNIQUE INDEX x ON x ( x ) WHERE x > 10 ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ON CONFLICT ( x ) WHERE x != 10 ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ON CONFLICT ( x ) WHERE x > 10 ; 
INSERT INTO x ( x ) VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ; 
INSERT INTO x ( x ) VALUES ( 'y' ) ,( 'y' ) ,( 'y' ) ,( 'y' ) ON CONFLICT ( x ) DO UPDATE SET = x x + 10 ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INT UNIQUE ) ; 
INSERT OR IGNORE INTO x ( x ) VALUES ( 'y' ) ON CONFLICT ( x ) ; 
INSERT OR IGNORE INTO x ( x ) VALUES ( 'y' ) ,( 10 ) ON CONFLICT ( x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INT , x INT , x INT , x INT ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 10 , 10 , 10 , 10 , 10 ) ON CONFLICT ( x ) DO UPDATE SET = x x ; 
CREATE TABLE x ( x INT , x INT , x INT , x INT , x INT ) ; 
INSERT INTO x ( x ) VALUES ( 10 ) ON CONFLICT ( x ) DO UPDATE SET = x x ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ON CONFLICT ( x ) DO UPDATE SET = x x , = x x + 10 WHERE x < x ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ON CONFLICT ( x ) DO UPDATE SET = x x + 10 ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ON CONFLICT ( x ) DO UPDATE SET = x x + 10 WHERE x < 10 ; 
INSERT INTO x VALUES ( 10 , 'y' ) ON CONFLICT ( x ) ; 
INSERT INTO x VALUES ( 10 , 'y' ) ON CONFLICT ( x , x ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ON CONFLICT ( x , x ) DO UPDATE SET = x x + 10 ; 
INSERT INTO x VALUES ( 10 , NULL , 'y' ) ON CONFLICT DO NOTHING ; 
INSERT INTO x VALUES ( 10 , NULL , 'y' ) ON CONFLICT ( x ) DO UPDATE SET = x 10 ; 
INSERT INTO x VALUES ( 10 , NULL , 'y' ) ON CONFLICT ( x ) DO UPDATE SET = x 'y' ; 
CREATE TABLE x ( x INT PRIMARY KEY , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 'y' , NULL ) ON CONFLICT DO NOTHING ; 
INSERT INTO x VALUES ( 10 , 'y' , NULL ) ON CONFLICT ( 'y' CONCAT x ) ; 
INSERT INTO x VALUES ( 10 , 'y' , NULL ) ON CONFLICT ( ( 'y' CONCAT x ) COLLATE x ) ; 
INSERT INTO x VALUES ( 10 , 'y' , NULL ) ON CONFLICT ( x CONCAT 'y' ) ; 
INSERT INTO x VALUES ( 10 , 'y' , NULL ) ON CONFLICT ( ( ( 'y' CONCAT x ) ) ) ; 
INSERT OR REPLACE INTO x VALUES ( 10 , 10 , 'y' ) ON CONFLICT ( x ) ; 
CREATE TABLE x ( x INT PRIMARY KEY , x UNIQUE , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x UNIQUE , x UNIQUE ) ; 
INSERT OR REPLACE INTO x VALUES ( 10 , 10 , 10 ) ON CONFLICT ( x ) ; 
INSERT OR REPLACE INTO x VALUES ( 10 , 10 , 10 ) ON CONFLICT ( x ) DO UPDATE SET = x x CONCAT 'y' ; 
INSERT INTO x VALUES ( 'y' , 10 , 10 , 10 ) ON CONFLICT ( x ) DO UPDATE SET = x x ; 
INSERT INTO x VALUES ( 'y' , 10 , 10 , 10 ) ON CONFLICT ( x , x ) DO UPDATE SET = x x CONCAT x ; 
INSERT INTO x VALUES ( 'y' , 10 , 10 , NULL ) ON CONFLICT ( x , x ) DO UPDATE SET = x x ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
UPDATE x SET x = x CONCAT 'y' CONCAT x ; 
INSERT INTO x ( x , x ) SELECT x CONCAT x , x CONCAT x FROM x ; 
SELECT count ( * ) , sum ( x ) , sum ( length ( x ) ) FROM x ; 
VACUUM x INTO 'file_name' ; 
INSERT INTO x SELECT NULL , x CONCAT 'y' CONCAT x , x CONCAT 'y' CONCAT x FROM x ; 
CREATE TABLE x ( x INT PRIMARY KEY , x INT NULL ) ; 
INSERT INTO x SELECT x , 10 FROM x ; 
DELETE FROM x WHERE ( x % 10 ) != 10 ; 
VACUUM x ; 
DROP VIEW IF EXISTS x ; 
CREATE VIEW x ( x ) AS SELECT * FROM x ; 
CREATE VIEW x ( x , x ) AS SELECT x , x + x , x - x FROM x ; 
CREATE VIEW x ( x , x , x , x ) AS SELECT x , x + x , x - x FROM x ; 
CREATE VIEW x AS SELECT x FROM x UNION SELECT x FROM x ORDER BY x ; 
SELECT x FROM x ORDER BY x LIMIT 10 ; 
SELECT 10 FROM x LIMIT 10 ; 
SELECT * FROM x AS a , x AS b WHERE x = x ; 
SELECT * FROM x AS b , x AS a WHERE x = x ; 
SELECT * FROM x AS a , x AS b , x AS c WHERE x = x AND x = x ; 
SELECT min ( x ) , min ( x ) , min ( x ) , min ( x ) , min ( x + x + x ) FROM x ; 
SELECT max ( x ) , max ( x ) , max ( x ) , max ( x ) , max ( x + x + x ) FROM x ; 
CREATE VIEW x ( x ) AS SELECT x + x FROM x ; 
CREATE VIEW x AS SELECT max ( x ) AS mx FROM SELECT x % 10 AS eo , count ( * ) AS cnt FROM x GROUP BY x ; 
SELECT x + 10 , x * 10 FROM x ; 
SELECT x + 10 , x FROM x , x WHERE x = 10 ; 
SELECT x + 10 , x FROM x , x WHERE x > 10 ; 
SELECT DISTINCT count ( * ) FROM x GROUP BY x ORDER BY 10 ; 
SELECT DISTINCT count ( * ) FROM x GROUP BY x ORDER BY 10 LIMIT 10 ; 
CREATE VIEW x AS SELECT DISTINCT count ( * ) FROM x GROUP BY x ORDER BY 10 LIMIT 10 ; 
SELECT * FROM x ORDER BY 10 DESC ; 
CREATE VIEW x AS SELECT DISTINCT x , count ( * ) FROM x GROUP BY x ORDER BY 10 LIMIT 10 ; 
SELECT * FROM SELECT * FROM x WHERE x = 'y' ; 
CREATE VIEW x AS SELECT x FROM x . x ; 
CREATE VIEW x AS SELECT x AS x , x AS y FROM x ; 
CREATE VIEW x AS SELECT x , * FROM x ; 
CREATE VIEW x AS SELECT x FROM SELECT x FROM x ; 
CREATE VIEW x AS SELECT x * 10 FROM x ; 
CREATE VIEW x AS SELECT max ( x ) AS mx , min ( x ) AS mn FROM x GROUP BY x ; 
SELECT * FROM x AS one , x AS two WHERE x = 10 ; 
CREATE VIEW x ( x , x ) AS SELECT x , AVG ( x ) FROM x ; 
SELECT x , typeof ( x ) , x , typeof ( x ) FROM x ; 
SELECT 10 IN ( x ) FROM x ; 
SELECT 10 IN ( x ) FROM SELECT x FROM x ; 
CREATE VIRTUAL TABLE x USING echo ; 
CREATE VIRTUAL TABLE x USING echo ( no_such_table ) ; 
CREATE VIRTUAL TABLE x USING echo ( treal ) ; 
CREATE VIRTUAL TABLE x USING echo ( treal , logmsg ) ; 
CREATE VIRTUAL TABLE x USING echo ( template ) ; 
CREATE TABLE x ( x INTEGER , x INTEGER , x ) ; 
SELECT x AS d , x AS e , x AS f FROM x ; 
SELECT * FROM x WHERE x >= 10 AND x <= 10 ; 
SELECT * FROM x WHERE x MATCH 'y' ; 
SELECT x FROM x ORDER BY x CONCAT 'y' ; 
SELECT * FROM x , x WHERE x = 10 ; 
UPDATE x SET x = 10 WHERE x < 10 ; 
UPDATE x SET x = x CONCAT x CONCAT x ; 
CREATE VIRTUAL TABLE x USING echo ( real_abc ) ; 
INSERT INTO x SELECT x CONCAT 'y' , x , x FROM x ; 
CREATE VIRTUAL TABLE x . x USING echo ( real_abc ) ; 
CREATE VIRTUAL TABLE x USING echo ( r , e_log ) ; 
CREATE VIRTUAL TABLE x USING echo ( del ) ; 
SELECT * FROM x WHERE x CONCAT 'y' MATCH 'y' ; 
CREATE VIRTUAL TABLE x USING echo ( c ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 'y' , 10 , 'y' ) ; 
CREATE VIRTUAL TABLE x USING echo_v2 ( t5 ) ; 
CREATE VIRTUAL TABLE x USING echo ( t6 ) ; 
CREATE VIRTUAL TABLE x USING echo ( t7 ) ; 
CREATE VIRTUAL TABLE x USING echo ( t8 ) ; 
CREATE VIRTUAL TABLE x USING echo ( t9 ) ; 
CREATE VIRTUAL TABLE x USING tclvar ; 
SELECT x , x , x FROM x WHERE x = 'y' ; 
UPDATE x SET x = ( SELECT x FROM x WHERE x = 'y' AND x ) ; 
CREATE VIRTUAL TABLE x USING echo ( elephant ) ; 
CREATE VIRTUAL TABLE x USING echo ( sreal ) ; 
CREATE TABLE x ( x VARCHAR(16) , x INTEGER , x FLOAT ) ; 
DELETE FROM x WHERE x > 'y' ; 
CREATE VIRTUAL TABLE x USING echo ( strings ) ; 
CREATE VIRTUAL TABLE x USING echo ( ab_r ) ; 
CREATE VIRTUAL TABLE x USING echo ( bc_r ) ; 
SELECT x , x , x FROM x NATURAL JOIN x ; 
CREATE VIRTUAL TABLE x USING echo ( abc ) ; 
CREATE VIRTUAL TABLE x USING echo ( def ) ; 
CREATE VIRTUAL TABLE x USING echo ( t2244 ) ; 
UPDATE x SET x = 'y' WHERE 10 ; 
CREATE VIRTUAL TABLE x USING echo ( t2250 ) ; 
CREATE VIRTUAL TABLE x USING echo ( t2260a_real ) ; 
CREATE VIRTUAL TABLE x USING echo ( t2260b_real ) ; 
SELECT * FROM x , x WHERE x = x AND x > 10 ; 
CREATE VIRTUAL TABLE x USING echo ( t0 ) ; 
INSERT INTO x SELECT 'y' ; 
INSERT INTO x VALUES ( NULL , 'y' , 0.1 ) ; 
INSERT INTO x ( x , x , x ) SELECT * FROM x ; 
INSERT INTO x SELECT 'y' , 'y' ; 
SELECT x , x , x , 'y' FROM x ORDER BY 10 ; 
SELECT * FROM x WHERE x = 10 AND NOT ( x < 10 ) ; 
SELECT x , x FROM x WHERE x = 'y' ORDER BY x ; 
SELECT x , x FROM x WHERE x = 'y' ; 
UPDATE x SET x = x CONCAT 'y' WHERE x = 'y' OR x = 'y' CONCAT 'y' ; 
UPDATE x SET x = x CONCAT 'y' WHERE x = 'y' OR x BETWEEN 'y' AND 'y' ; 
DELETE FROM x WHERE x BETWEEN 'y' AND 'y' OR x = 'y' ; 
INSERT INTO x SELECT blob ( 10 ) FROM x ; 
SELECT count ( x ) , sum ( x ) FROM x ; 
SELECT x >= 10 FROM x WHERE x = 'y' ; 
INSERT INTO x SELECT 10 - x , x , ( SELECT max ( x ) FROM x ) + 10 - x , x FROM x ; 
SELECT * FROM x WHERE x + 10 IN ( 10 , 10 , 10 , 10 ) ORDER BY 10 ; 
SELECT * FROM x WHERE x IN ( 10 , 10 , 10 , 10 ) ORDER BY 10 ; 
SELECT * FROM x WHERE x IN ( 10 , 10 , 10 , 10 , 10 ) ORDER BY 10 ; 
SELECT * FROM x WHERE x IN ( 10 , 10 , 10 , 10 ) ORDER BY 10 DESC ; 
SELECT * FROM x WHERE x IN ( SELECT x FROM x WHERE x IN ( 10 , 10 , 10 ) ) ORDER BY 10 ; 
SELECT * FROM x WHERE x + 10 IN ( SELECT x FROM x WHERE x IN ( 10 , 10 , 10 ) ) ORDER BY 10 ; 
SELECT * FROM x WHERE x IN ( 10 , 10 ) ORDER BY 10 ; 
SELECT * FROM x WHERE x + 10 IN ( 10 , 10 ) ORDER BY 10 ; 
SELECT * FROM x WHERE x = 10 AND x IN ( 10 , 10 ) ORDER BY 10 ; 
SELECT * FROM x WHERE x IN ( 10 , 10 ) AND x NOT IN ( 10 , 10 ) ORDER BY 10 ; 
SELECT * FROM x WHERE x IN ( 10 , 10 ) AND x IN ( 10 , 10 ) ORDER BY 10 ; 
INSERT INTO x SELECT x , 10 - x , x FROM x ; 
SELECT count ( * ) , sum ( x ) , sum ( x ) , sum ( x ) FROM x ; 
SELECT x FROM x ORDER BY x , x LIMIT 10 ; 
SELECT x FROM x ORDER BY x , x DESC LIMIT 10 ; 
SELECT x FROM x WHERE x > 10 ORDER BY x , x , x LIMIT 10 ; 
SELECT x FROM x WHERE x >= 10 ORDER BY x , x DESC , x LIMIT 10 ; 
SELECT x FROM x WHERE x > 10 AND x < 10 ORDER BY x ; 
SELECT x FROM x WHERE x >= 10 AND x <= 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x > 10 ORDER BY x LIMIT 10 ; 
SELECT x FROM x WHERE x = 10 AND x > 10 ORDER BY x DESC LIMIT 10 ; 
SELECT x FROM x WHERE x = 10 AND x > 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x >= 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x >= 10 AND x < 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x >= 10 AND x <= 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x > 10 AND x <= 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x > 10 AND x < 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x >= 10 AND x < 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x >= 10 AND x <= 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x > 10 AND x <= 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x > 10 AND x < 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x < 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x <= 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x > 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x >= 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 AND x < 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x <= 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x = 10 AND x < 10 ORDER BY x DESC LIMIT 10 ; 
SELECT * FROM x WHERE x < 10 ORDER BY x DESC ; 
SELECT count ( * ) FROM x WHERE tclvar ( 'y' ) ; 
DELETE FROM x WHERE ( x = 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x BETWEEN 10 AND 10 ) OR ( x = 10 ) OR ( x = 10 ) ; 
SELECT * FROM x ORDER BY x DESC , x DESC ; 
SELECT * FROM x ORDER BY x DESC , x ASC ; 
SELECT * FROM x ORDER BY x ASC , x DESC ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT UNIQUE , x CHAR(100) ) ; 
SELECT x AS alias FROM x , x WHERE x = 10 ; 
SELECT * FROM x CROSS JOIN x WHERE x = 10 AND x = 'y' ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER NOT NULL ) ; 
SELECT x , x FROM x , x WHERE x > x ; 
SELECT DISTINCT x FROM x LEFT JOIN x ON x = x ORDER BY x IS NULL ; 
SELECT DISTINCT x FROM x LEFT JOIN x ON x = x ORDER BY x ; 
CREATE TABLE x ( x INT UNIQUE NOT NULL , x INT UNIQUE NOT NULL , x , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INT , x INT ) ; 
SELECT count ( * ) FROM x LEFT JOIN x ON ( x = x ) WHERE ifnull ( x , 10 ) >= 10 ; 
SELECT * FROM x WHERE x = ( SELECT * FROM SELECT count ( * ) FROM x LIMIT 10 ORDER BY 10 LIMIT 10 ) AND ( x = 10 OR x = 10 ) ; 
INSERT INTO x ( x ) VALUES ( NULL ) ,( NULL ) ,( 10 ) ,( NULL ) ,( NULL ) ; 
SELECT count ( * ) FROM x LEFT JOIN x ON x IS NOT NULL ; 
SELECT * FROM x , x WHERE x = x AND x = 10 ; 
SELECT x FROM x WHERE x > 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x > 10 AND x < 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x > AND x < 10 ; 
SELECT x FROM x WHERE x > AND x < 10 ORDER BY x ; 
SELECT x FROM x WHERE x > AND x < 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x > 10 AND x < ; 
SELECT x FROM x WHERE x > 10 AND x < ORDER BY x ; 
SELECT x FROM x WHERE x > 10 AND x < ORDER BY x DESC ; 
SELECT x FROM x WHERE x > AND x < ; 
SELECT x FROM x WHERE x > AND x < ORDER BY x ; 
SELECT x FROM x WHERE x > AND x < ORDER BY x DESC ; 
SELECT x FROM x WHERE x >= AND x <= 10 ; 
SELECT x FROM x WHERE x >= AND x <= 10 ORDER BY x ; 
SELECT x FROM x WHERE x >= AND x <= 10 ORDER BY x DESC ; 
SELECT x FROM x WHERE x >= 10 AND x <= ; 
SELECT x FROM x WHERE x >= 10 AND x <= ORDER BY x ; 
SELECT x FROM x WHERE x >= 10 AND x <= ORDER BY x DESC ; 
SELECT x FROM x WHERE x >= AND x <= ; 
SELECT x FROM x WHERE x >= AND x <= ORDER BY x ; 
SELECT x FROM x WHERE x >= AND x <= ORDER BY x DESC ; 
SELECT * FROM x WHERE 'y' BETWEEN 10 AND x ; 
SELECT * FROM x WHERE 'y' >= 10 AND 'y' <= x ; 
SELECT 'y' BETWEEN 10 AND x FROM x ; 
SELECT 'y' >= 10 AND 'y' <= x FROM x ; 
SELECT * FROM x WHERE x = 10 ORDER BY random () ; 
SELECT * FROM x WHERE x = 10 AND x = 10 ORDER BY random () ; 
SELECT * FROM x WHERE x = 10 AND x = 10 AND x = 10 ORDER BY random () ; 
SELECT x , x FROM x CROSS JOIN x WHERE x = x OR x = 'y' ; 
SELECT x , x FROM x CROSS JOIN x WHERE 'y' = x OR x = x ; 
SELECT x , x FROM x CROSS JOIN x WHERE x = 'y' OR x = x ; 
SELECT x FROM x WHERE x = 10 AND x = 10 ORDER BY x ; 
SELECT x FROM x WHERE x IN ( 10 , 10 , 10 , 10 , 10 ) ; 
SELECT x FROM x WHERE x = 10 OR ( x = 10 AND x = 10 ) ORDER BY x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INT , x CHAR(100) ) ; 
SELECT * FROM x WHERE ( 10 = 10 AND x = 10 ) OR x = 10 ; 
INSERT INTO x ( x ) VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT * FROM x , x LEFT JOIN x ON x = x WHERE x = 10 AND x = x ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 'y' , 'y' ) ; 
SELECT * FROM x WHERE x = 10 AND x IS NOT NULL ; 
SELECT x FROM x LEFT JOIN x ON x = x ; 
SELECT x FROM x LEFT JOIN x ON x = x WHERE x IS NULL ; 
SELECT x FROM x LEFT JOIN x ON x = x WHERE x IS NOT NULL ; 
SELECT x FROM x LEFT JOIN x ON x = x AND x IS NULL ; 
SELECT x FROM x LEFT JOIN x ON x = x AND x IS NOT NULL ; 
SELECT DISTINCT x FROM x LEFT JOIN x ON x = x ; 
SELECT x FROM x WHERE x IN ( 10 , 10 , 10 , 10 ) AND x IN ( 10 , 10 , NULL , 10 ) AND x != 10 ; 
SELECT x FROM x WHERE x IN ( 10 , 10 , NULL , 10 ) AND x IN ( 10 , 10 , 10 ) AND x != 10 ; 
SELECT * FROM x WHERE x = NULL AND x IN ( 'y' ) ; 
INSERT INTO x SELECT x * 10 FROM x ; 
SELECT sum ( ( SELECT x FROM x WHERE x = x AND x = x AND x < NULL ) ) FROM x ; 
SELECT * FROM x LEFT JOIN x ON x = x AND x = 10 ; 
SELECT * FROM x LEFT JOIN x ON x = x AND 10 = x ; 
SELECT * FROM x LEFT JOIN x ON x = x WHERE x = 10 ; 
SELECT * FROM x LEFT JOIN x ON x = x WHERE 10 = x ; 
SELECT * FROM x WHERE x < 10 OR x < 10 ORDER BY x ; 
DELETE FROM x WHERE x < 10 OR x < 10 ; 
CREATE TABLE x ( x , x TEXT , x ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 0.1 ) ; 
INSERT INTO x VALUES ( NULL , 0.1 , 'y' ) ; 
INSERT INTO x VALUES ( 0.1 , 10 , NULL ) ; 
INSERT INTO x VALUES ( 'y' , 0.1 , 'y' ) ; 
INSERT INTO x VALUES ( 0.1 , 10 , 0.1 ) ; 
INSERT INTO x VALUES ( 0.1 , NULL , 'y' ) ; 
INSERT INTO x VALUES ( 'y' , 0.1 , NULL ) ; 
INSERT INTO x VALUES ( 0.1 , 10 , 'y' ) ; 
INSERT INTO x VALUES ( 0.1 , 'y' , 10 ) ; 
INSERT INTO x VALUES ( 'y' , NULL , 0.1 ) ; 
INSERT INTO x VALUES ( 0.1 , 'y' , NULL ) ; 
SELECT x FROM x WHERE x = 'y' AND ( x = 10 OR x = 10 ) ORDER BY x ; 
SELECT x FROM x WHERE ( x = 'y' OR x = 'y' ) AND x = 10 ORDER BY x ; 
SELECT x FROM x WHERE x = 10 OR x > 10 ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x , x INTEGER ) ; 
INSERT INTO x VALUES ( 10 , 10 , 'y' , 10 , 'y' ) ; 
SELECT x FROM x WHERE ( x = 10 AND x = 10 ) OR ( x = 10 AND x = 10 ) ; 
SELECT x , x FROM x WHERE ( x = 10 AND x = 10 ) OR ( x = 10 AND x = 10 ) ; 
SELECT x FROM x WHERE ( x = 10 AND x = 10 ) OR ( x = 10 AND x = 10 ) OR ( x = 10 AND x = 10 ) ; 
SELECT x FROM x WHERE ( x = 10 AND ( x = 10 OR x = 10 ) ) OR ( x = 10 AND x = 10 ) ; 
SELECT x , x FROM x JOIN x ON x = x OR x = 10 ORDER BY x , x ; 
CREATE TABLE x ( x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x , x ) ; 
UPDATE x SET x = x * x + 10 ; 
INSERT INTO x SELECT x + 10 , ( x + 10 ) * 10 FROM x ; 
CREATE UNIQUE INDEX x ON x ( x , x , x , x ) ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY NOT NULL , x INTEGER ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , NULL ) ,( 10 , NULL ) ,( 10 , NULL ) ,( 10 , NULL ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , NULL ) ,( 10 , NULL ) ; 
SELECT * FROM x , x WHERE x = 10 AND x = x ; 
CREATE TABLE x ( x INT , x , x , x ) ; 
INSERT INTO x VALUES ( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ,( 10 , 10 , 10 , 10 ) ; 
SELECT count ( * ) FROM x LEFT JOIN x ON x = x AND x = 'y' ; 
SELECT count ( * ) FROM x LEFT JOIN x ON likely ( x = x ) AND x = 'y' ; 
SELECT likely ( x ) , x FROM x , x ORDER BY 10 , 10 ; 
SELECT unlikely ( x ) , x FROM x , x ORDER BY 10 , 10 ; 
SELECT likelihood ( x , 0.1 ) , x FROM x , x ORDER BY 10 , 10 ; 
SELECT coalesce ( x , x ) , x FROM x , x ORDER BY 10 , 10 ; 
SELECT LIKELY ( x ) <= 'y' FROM x ; 
SELECT * FROM x WHERE LIKELY ( x ) <= 'y' ; 
SELECT ( x ) <= 'y' FROM x ; 
SELECT * FROM x WHERE ( x ) <= 'y' ; 
SELECT unlikely ( x ) <= 'y' , likelihood ( x , 0.1 ) <= 'y' FROM x ; 
SELECT * FROM x WHERE unlikely ( x ) <= 'y' ; 
SELECT * FROM x WHERE likelihood ( x , 0.1 ) <= 'y' ; 
SELECT unlikely ( x <= 'y' ) , likely ( x <= 'y' ) , likelihood ( x <= 'y' , 0.1 ) FROM x ; 
SELECT * FROM x WHERE unlikely ( x <= 'y' ) ; 
SELECT * FROM x WHERE likelihood ( x <= 'y' , 0.1 ) ; 
INSERT INTO x VALUES ( 'y' , 10 , 10 , 'y' ) ; 
CREATE TABLE x ( x INT PRIMARY KEY , x , x , x , x ) ; 
CREATE VIEW x AS SELECT * FROM x UNION ALL SELECT * FROM x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x INTEGER NOT NULL , x INTEGER , x INTEGER ) ; 
SELECT x FROM x JOIN x ON x = x WHERE x = 10 AND x = 10 ; 
SELECT x , sum ( x ) OVER( PARTITION BY x ) FROM x ; 
SELECT x , sum ( x ) OVER( PARTITION BY x ) FROM x ORDER BY x ; 
SELECT x , sum ( x ) OVER( ) FROM x ORDER BY x ; 
SELECT x , sum ( x ) OVER( ORDER BY x ) FROM x ; 
SELECT ntile ( 10 ) OVER( ORDER BY x ) FROM x ; 
SELECT ntile ( 'y' ) OVER( ORDER BY x ) FROM x ; 
INSERT INTO x VALUES ( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
SELECT x , count ( * ) OVER( ORDER BY x ) FROM x ; 
SELECT * FROM x , SELECT x , count ( * ) OVER( ORDER BY x ) FROM x ; 
SELECT nth_value ( x , 10 ) FROM x ; 
SELECT * FROM x WHERE nth_value ( x , 10 ) OVER( ORDER BY x ) ; 
SELECT count ( * ) FROM x GROUP BY x HAVING nth_value ( x , 10 ) OVER( ORDER BY x ) ; 
SELECT count ( * ) FROM x GROUP BY nth_value ( x , 10 ) OVER( ORDER BY x ) ; 
SELECT count ( * ) FROM x LIMIT nth_value ( x , 10 ) OVER( ) ; 
SELECT trim ( x ) OVER( ORDER BY x ) FROM x ; 
SELECT max ( x ) OVER x FROM x ; 
CREATE TABLE x ( x TEXT PRIMARY KEY , x , x ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ; 
CREATE INDEX x ON x ( x ) WHERE sum ( x ) OVER( ) ; 
CREATE INDEX x ON x ( x ) WHERE lead ( x ) OVER( ) ; 
SELECT x , x , lead ( x , 10 ) OVER( ORDER BY x ) AS x FROM x WHERE x > 10 ORDER BY x LIMIT 10 ; 
SELECT x , rank () OVER( ORDER BY x ) FROM x ; 
SELECT x , rank () OVER( ORDER BY x DESC ) FROM x ; 
SELECT x , x + 10 , x + 10 FROM SELECT x IN ( SELECT ( row_number () OVER( ) ) FROM x ) AS y FROM x ; 
INSERT INTO x VALUES ( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ; 
SELECT x , sum ( x ) OVER( PARTITION BY x IN ( SELECT x FROM x ) ) FROM x ; 
SELECT x , sum ( x ) OVER x FROM x ; 
SELECT 10 + sum ( x ) OVER( ORDER BY x ) FROM x ORDER BY 10 + sum ( x ) OVER( ORDER BY x ) DESC ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x TEXT , x TEXT , x INTEGER ) ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ; 
SELECT x , sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ; 
SELECT x , sum ( x ) OVER( ORDER BY x DESC RANGE BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY x ASC ; 
INSERT INTO x VALUES ( NULL , 10 ) ,( NULL , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ,( 'y' , 10 ) ; 
INSERT INTO x VALUES ( NULL ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ,( 10 ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , NULL ) ,( 10 , 'y' , 'y' , 'y' ) ,( 10 , 'y' , 'y' , NULL ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , 0.1 ) ,( 10 , 'y' , 'y' , NULL ) ,( 10 , 'y' , 'y' , 'y' ) ,( 10 , 'y' , 'y' , 'y' ) ,( 10 , 'y' , 'y' , NULL ) ; 
SELECT x IN ( SELECT sum ( x ) OVER( ORDER BY x + x ) FROM x ) FROM SELECT * FROM x ; 
SELECT x IN ( SELECT sum ( x ) OVER( PARTITION BY x ORDER BY x + x ) FROM x ) FROM SELECT * FROM x ; 
SELECT x IN ( SELECT sum ( x ) OVER( ROWS BEWTEEN x FOLLOWING AND UNBOUNDED FOLLOWING ) FROM x ) FROM SELECT * FROM x ; 
SELECT x IN ( SELECT sum ( x ) OVER( ROWS BEWTEEN CURRENT ROW AND x FOLLOWING ) FROM x ) FROM SELECT * FROM x ; 
CREATE VIEW x AS SELECT NULL INTERSECT SELECT NULL ORDER BY s () OVER x ; 
SELECT x , sum ( x ) OVER( PARTITION BY x ORDER BY x ) FROM x ; 
SELECT sum ( x ) OVER( ) FROM x ; 
SELECT sum ( x ) OVER( PARTITION BY x ) FROM x ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT x , sum ( x ) OVER( PARTITION BY ( x % 10 ) ORDER BY x ) FROM x ORDER BY x ; 
SELECT x , sum ( x ) OVER( RANGE BEWTEEN CURRENT ROW AND CURRENT ROW ) FROM x ORDER BY x ; 
SELECT x , sum ( x ) OVER( RANGE BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY x ; 
SELECT x , sum ( x ) OVER( RANGE BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ORDER BY x ; 
SELECT x , sum ( x ) OVER( ROWS BEWTEEN CURRENT ROW AND CURRENT ROW ) FROM x ORDER BY 10 , 10 ; 
SELECT x , sum ( x ) OVER( ROWS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 ; 
SELECT x , sum ( x ) OVER( ROWS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 ; 
SELECT x , sum ( x ) OVER( ROWS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT max ( x ) , max ( x ) OVER( ORDER BY x ) FROM x GROUP BY x ; 
SELECT max ( x ) OVER( ORDER BY max ( x ) ) FROM x GROUP BY x ; 
SELECT abs ( max ( x ) OVER( ORDER BY x ) ) FROM x GROUP BY x ; 
SELECT sum ( x ) OVER( ORDER BY x RANGE BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 10 ) ,( 10 , 10 , NULL ) ,( 10 , 10 , 10 ) ,( 10 , 10 , NULL ) ,( 10 , 10 , 10 ) ,( 10 , 10 , 10 ) ; 
SELECT x , min ( x ) OVER( PARTITION BY x ORDER BY x ) FROM x ; 
SELECT x , lead ( x , 10 ) OVER( PARTITION BY x ORDER BY x ) FROM x ; 
SELECT x , lag ( x , 10 ) OVER( PARTITION BY x ORDER BY x ) FROM x ; 
SELECT NTILE ( 10 ) OVER( ORDER BY x ) - 10 AS nt FROM x ; 
CREATE VIEW x AS SELECT NTILE ( 10 ) OVER( ORDER BY x ) - 10 AS nt FROM x ; 
SELECT win ( x ) OVER( ORDER BY x ) , median ( x ) OVER( ORDER BY x ) FROM x ; 
SELECT sumint ( x ) OVER( ORDER BY x ) FROM x ORDER BY x ; 
SELECT sumint ( x ) OVER( ORDER BY x ROWS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY x ; 
SELECT sum ( x ) OVER( ORDER BY x ROWS BEWTEEN 10 PRECEDING AND CURRENT ROW ) FROM x ; 
CREATE TABLE x ( x , x INTEGER ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 0.1 ) ,( 10 , 0.1 ) ,( 10 , 0.1 ) ,( 10 , 0.1 ) ,( 10 , 0.1 ) ; 
INSERT INTO x ( x , x ) VALUES ( 10 , 'y' ) ,( 'y' , 'y' ) ,( 10 , 'y' ) ; 
SELECT x , ( SELECT x FROM x WHERE x = x ) FROM x ORDER BY x ; 
SELECT x , ( SELECT x FROM x WHERE x = x ) , sum ( x ) OVER( ORDER BY x ) FROM x ORDER BY x ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT x , sum ( x ) FROM x GROUP BY x ORDER BY 10 ; 
SELECT x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND CURRENT ROW ) FROM x ORDER BY 10 ; 
SELECT x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 ; 
SELECT x , sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 ; 
SELECT x , sum ( x ) OVER( ORDER BY x DESC RANGE BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 ; 
CREATE TABLE x ( x TEXT , x TEXT , x INTEGER ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ,( 'y' , 'y' , 10 ) ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN UNBOUNDED PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 PRECEDING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN CURRENT ROW AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , rank () OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , max ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , min ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) FROM x ORDER BY 10 , 10 , 10 ; 
SELECT x , x , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING EXCLUDE CURRENT ROW ) , sum ( x ) OVER( ORDER BY x , x GROUPS BEWTEEN 10 FOLLOWING AND UNBOUNDED FOLLOWING ) FROM x ORDER BY 10 , 10 , 10 ; 
INSERT INTO x VALUES ( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
INSERT INTO x VALUES ( NULL , 10 ) ,( NULL , 10 ) ,( NULL , 10 ) ,( 10 , 10 ) ,( 10 , 10 ) ; 
SELECT sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 ; 
SELECT sum ( x ) OVER( ORDER BY x DESC RANGE BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 ; 
SELECT sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS FIRST ; 
SELECT sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS LAST ; 
SELECT sum ( x ) OVER( ORDER BY x DESC RANGE BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS FIRST ; 
SELECT sum ( x ) OVER( ORDER BY x DESC RANGE BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS LAST ; 
SELECT sum ( x ) OVER( ORDER BY x NULLS FIRST RANGE BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS FIRST ; 
SELECT sum ( x ) OVER( ORDER BY x NULLS LAST RANGE BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS LAST ; 
SELECT sum ( x ) OVER( ORDER BY x NULLS FIRST ROWS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS FIRST ; 
SELECT sum ( x ) OVER( ORDER BY x NULLS LAST ROWS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS LAST ; 
SELECT sum ( x ) OVER( ORDER BY x DESC NULLS LAST ROWS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS FIRST ; 
SELECT sum ( x ) OVER( ORDER BY x DESC NULLS LAST ROWS BEWTEEN 10 PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS LAST ; 
SELECT sum ( x ) OVER( ORDER BY x ASC NULLS LAST RANGE BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS LAST ; 
SELECT sum ( x ) OVER( ORDER BY x DESC NULLS FIRST RANGE BEWTEEN UNBOUNDED PRECEDING AND 10 FOLLOWING ) FROM x ORDER BY 10 NULLS LAST ; 
INSERT INTO x VALUES ( NULL , 'y' , 10 ) ,( NULL , 'y' , 10 ) ,( NULL , 'y' , 10 ) ,( 'y' , NULL , 10 ) ,( 'y' , NULL , 10 ) ,( 'y' , NULL , 10 ) ,( NULL , 'y' , 10 ) ,( NULL , NULL , 10 ) ,( NULL , NULL , 10 ) ; 
SELECT x , x , dense_rank () OVER( ORDER BY x ) FROM x ; 
SELECT x , x , dense_rank () OVER( PARTITION BY x ORDER BY x ) FROM x ; 
SELECT x , x , dense_rank () OVER( ORDER BY x ) , dense_rank () OVER( PARTITION BY x ORDER BY x ) FROM x ; 
SELECT x , x , dense_rank () OVER( ORDER BY x ) , dense_rank () OVER( PARTITION BY x ORDER BY x ) FROM x ORDER BY x ; 
SELECT EXISTS ( SELECT 10 FROM x ORDER BY sum ( x ) OVER( ) ) FROM x ; 
SELECT x , x + 10 , x + 10 FROM SELECT x IN ( SELECT min ( x ) OVER( ) , ( abs ( row_number () OVER( ) ) + 10 ) / 10 , max ( x ) OVER( ) FROM x ) AS y FROM x ; 
SELECT x , x = count ( * ) , 'y' FROM x GROUP BY x ; 
SELECT x , x = count ( * ) , group_concat ( x ) OVER( ) FROM x GROUP BY x ; 
SELECT sum ( x ) OVER( ) , sum ( x ) OVER( ORDER BY x ) , sum ( x ) OVER( PARTITION BY x ORDER BY x ) , sum ( x ) OVER( PARTITION BY x , x ORDER BY x ) , sum ( x ) OVER( PARTITION BY x , x , x ORDER BY x ) FROM x ; 
SELECT sum ( x ) OVER( PARTITION BY x ORDER BY x ) FROM x ORDER BY x ; 
CREATE TABLE x ( x INTEGER PRIMARY KEY , x CHAR(1) , x FLOAT ) ; 
INSERT INTO x VALUES ( 10 , 'y' , 0.1 ) ,( 10 , 'y' , 0.1 ) ,( 10 , 'y' , 0.1 ) ,( 10 , 'y' , 0.1 ) ,( 10 , 'y' , 0.1 ) ,( 10 , 'y' , NULL ) ,( 10 , 'y' , NULL ) ; 
WITH y AS ( SELECT Row_Number () OVER( x ) FROM x ) SELECT * FROM x ; 
SELECT x , sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ; 
SELECT x , sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ; 
SELECT x , sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 PRECEDING AND 10 PRECEDING EXCLUDE NO OTHERS ) FROM x ; 
SELECT x , sum ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 FOLLOWING AND 10 FOLLOWING EXCLUDE NO OTHERS ) FROM x ; 
SELECT x , max ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ; 
SELECT x , min ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 FOLLOWING AND 10 FOLLOWING ) FROM x ; 
SELECT x , max ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ; 
SELECT x , min ( x ) OVER( ORDER BY x RANGE BEWTEEN 10 PRECEDING AND 10 PRECEDING ) FROM x ; 
SELECT sum ( x ) OVER( ) AS xyz FROM x ORDER BY sum ( x ) ; 
WITH tmp AS ( SELECT * FROM x ) SELECT x FROM x ; 
CREATE TABLE x ( x INTEGER NULL PRIMARY KEY , x TEXT ) ; 
CREATE VIEW x AS SELECT max ( x ) , min ( x ) FROM x GROUP BY x ; 
SELECT * FROM x . x AS a , x . x AS b , x . x AS c , x . x AS d ; 
WITH x1 AS ( SELECT * FROM x ) SELECT sum ( x ) FROM x ; 
WITH x1 AS ( SELECT * FROM x ) SELECT ( SELECT sum ( x ) FROM x ) ; 
CREATE TABLE x AS SELECT 10 AS x ; 
WITH x1 AS ( SELECT * FROM x ) SELECT ( SELECT sum ( x ) FROM x ) , ( SELECT max ( x ) FROM x ) ; 
WITH x1 AS ( SELECT * FROM x ) SELECT ( SELECT sum ( x ) FROM x ) , ( SELECT max ( x ) FROM x ) , x FROM x ; 
CREATE VIEW x AS SELECT * FROM x , x . x ; 
WITH tmp AS ( SELECT * FROM x ) SELECT * FROM x ; 
SELECT * , 'y' FROM x ORDER BY x DESC , x DESC ; 
REPLACE INTO x VALUES ( 'y' , 'y' , 'y' , 'y' ) ; 
UPDATE x SET x = 0.1 WHERE x = 'y' ; 
INSERT OR REPLACE INTO x SELECT * FROM x ; 
CREATE TABLE x ( x INT CHECK( x != 10 ) , x TEXT PRIMARY KEY ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 10 , 10 , 'y' ) ; 
INSERT INTO x VALUES ( 'y' , 'y' , 0.1 , 'y' , 'y' , 0.1 ) ; 
INSERT INTO x VALUES ( NULL , 10 , 10 , 10 , 10 ) ; 
INSERT INTO x VALUES ( 10 , 10 , NULL , 10 , 10 ) ; 
SELECT x FROM x ORDER BY x DESC LIMIT 10 ; 
SELECT * , 'y' FROM x 'y' ; 
SELECT x FROM x WHERE x = zeroblob ( 10 ) ; 
SELECT CAST ( zeroblob ( 10 ) AS INTEGER ) ; 
SELECT CAST ( zeroblob ( 10 ) AS TEXT ) ; 
SELECT 'y' AS a , zeroblob ( 10 ) AS b FROM x ORDER BY x , x ; 
SELECT length ( zeroblob ( 10 ) ) ; 
SELECT zeroblob ( 10 * 10 * 10 ) ; 
SELECT quote ( zeroblob ( 10 * 10 * 10 ) ) ; 
SELECT quote ( zeroblob ( 10 ) ) ; 
SELECT quote ( test_zeroblob ( 10 ) ) ; 
SELECT x , quote ( x ) , length ( x ) , x FROM x ; 
INSERT INTO x ( x , x , x , x , x , x ) VALUES ( 'y' , 'y' , 10 , 10 , 'y' , 10 ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 'y' , 10 , 10 , 'y' , 10 ) ; 
INSERT INTO x ( x , x , x , x ) VALUES ( 'y' , 10 , 'y' , 10 ) ; 
INSERT INTO x ( x , x , x ) VALUES ( 'y' , 'y' , 10 ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 'y' , 'y' , 10 , 'y' , 10 ) ; 
INSERT INTO x ( x , x , x , x , x ) VALUES ( 'y' , NULL , 10 , 'y' , 10 ) ; 
SELECT x , x , x , x FROM x 'y' ; 
SELECT zipfile_cds ( x ) FROM x 'y' ; 
SELECT x , x , x , x , x FROM x 'y' ; 
INSERT INTO x ( x , x ) VALUES ( 'y' , NULL ) ; 
REPLACE INTO x ( x , x ) VALUES ( 'y' , 'y' ) ,( 'y' , 'y' ) ; 
INSERT OR IGNORE INTO x ( x , x ) VALUES ( 'y' , 'y' ) ,( 'y' , 'y' ) ; 
UPDATE x SET x = x CONCAT 'y' ; 
SELECT x FROM x 'y' ORDER BY 10 ; 
SELECT x FROM x JOIN x JOIN x x ORDER BY 10 ; 
SELECT x FROM x JOIN x JOIN x 'y' , x ORDER BY 10 ; 
CREATE VIRTUAL TABLE x USING zipfile ( testzip ) ; 
